#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ALADDIN Family Web Interface - –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
–¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π, –¥–µ—Ç–µ–π –∏ –ø–æ–∂–∏–ª—ã—Ö –ª—é–¥–µ–π

–ê–≤—Ç–æ—Ä: ALADDIN Security Team
–í–µ—Ä—Å–∏—è: 2.5
–î–∞—Ç–∞: 2025-01-26
"""

import os
import sys
from datetime import datetime
from typing import Any, Dict, Optional

import uvicorn
from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates
from pydantic import BaseModel

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É

try:
    from security.family.child_protection import ChildProtection

    ALADDIN_AVAILABLE = True
except ImportError as e:
    print(f"Warning: ALADDIN modules not available: {e}")
    ALADDIN_AVAILABLE = False

# SFM (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π)
try:
    from core.sfm import SafeFunctionManager

    SFM_AVAILABLE = True
except ImportError:
    SFM_AVAILABLE = False

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ)
try:
    from security.ai_agents.elderly_interface_manager import (
        ElderlyInterfaceManager,
    )

    ELDERLY_MANAGER_AVAILABLE = True
except ImportError:
    ELDERLY_MANAGER_AVAILABLE = False

# FamilyCommunicationHub –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω
FAMILY_HUB_AVAILABLE = False

# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="üõ°Ô∏è ALADDIN Family Web Interface",
    description="–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π, –¥–µ—Ç–µ–π –∏ –ø–æ–∂–∏–ª—ã—Ö –ª—é–¥–µ–π",
    version="2.5.0",
    docs_url="/docs",
    redoc_url="/redoc",
)

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
templates = Jinja2Templates(directory="templates")


# –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
class UserProfile(BaseModel):
    """–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    user_id: str
    name: str
    age: int
    role: str  # parent, child, elderly
    preferences: Dict[str, Any]
    security_level: str


class ChildActivity(BaseModel):
    """–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–±–µ–Ω–∫–∞"""

    child_id: str
    activity_type: str
    duration: int
    timestamp: datetime
    content_category: str
    safety_score: float


class ParentNotification(BaseModel):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π"""

    notification_id: str
    child_id: str
    message: str
    severity: str
    timestamp: datetime
    action_required: bool


class ElderlyAlert(BaseModel):
    """–ê–ª–µ—Ä—Ç –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö –ª—é–¥–µ–π"""

    alert_id: str
    user_id: str
    alert_type: str
    message: str
    timestamp: datetime
    location: Optional[str] = None


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
if ALADDIN_AVAILABLE:
    child_protection = ChildProtection()
    # ParentalControls —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –ø–æ–∫–∞ –æ—Ç–∫–ª—é—á–∏–º
    parental_controls = None
else:
    child_protection = None
    parental_controls = None

if SFM_AVAILABLE:
    sfm = SafeFunctionManager()
else:
    sfm = None

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ)
if ELDERLY_MANAGER_AVAILABLE:
    elderly_manager = ElderlyInterfaceManager()
else:
    elderly_manager = None

if FAMILY_HUB_AVAILABLE:
    # FamilyCommunicationHub —Ç—Ä–µ–±—É–µ—Ç family_id, –ø–æ–∫–∞ –æ—Ç–∫–ª—é—á–∏–º
    family_hub = None
else:
    family_hub = None

# HTML —à–∞–±–ª–æ–Ω—ã
PARENT_DASHBOARD_HTML = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üõ°Ô∏è ALADDIN - –ü–∞–Ω–µ–ª—å —Ä–æ–¥–∏—Ç–µ–ª–µ–π</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
               background: #f5f7fa; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                  color: white; padding: 20px; text-align: center; }
        .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
        .dashboard-grid { display: grid;
                         grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                         gap: 20px; margin-top: 20px; }
        .card { background: white; border-radius: 10px; padding: 20px;
                box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
        .card h3 { color: #333; margin-bottom: 15px; }
        .child-card { border-left: 4px solid #4CAF50; }
        .alert-card { border-left: 4px solid #f44336; }
        .stats-grid { display: grid;
                     grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                     gap: 15px; }
        .stat-item { text-align: center; padding: 15px;
                    background: #f8f9fa; border-radius: 8px; }
        .stat-value { font-size: 24px; font-weight: bold; color: #667eea; }
        .stat-label { color: #666; font-size: 14px; }
        .btn { background: #667eea; color: white; border: none;
               padding: 10px 20px; border-radius: 5px; cursor: pointer; margin: 5px; }
        .btn:hover { background: #5a6fd8; }
        .notification { background: #fff3cd; border: 1px solid #ffeaa7;
                       padding: 10px; border-radius: 5px; margin: 10px 0; }
        .alert { background: #f8d7da; border: 1px solid #f5c6cb;
                 padding: 10px; border-radius: 5px; margin: 10px 0; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõ°Ô∏è ALADDIN - –ü–∞–Ω–µ–ª—å —Ä–æ–¥–∏—Ç–µ–ª–µ–π</h1>
        <p>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–µ–π —Å–µ–º—å–∏ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º</p>
    </div>

    <div class="container">
        <div class="stats-grid">
            <div class="stat-item">
                <div class="stat-value" id="total-children">0</div>
                <div class="stat-label">–î–µ—Ç–µ–π –æ–Ω–ª–∞–π–Ω</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="blocked-threats">0</div>
                <div class="stat-label">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ —É–≥—Ä–æ–∑</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="screen-time">0—á</div>
                <div class="stat-label">–û–±—â–µ–µ –≤—Ä–µ–º—è —ç–∫—Ä–∞–Ω–∞</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="safety-score">100%</div>
                <div class="stat-label">–£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</div>
            </div>
        </div>

        <div class="dashboard-grid">
            <div class="card child-card">
                <h3>üë∂ –î–µ—Ç–∏</h3>
                <div id="children-list">
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
                </div>
            </div>

            <div class="card alert-card">
                <h3>üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <div id="notifications-list">
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...</p>
                </div>
            </div>

            <div class="card">
                <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <div id="statistics">
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
                </div>
            </div>

            <div class="card">
                <h3>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <button class="btn" onclick="openSettings()">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</button>
                <button class="btn" onclick="openReports()">–û—Ç—á–µ—Ç—ã</button>
                <button class="btn" onclick="openEmergency()">–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</button>
            </div>
        </div>
    </div>

    <script>
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        setInterval(updateDashboard, 30000);

        async function updateDashboard() {
            try {
                const response = await fetch('/api/parent/dashboard');
                const data = await response.json();

                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                document.getElementById('total-children').textContent =
                    data.total_children || 0;
                document.getElementById('blocked-threats').textContent =
                    data.blocked_threats || 0;
                document.getElementById('screen-time').textContent =
                    data.total_screen_time || '0—á';
                document.getElementById('safety-score').textContent =
                    data.safety_score || '100%';

                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ—Ç–µ–π
                updateChildrenList(data.children || []);

                // –û–±–Ω–æ–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                updateNotifications(data.notifications || []);

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞:', error);
            }
        }

        function updateChildrenList(children) {
            const container = document.getElementById('children-list');
            if (children.length === 0) {
                container.innerHTML = '<p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ—Ç–µ–π</p>';
                return;
            }

            container.innerHTML = children.map(child => `
                <div class="notification">
                    <strong>${child.name}</strong> (${child.age} –ª–µ—Ç)<br>
                    –°—Ç–∞—Ç—É—Å: ${child.status}<br>
                    –í—Ä–µ–º—è —ç–∫—Ä–∞–Ω–∞: ${child.screen_time} –º–∏–Ω<br>
                    –£—Ä–æ–≤–µ–Ω—å –∑–∞—â–∏—Ç—ã: ${child.protection_level}
                </div>
            `).join('');
        }

        function updateNotifications(notifications) {
            const container = document.getElementById('notifications-list');
            if (notifications.length === 0) {
                container.innerHTML = '<p>–ù–µ—Ç –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</p>';
                return;
            }

            container.innerHTML = notifications.map(notif => `
                <div class="alert">
                    <strong>${notif.severity}</strong><br>
                    ${notif.message}<br>
                    <small>${new Date(notif.timestamp).toLocaleString()}</small>
                </div>
            `).join('');
        }

        function openSettings() {
            window.open('/parent/settings', '_blank');
        }

        function openReports() {
            window.open('/parent/reports', '_blank');
        }

        function openEmergency() {
            window.open('/parent/emergency', '_blank');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        updateDashboard();
    </script>
</body>
</html>
"""

CHILD_INTERFACE_HTML = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üõ°Ô∏è ALADDIN - –ú–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Comic Sans MS', cursive; background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%); color: white; }
        .header { text-align: center; padding: 20px; }
        .container { max-width: 800px; margin: 0 auto; padding: 20px; }
        .game-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-top: 20px; }
        .game-card { background: rgba(255,255,255,0.2); border-radius: 15px; padding: 20px; text-align: center; cursor: pointer; transition: transform 0.3s; }
        .game-card:hover { transform: scale(1.05); }
        .game-card h3 { margin-bottom: 10px; }
        .progress-bar { background: rgba(255,255,255,0.3); border-radius: 10px; height: 20px; margin: 10px 0; }
        .progress-fill { background: #00b894; height: 100%; border-radius: 10px; transition: width 0.3s; }
        .achievement { background: rgba(255,255,255,0.1); border-radius: 10px; padding: 15px; margin: 10px 0; }
        .btn { background: #00b894; color: white; border: none; padding: 15px 30px; border-radius: 25px; cursor: pointer; font-size: 16px; margin: 10px; }
        .btn:hover { background: #00a085; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ALADDIN!</h1>
        <p>–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–≥—Ä—ã –∏ –æ–±—É—á–µ–Ω–∏–µ</p>
    </div>

    <div class="container">
        <div class="achievement">
            <h3>üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
            <p>–û—á–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: <span id="safety-points">0</span></p>
            <div class="progress-bar">
                <div class="progress-fill" id="progress-fill" style="width: 0%"></div>
            </div>
        </div>

        <div class="game-grid">
            <div class="game-card" onclick="startGame('security')">
                <h3>üõ°Ô∏è –ò–≥—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h3>
                <p>–ò–∑—É—á–∞–π –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
            </div>

            <div class="game-card" onclick="startGame('learning')">
                <h3>üìö –û–±—É—á–∞—é—â–∏–µ –∏–≥—Ä—ã</h3>
                <p>–†–∞–∑–≤–∏–≤–∞–π—Å—è –∏ —É—á–∏—Å—å</p>
            </div>

            <div class="game-card" onclick="startGame('art')">
                <h3>üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ</h3>
                <p>–†–∏—Å—É–π –∏ —Å–æ–∑–¥–∞–≤–∞–π</p>
            </div>

            <div class="game-card" onclick="startGame('music')">
                <h3>üéµ –ú—É–∑—ã–∫–∞</h3>
                <p>–°–ª—É—à–∞–π –∏ –∏–≥—Ä–∞–π</p>
            </div>
        </div>

        <div style="text-align: center; margin-top: 30px;">
            <button class="btn" onclick="requestParentPermission()">–ü–æ–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ</button>
            <button class="btn" onclick="viewMyProgress()">–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</button>
        </div>
    </div>

    <script>
        async function startGame(gameType) {
            try {
                const response = await fetch(`/api/child/start-game`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ game_type: gameType })
                });

                if (response.ok) {
                    alert('–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!');
                    updateProgress();
                } else {
                    alert('–ù—É–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã:', error);
            }
        }

        function requestParentPermission() {
            alert('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–æ–¥–∏—Ç–µ–ª—è–º!');
        }

        function viewMyProgress() {
            window.open('/child/progress', '_blank');
        }

        function updateProgress() {
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            const points = parseInt(document.getElementById('safety-points').textContent) + 10;
            document.getElementById('safety-points').textContent = points;
            document.getElementById('progress-fill').style.width = Math.min(points, 100) + '%';
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        document.getElementById('safety-points').textContent = '50';
        document.getElementById('progress-fill').style.width = '50%';
    </script>
</body>
</html>
"""

ELDERLY_INTERFACE_HTML = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üõ°Ô∏è ALADDIN - –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Arial', sans-serif; background: #f8f9fa; font-size: 18px; }
        .header { background: #28a745; color: white; padding: 30px; text-align: center; }
        .container { max-width: 1000px; margin: 0 auto; padding: 30px; }
        .help-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 30px; margin-top: 30px; }
        .help-card { background: white; border-radius: 15px; padding: 30px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); text-align: center; }
        .help-card h3 { color: #28a745; margin-bottom: 20px; font-size: 24px; }
        .help-card p { color: #666; margin-bottom: 20px; line-height: 1.6; }
        .btn { background: #28a745; color: white; border: none; padding: 20px 40px; border-radius: 10px; cursor: pointer; font-size: 18px; margin: 10px; }
        .btn:hover { background: #218838; }
        .btn-large { padding: 25px 50px; font-size: 20px; }
        .emergency-btn { background: #dc3545; }
        .emergency-btn:hover { background: #c82333; }
        .status-indicator { display: inline-block; width: 20px; height: 20px; border-radius: 50%; margin-right: 10px; }
        .status-ok { background: #28a745; }
        .status-warning { background: #ffc107; }
        .status-danger { background: #dc3545; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõ°Ô∏è ALADDIN - –í–∞—à –ø–æ–º–æ—â–Ω–∏–∫</h1>
        <p>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –ø–æ–º–æ—â—å –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º</p>
    </div>

    <div class="container">
        <div class="help-grid">
            <div class="help-card">
                <h3>üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å</h3>
                <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å</p>
                <button class="btn emergency-btn btn-large" onclick="callEmergency()">
                    üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–û–ú–û–©–¨
                </button>
            </div>

            <div class="help-card">
                <h3>üë®‚Äç‚öïÔ∏è –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å</h3>
                <p>–°–≤—è–∑—å —Å –≤—Ä–∞—á–æ–º –∏–ª–∏ –≤—ã–∑–æ–≤ —Å–∫–æ—Ä–æ–π</p>
                <button class="btn btn-large" onclick="callMedical()">
                    üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å
                </button>
            </div>

            <div class="help-card">
                <h3>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–≤—è–∑—å —Å —Å–µ–º—å–µ–π</h3>
                <p>–ü–æ–∑–≤–æ–Ω–∏—Ç—å —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º</p>
                <button class="btn btn-large" onclick="callFamily()">
                    üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å —Å–µ–º—å–µ
                </button>
            </div>

            <div class="help-card">
                <h3>üè† –£–º–Ω—ã–π –¥–æ–º</h3>
                <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–æ–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é</p>
                <button class="btn btn-large" onclick="openSmartHome()">
                    üè† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–æ–º
                </button>
            </div>

            <div class="help-card">
                <h3>üì± –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h3>
                <p>–ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö</p>
                <button class="btn btn-large" onclick="openApps()">
                    üì± –ú–æ–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                </button>
            </div>

            <div class="help-card">
                <h3>üìä –ú–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ</h3>
                <p>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–¥–æ—Ä–æ–≤—å—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                <button class="btn btn-large" onclick="openHealth()">
                    ‚ù§Ô∏è –ú–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ
                </button>
            </div>
        </div>

        <div style="text-align: center; margin-top: 40px;">
            <h3>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h3>
            <p><span class="status-indicator status-ok"></span>–°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∞</p>
            <p><span class="status-indicator status-ok"></span>–°–≤—è–∑—å —Å —Å–µ–º—å–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</p>
            <p><span class="status-indicator status-ok"></span>–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç</p>
        </div>
    </div>

    <script>
        function callEmergency() {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –Ω—É–∂–Ω–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å?')) {
                alert('–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å –≤—ã–∑–≤–∞–Ω–∞! –°–µ–º—å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∞.');
                // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±
            }
        }

        function callMedical() {
            alert('–°–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å –≤—Ä–∞—á–æ–º...');
        }

        function callFamily() {
            alert('–ó–≤–æ–Ω–∏–º —Å–µ–º—å–µ...');
        }

        function openSmartHome() {
            window.open('/elderly/smart-home', '_blank');
        }

        function openApps() {
            window.open('/elderly/apps', '_blank');
        }

        function openHealth() {
            window.open('/elderly/health', '_blank');
        }
    </script>
</body>
</html>
"""


# API Endpoints
@app.get("/", response_class=HTMLResponse)
async def root():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤—ã–±–æ—Ä–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    return """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>üõ°Ô∏è ALADDIN Family Interface</title>
        <style>
            body { font-family: Arial, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-align: center; padding: 50px; }
            .container { max-width: 800px; margin: 0 auto; }
            .interface-card { background: rgba(255,255,255,0.1); border-radius: 15px; padding: 30px; margin: 20px; cursor: pointer; transition: transform 0.3s; }
            .interface-card:hover { transform: scale(1.05); }
            .interface-card h2 { margin-bottom: 15px; }
            .btn { background: #28a745; color: white; border: none; padding: 15px 30px; border-radius: 10px; cursor: pointer; font-size: 18px; margin: 10px; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üõ°Ô∏è ALADDIN Family Interface</h1>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:</p>

            <div class="interface-card" onclick="window.location.href='/parent'">
                <h2>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π</h2>
                <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –¥–µ—Ç–µ–π, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã</p>
            </div>

            <div class="interface-card" onclick="window.location.href='/child'">
                <h2>üë∂ –î–ª—è –¥–µ—Ç–µ–π</h2>
                <p>–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–≥—Ä—ã, –æ–±—É—á–µ–Ω–∏–µ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Ä–æ–¥–∏—Ç–µ–ª–µ–π</p>
            </div>

            <div class="interface-card" onclick="window.location.href='/elderly'">
                <h2>üë¥üëµ –î–ª—è –ø–æ–∂–∏–ª—ã—Ö</h2>
                <p>–ü–æ–º–æ—â—å, —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã, —Å–≤—è–∑—å —Å —Å–µ–º—å–µ–π, –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</p>
            </div>
        </div>
    </body>
    </html>
    """


@app.get("/parent", response_class=HTMLResponse)
async def parent_interface():
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π"""
    return PARENT_DASHBOARD_HTML


@app.get("/child", response_class=HTMLResponse)
async def child_interface():
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–µ—Ç–µ–π"""
    return CHILD_INTERFACE_HTML


@app.get("/elderly", response_class=HTMLResponse)
async def elderly_interface():
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö –ª—é–¥–µ–π"""
    return ELDERLY_INTERFACE_HTML


# API –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π
@app.get("/api/parent/dashboard")
async def get_parent_dashboard():
    """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π"""
    if not ALADDIN_AVAILABLE:
        return {"error": "ALADDIN —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"}

    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–µ—Ç—è—Ö
        children_data = []
        if child_protection:
            family_dashboard = child_protection.get_family_dashboard()
            children_data = family_dashboard.get("children", [])

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = {
            "total_children": len(children_data),
            "blocked_threats": 0,
            "total_screen_time": sum(
                child.get("total_screen_time_today", 0)
                for child in children_data
            ),
            "safety_score": "95%",
            "children": children_data,
            "notifications": [],
        }

        return stats
    except Exception as e:
        return {"error": f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {str(e)}"}


@app.post("/api/child/start-game")
async def start_child_game(request: Request):
    """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞"""
    data = await request.json()
    game_type = data.get("game_type", "security")

    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∏ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    return {
        "success": True,
        "game_type": game_type,
        "message": "–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞",
    }


# API –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö –ª—é–¥–µ–π
@app.post("/api/elderly/emergency")
async def elderly_emergency():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö –ª—é–¥–µ–π"""
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    return {"success": True, "message": "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å –≤—ã–∑–≤–∞–Ω–∞"}


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ ALADDIN Family Web Interface...")
    print("üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:")
    print("   - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8082")
    print("   - –î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π: http://localhost:8082/parent")
    print("   - –î–ª—è –¥–µ—Ç–µ–π: http://localhost:8082/child")
    print("   - –î–ª—è –ø–æ–∂–∏–ª—ã—Ö: http://localhost:8082/elderly")
    uvicorn.run(app, host="0.0.0.0", port=8082)

