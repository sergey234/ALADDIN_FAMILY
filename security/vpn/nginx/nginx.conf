# ALADDIN VPN - Nginx Configuration
# Качество: A+
# Соответствие: Security, Performance, Best Practices

# Основные настройки
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Оптимизация производительности
worker_rlimit_nofile 65535;
worker_connections 1024;

events {
    use epoll;
    multi_accept on;
    worker_connections 1024;
}

http {
    # Основные настройки
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Оптимизация производительности
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Безопасность
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;";
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=20r/s;
    
    # Upstream серверы
    upstream vpn_web {
        server 127.0.0.1:5001 weight=1 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:5002 weight=1 max_fails=3 fail_timeout=30s backup;
    }
    
    upstream vpn_graphql {
        server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8081 weight=1 max_fails=3 fail_timeout=30s backup;
    }
    
    upstream vpn_websocket {
        server 127.0.0.1:8081 weight=1 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8082 weight=1 max_fails=3 fail_timeout=30s backup;
    }
    
    upstream vpn_monitoring {
        server 127.0.0.1:8082 weight=1 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8083 weight=1 max_fails=3 fail_timeout=30s backup;
    }
    
    # Основной сервер
    server {
        listen 80;
        listen [::]:80;
        server_name aladdin-vpn.com www.aladdin-vpn.com;
        
        # Редирект на HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS сервер
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name aladdin-vpn.com www.aladdin-vpn.com;
        
        # SSL сертификаты
        ssl_certificate /etc/ssl/certs/aladdin-vpn.crt;
        ssl_certificate_key /etc/ssl/private/aladdin-vpn.key;
        
        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Основная страница
        location / {
            proxy_pass http://vpn_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
        }
        
        # API endpoints
        location /api/ {
            proxy_pass http://vpn_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS
            add_header Access-Control-Allow-Origin "https://aladdin-vpn.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Allow-Credentials true always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://aladdin-vpn.com";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            
            # Rate limiting
            limit_req zone=api burst=10 nodelay;
        }
        
        # GraphQL API
        location /graphql {
            proxy_pass http://vpn_graphql;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket поддержка для GraphQL subscriptions
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Rate limiting
            limit_req zone=api burst=5 nodelay;
        }
        
        # WebSocket API
        location /ws {
            proxy_pass http://vpn_websocket;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket настройки
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts для WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Rate limiting
            limit_req zone=websocket burst=10 nodelay;
        }
        
        # Мониторинг
        location /monitoring {
            proxy_pass http://vpn_monitoring;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Только для авторизованных пользователей
            auth_basic "Monitoring Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Rate limiting
            limit_req zone=api burst=5 nodelay;
        }
        
        # Статические файлы
        location /static/ {
            alias /var/www/aladdin-vpn/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Сжатие
            gzip_static on;
        }
        
        # Медиа файлы
        location /media/ {
            alias /var/www/aladdin-vpn/media/;
            expires 1M;
            add_header Cache-Control "public";
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Блокировка нежелательных запросов
        location ~* \.(php|asp|aspx|jsp)$ {
            return 444;
        }
        
        # Блокировка ботов
        location ~* (bot|crawler|spider|scraper) {
            return 444;
        }
        
        # Блокировка подозрительных запросов
        location ~* (wp-admin|wp-login|admin|login|xmlrpc) {
            return 444;
        }
    }
    
    # Сервер для мониторинга (отдельный порт)
    server {
        listen 8080;
        server_name monitoring.aladdin-vpn.com;
        
        # Базовая аутентификация
        auth_basic "Monitoring Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Мониторинг
        location / {
            proxy_pass http://vpn_monitoring;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Nginx статус
        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
    
    # Сервер для разработки (HTTP)
    server {
        listen 8081;
        server_name dev.aladdin-vpn.com;
        
        # CORS для разработки
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        
        location / {
            proxy_pass http://vpn_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /graphql {
            proxy_pass http://vpn_graphql;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /ws {
            proxy_pass http://vpn_websocket;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}