package com.aladdin.mobile

import android.os.Bundle
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.findNavController
import androidx.navigation.ui.AppBarConfiguration
import androidx.navigation.ui.setupActionBarWithNavController
import androidx.navigation.ui.setupWithNavController
import com.aladdin.mobile.databinding.ActivityMainBinding
import com.aladdin.mobile.ui.viewmodel.MainViewModel
import com.aladdin.mobile.utils.StormSkyTheme
import com.aladdin.mobile.utils.SecurityManager

class MainActivity : AppCompatActivity() {
    
    private lateinit var binding: ActivityMainBinding
    private lateinit var viewModel: MainViewModel
    private lateinit var securityManager: SecurityManager
    
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ViewBinding
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ViewModel
        viewModel = ViewModelProvider(this)[MainViewModel::class.java]
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SecurityManager
        securityManager = SecurityManager(this)
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI
        setupUI()
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        setupNavigation()
        
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã "–ì—Ä–æ–∑–æ–≤–æ–µ –Ω–µ–±–æ"
        applyStormSkyTheme()
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –ø–æ–º–æ—â–Ω–∏–∫–∞
        initializeAIAssistant()
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        checkSecurityStatus()
    }
    
    override fun onResume() {
        super.onResume()
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏
        updateSecurityStatus()
    }
    
    override fun onPause() {
        super.onPause()
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        saveSecurityState()
    }
    
    private fun setupUI() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        binding.apply {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            setupHeader()
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ñ—É–Ω–∫—Ü–∏–π
            setupFunctionCards()
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI –ø–æ–º–æ—â–Ω–∏–∫–∞
            setupAIAssistant()
        }
    }
    
    private fun setupHeader() {
        binding.apply {
            logoText.text = "üå©Ô∏è ALADDIN"
            logoText.setTextColor(StormSkyTheme.accentColor)
            
            profileButton.setOnClickListener {
                onProfileButtonClicked()
            }
        }
    }
    
    private fun setupFunctionCards() {
        binding.apply {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞—â–∏—Ç—ã
            protectionCard.setOnClickListener {
                onProtectionCardClicked()
            }
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–µ–º—å–∏
            familyCard.setOnClickListener {
                onFamilyCardClicked()
            }
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
            analyticsCard.setOnClickListener {
                onAnalyticsCardClicked()
            }
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            settingsCard.setOnClickListener {
                onSettingsCardClicked()
            }
        }
    }
    
    private fun setupAIAssistant() {
        binding.apply {
            aiTitleText.text = "ü§ñ AI –ü–æ–º–æ—â–Ω–∏–∫"
            aiMessageText.text = "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞—â–∏—Ç—É –¥–ª—è –≤–∞—à–µ–π —Å–µ–º—å–∏. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
            
            aiSendButton.setOnClickListener {
                onAISendButtonClicked()
            }
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
            aiInputText.setOnEditorActionListener { _, _, _ ->
                onAISendButtonClicked()
                true
            }
        }
    }
    
    private fun setupNavigation() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Bottom Navigation
        val navController = findNavController(R.id.nav_host_fragment_activity_main)
        val appBarConfiguration = AppBarConfiguration(
            setOf(
                R.id.navigation_home,
                R.id.navigation_protection,
                R.id.navigation_family,
                R.id.navigation_analytics,
                R.id.navigation_ai
            )
        )
        
        setupActionBarWithNavController(navController, appBarConfiguration)
        binding.navView.setupWithNavController(navController)
    }
    
    private fun applyStormSkyTheme() {
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã "–ì—Ä–æ–∑–æ–≤–æ–µ –Ω–µ–±–æ —Å –∑–æ–ª–æ—Ç—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏"
        StormSkyTheme.applyToActivity(this)
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞
        window.statusBarColor = StormSkyTheme.primaryBackground
        window.navigationBarColor = StormSkyTheme.primaryBackground
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ActionBar
        supportActionBar?.setBackgroundDrawable(
            StormSkyTheme.createGradientDrawable(StormSkyTheme.primaryBackground)
        )
    }
    
    private fun initializeAIAssistant() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –ø–æ–º–æ—â–Ω–∏–∫–∞
        viewModel.initializeAIAssistant()
        
        // –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º AI
        viewModel.aiStatus.observe(this) { status ->
            updateAIStatus(status)
        }
    }
    
    private fun checkSecurityStatus() {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        securityManager.checkSecurityStatus { isSecure ->
            runOnUiThread {
                updateSecurityIndicator(isSecure)
            }
        }
    }
    
    private fun updateSecurityStatus() {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        viewModel.updateSecurityStatus()
        
        // –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Å—Ç–∞—Ç—É—Å–∞
        viewModel.securityStatus.observe(this) { status ->
            updateSecurityIndicator(status.isSecure)
        }
    }
    
    private fun saveSecurityState() {
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        securityManager.saveSecurityState()
    }
    
    // MARK: - Event Handlers
    
    private fun onProfileButtonClicked() {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        Toast.makeText(this, "üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", Toast.LENGTH_SHORT).show()
        // TODO: Implement profile navigation
    }
    
    private fun onProtectionCardClicked() {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –∑–∞—â–∏—Ç—ã
        Toast.makeText(this, "üõ°Ô∏è –≠–∫—Ä–∞–Ω –∑–∞—â–∏—Ç—ã", Toast.LENGTH_SHORT).show()
        // TODO: Implement protection screen navigation
    }
    
    private fun onFamilyCardClicked() {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É —Å–µ–º—å–∏
        Toast.makeText(this, "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –≠–∫—Ä–∞–Ω —Å–µ–º—å–∏", Toast.LENGTH_SHORT).show()
        // TODO: Implement family screen navigation
    }
    
    private fun onAnalyticsCardClicked() {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        Toast.makeText(this, "üìä –≠–∫—Ä–∞–Ω –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", Toast.LENGTH_SHORT).show()
        // TODO: Implement analytics screen navigation
    }
    
    private fun onSettingsCardClicked() {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
        Toast.makeText(this, "‚öôÔ∏è –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫", Toast.LENGTH_SHORT).show()
        // TODO: Implement settings screen navigation
    }
    
    private fun onAISendButtonClicked() {
        val message = binding.aiInputText.text.toString().trim()
        if (message.isNotEmpty()) {
            sendMessageToAI(message)
            binding.aiInputText.text?.clear()
        }
    }
    
    // MARK: - AI Assistant
    
    private fun sendMessageToAI(message: String) {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è AI –ø–æ–º–æ—â–Ω–∏–∫—É
        showAILoadingIndicator()
        
        viewModel.sendMessageToAI(message) { response, error ->
            runOnUiThread {
                hideAILoadingIndicator()
                if (error != null) {
                    showAIError(error)
                } else {
                    updateAIMessage(response ?: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞")
                }
            }
        }
    }
    
    private fun showAILoadingIndicator() {
        binding.aiMessageText.text = "ü§ñ AI –ø–æ–º–æ—â–Ω–∏–∫ –ø–µ—á–∞—Ç–∞–µ—Ç..."
        binding.aiSendButton.isEnabled = false
    }
    
    private fun hideAILoadingIndicator() {
        binding.aiSendButton.isEnabled = true
    }
    
    private fun updateAIMessage(message: String) {
        binding.aiMessageText.text = message
    }
    
    private fun showAIError(error: Throwable) {
        binding.aiMessageText.text = "‚ùå –û—à–∏–±–∫–∞: ${error.message}"
    }
    
    private fun updateAIStatus(status: String) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ AI –ø–æ–º–æ—â–Ω–∏–∫–∞
        binding.aiStatusText.text = status
    }
    
    // MARK: - Security
    
    private fun updateSecurityIndicator(isSecure: Boolean) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        binding.securityIndicator.visibility = if (isSecure) View.VISIBLE else View.GONE
        binding.securityStatusText.text = if (isSecure) "üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞" else "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    }
}

