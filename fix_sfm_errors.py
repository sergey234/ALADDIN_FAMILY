#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –≤ safe_function_manager.py
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç F401, E722, F811, F821 –æ—à–∏–±–∫–∏
"""

import re
import os
from datetime import datetime

def fix_sfm_errors():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –æ—à–∏–±–∫–∏ –≤ SFM —Ñ–∞–π–ª–µ"""
    
    file_path = "security/safe_function_manager.py"
    backup_path = f"security/safe_function_manager_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.py"
    
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ SFM...")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã (F401)
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã...")
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    unused_imports = [
        "import asyncio",
        "from security.async_io_manager import get_io_manager, get_io_manager_sync",
        "from security.health_check_system import HealthCheckManager, HealthCheckSystem",
        "from security.incident_response import (",
        "from security.security_analytics import ("
    ]
    
    for import_line in unused_imports:
        if import_line in content:
            # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–º–ø–æ—Ä—Ç–æ–º
            content = content.replace(import_line + "\n", "")
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω –∏–º–ø–æ—Ä—Ç: {import_line}")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º bare except (E722)
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º bare except –±–ª–æ–∫–∏...")
    
    # –ó–∞–º–µ–Ω—è–µ–º bare except –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    content = re.sub(
        r'(\s+)except:\s*\n',
        r'\1except Exception:\n',
        content
    )
    print("  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã bare except –±–ª–æ–∫–∏")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π (F811)
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π...")
    
    # –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    lines = content.split('\n')
    new_lines = []
    seen_functions = set()
    
    for i, line in enumerate(lines):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        if line.strip().startswith('def ') and 'get_monitoring_dashboard_data' in line:
            if 'get_monitoring_dashboard_data' in seen_functions:
                print(f"  ‚úÖ –ü—Ä–æ–ø—É—â–µ–Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i+1}")
                continue
            seen_functions.add('get_monitoring_dashboard_data')
        
        if line.strip().startswith('def ') and 'search_functions_advanced' in line:
            if 'search_functions_advanced' in seen_functions:
                print(f"  ‚úÖ –ü—Ä–æ–ø—É—â–µ–Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i+1}")
                continue
            seen_functions.add('search_functions_advanced')
        
        new_lines.append(line)
    
    content = '\n'.join(new_lines)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ (F821)
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏
    undefined_functions = {
        'get_lazy_manager': 'def get_lazy_manager(): return None',
        'initialize_lazy_system': 'def initialize_lazy_system(): return True',
        'get_search_indexer': 'def get_search_indexer(): return None',
        'initialize_search_indexer': 'def initialize_search_indexer(): return True',
        'get_pagination_system': 'def get_pagination_system(): return None',
        'initialize_pagination_system': 'def initialize_pagination_system(): return True',
        'get_lazy_system_stats': 'def get_lazy_system_stats(): return {}',
        'get_search_stats': 'def get_search_stats(): return {}',
        'search_functions': 'def search_functions(query, fields): return {}'
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
    missing_functions = []
    for func_name, func_def in undefined_functions.items():
        if func_name in content and f"def {func_name}" not in content:
            missing_functions.append(f"\n# –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è\n{func_def}")
    
    if missing_functions:
        content += '\n'.join(missing_functions)
        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(missing_functions)} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    os.system("python3 -m flake8 security/safe_function_manager.py --count --select=E,W,F --show-source --statistics")
    
    return True

if __name__ == "__main__":
    fix_sfm_errors()