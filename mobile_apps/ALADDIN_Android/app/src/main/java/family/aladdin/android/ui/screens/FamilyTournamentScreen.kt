package family.aladdin.android.ui.screens

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Brush
import androidx.compose.ui.unit.dp
import family.aladdin.android.ui.theme.*

@Composable
fun FamilyTournamentScreen() {
    val participants = listOf(
        Triple("–ú–∞—à–∞", 285, "üëß"),
        Triple("–ü–µ—Ç—è", 240, "üë¶"),
        Triple("–ö–∞—Ç—è", 195, "üëß")
    )
    
    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(Brush.linearGradient(listOf(GradientStart, GradientMiddle, GradientEnd)))
    ) {
        Column(
            modifier = Modifier
                .verticalScroll(rememberScrollState())
                .padding(Spacing.L),
            horizontalAlignment = Alignment.CenterHorizontally,
            verticalArrangement = Arrangement.spacedBy(Spacing.L)
        ) {
            Text("üèÜ –°–ï–ú–ï–ô–ù–´–ô –¢–£–†–ù–ò–†", style = MaterialTheme.typography.displayLarge, color = TextPrimary)
            Text("üìö –û—Ç–ª–∏—á–Ω–∏–∫–∏", style = MaterialTheme.typography.displaySmall, color = PrimaryBlue)
            
            Text("‚è∞ –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: 3 –¥–Ω—è", style = MaterialTheme.typography.bodyMedium, color = TextSecondary, modifier = Modifier.padding(Spacing.M).background(BackgroundMedium.copy(alpha = 0.5f), RoundedCornerShape(CornerRadius.Medium)))
            
            // –†–µ–π—Ç–∏–Ω–≥
            Column(
                modifier = Modifier.fillMaxWidth(),
                verticalArrangement = Arrangement.spacedBy(Spacing.S)
            ) {
                participants.forEachIndexed { index, (name, score, avatar) ->
                    ParticipantRow(index + 1, name, score, avatar)
                }
            }
            
            // –°–µ–º–µ–π–Ω—ã–π –∫–≤–µ—Å—Ç
            QuestCard()
        }
    }
}

@Composable
private fun ParticipantRow(rank: Int, name: String, score: Int, avatar: String) {
    val medal = if (rank == 1) "ü•á" else if (rank == 2) "ü•à" else "ü•â"
    val prize = if (rank == 1) "+50 ü¶Ñ" else if (rank == 2) "+30 ü¶Ñ" else "+20 ü¶Ñ"
    
    Surface(
        modifier = Modifier.fillMaxWidth(),
        shape = RoundedCornerShape(CornerRadius.Medium),
        color = if (rank == 1) androidx.compose.ui.graphics.Color(0xFFFFD700).copy(alpha = 0.1f) else BackgroundMedium.copy(alpha = 0.5f)
    ) {
        Row(
            modifier = Modifier.padding(Spacing.M),
            horizontalArrangement = Arrangement.spacedBy(Spacing.M),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Text(medal, style = MaterialTheme.typography.displaySmall)
            Text(avatar, style = MaterialTheme.typography.titleLarge)
            
            Column(modifier = Modifier.weight(1f)) {
                Text(name, style = MaterialTheme.typography.titleMedium, color = TextPrimary)
                Text(prize, style = MaterialTheme.typography.bodySmall, color = SuccessGreen)
            }
            
            Text("$score", style = MaterialTheme.typography.displayMedium, color = PrimaryBlue)
        }
    }
}

@Composable
private fun QuestCard() {
    Surface(
        modifier = Modifier.fillMaxWidth(),
        shape = RoundedCornerShape(CornerRadius.Large),
        color = BackgroundMedium.copy(alpha = 0.5f)
    ) {
        Column(
            modifier = Modifier.padding(Spacing.M),
            verticalArrangement = Arrangement.spacedBy(Spacing.M)
        ) {
            Text("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–ï–ú–ï–ô–ù–´–ô –ö–í–ï–°–¢", style = MaterialTheme.typography.displaySmall, color = TextPrimary)
            Text("–í–º–µ—Å—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 500 ü¶Ñ –∑–∞ –Ω–µ–¥–µ–ª—é", style = MaterialTheme.typography.bodyMedium, color = TextSecondary)
            
            Box(
                modifier = Modifier
                    .fillMaxWidth()
                    .height(20.dp)
                    .background(BackgroundMedium.copy(alpha = 0.5f), RoundedCornerShape(10.dp))
            ) {
                Box(
                    modifier = Modifier
                        .fillMaxHeight()
                        .fillMaxWidth(0.6f)
                        .background(Brush.linearGradient(listOf(SuccessGreen, SuccessGreen.copy(alpha = 0.8f))), RoundedCornerShape(10.dp))
                )
            }
            
            Row(horizontalArrangement = Arrangement.SpaceBetween, modifier = Modifier.fillMaxWidth()) {
                Text("300 ü¶Ñ / 500 ü¶Ñ", style = MaterialTheme.typography.bodySmall, color = TextSecondary)
                Text("60%", style = MaterialTheme.typography.bodySmall.copy(fontWeight = androidx.compose.ui.text.font.FontWeight.SemiBold), color = SuccessGreen)
            }
            
            Text("üéÅ –ù–∞–≥—Ä–∞–¥–∞: –∫–∞–∂–¥–æ–º—É –ø–æ +50 ü¶Ñ", style = MaterialTheme.typography.bodySmall, color = SuccessGreen)
        }
    }
}




