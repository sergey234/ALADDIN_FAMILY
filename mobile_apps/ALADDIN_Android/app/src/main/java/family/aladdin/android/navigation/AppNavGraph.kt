package family.aladdin.android.navigation

import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.lifecycle.viewmodel.compose.viewModel
import androidx.navigation.NavHostController
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import family.aladdin.android.ui.screens.*
import family.aladdin.android.viewmodels.*

/**
 * üß≠ App Nav Graph
 * –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π –≥—Ä–∞—Ñ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * Jetpack Compose Navigation
 */

@Composable
fun AppNavGraph(
    navController: NavHostController = rememberNavController()
) {
    var hasCompletedOnboarding by remember { mutableStateOf(false) }
    
    NavHost(
        navController = navController,
        startDestination = if (hasCompletedOnboarding) Screen.Main.route else Screen.Onboarding.route
    ) {
        // –û–Ω–±–æ—Ä–¥–∏–Ω–≥
        composable(Screen.Onboarding.route) {
            OnboardingScreen(
                navController = navController,
                onComplete = {
                    hasCompletedOnboarding = true
                    navController.navigate(Screen.Main.route) {
                        popUpTo(Screen.Onboarding.route) { inclusive = true }
                    }
                }
            )
        }
        
        // –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        composable(Screen.Main.route) {
            MainScreen(navController = navController)
        }
        
        // –°–µ–º—å—è
        composable(Screen.Family.route) {
            FamilyScreen(navController = navController)
        }
        
        // VPN
        composable(Screen.VPN.route) {
            VPNScreen(navController = navController)
        }
        
        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        composable(Screen.Analytics.route) {
            AnalyticsScreen(navController = navController)
        }
        
        // AI –ü–æ–º–æ—â–Ω–∏–∫
        composable(Screen.AIAssistant.route) {
            AIAssistantScreen(navController = navController)
        }
        
        // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å
        composable(Screen.ParentalControl.route) {
            ParentalControlScreen(navController = navController)
        }
        
        // –î–µ—Ç—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        composable(Screen.ChildInterface.route) {
            ChildInterfaceScreen(navController = navController)
        }
        
        // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö
        composable(Screen.ElderlyInterface.route) {
            ElderlyInterfaceScreen(navController = navController)
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        composable(Screen.Settings.route) {
            SettingsScreen(navController = navController)
        }
        
        // –¢–∞—Ä–∏—Ñ—ã
        composable(Screen.Tariffs.route) {
            TariffsScreen(navController = navController)
        }
        
        // –ü—Ä–æ—Ñ–∏–ª—å
        composable(Screen.Profile.route) {
            ProfileScreen(navController = navController)
        }
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        composable(Screen.Notifications.route) {
            NotificationsScreen(navController = navController)
        }
        
        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞
        composable(Screen.Support.route) {
            SupportScreen(navController = navController)
        }
        
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (11 —à—Ç—É–∫)
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        
        // –í—Ö–æ–¥ - TODO: Create LoginScreen
        /*
        composable(Screen.Login.route) {
            LoginScreen(
                onLoginSuccess = {
                    navController.navigate(Screen.Main.route) {
                        popUpTo(Screen.Login.route) { inclusive = true }
                    }
                },
                onNavigateToRegistration = {
                    navController.navigate(Screen.Registration.route)
                },
                onNavigateToForgotPassword = {
                    navController.navigate(Screen.ForgotPassword.route)
                }
            )
        }
        */
        
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è - TODO: Create RegistrationScreen
        /*
        composable(Screen.Registration.route) {
            RegistrationScreen(
                onRegistrationSuccess = {
                    navController.navigate(Screen.Main.route) {
                        popUpTo(Screen.Registration.route) { inclusive = true }
                    }
                },
                onNavigateToLogin = {
                    navController.popBackStack()
                }
            )
        }
        */
        
        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - TODO: Create ForgotPasswordScreen
        /*
        composable(Screen.ForgotPassword.route) {
            ForgotPasswordScreen(
                onBackClick = {
                    navController.popBackStack()
                }
            )
        }
        */
        
        // –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        composable(Screen.PrivacyPolicy.route) {
            PrivacyPolicyScreen(navController = navController)
        }
        
        // –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        composable(Screen.TermsOfService.route) {
            TermsOfServiceScreen(navController = navController)
        }
        
        // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        composable(Screen.Devices.route) {
            DevicesScreen(navController = navController)
        }
        
        // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
        composable(Screen.Referral.route) {
            ReferralScreen(navController = navController)
        }
        
        // –î–µ—Ç–∞–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        composable(Screen.DeviceDetail.route) { backStackEntry ->
            val deviceId = backStackEntry.arguments?.getString("deviceId") ?: ""
            DeviceDetailScreen(
                navController = navController,
                deviceId = deviceId
            )
        }
        
        // –°–µ–º–µ–π–Ω—ã–π —á–∞—Ç
        composable(Screen.FamilyChat.route) { backStackEntry ->
            val memberId = backStackEntry.arguments?.getString("memberId") ?: ""
            FamilyChatScreen(
                navController = navController,
                memberId = memberId
            )
        }
        
        // VPN Energy Stats
        composable(Screen.VPNEnergyStats.route) {
            VPNEnergyStatsScreen(navController = navController)
        }
        
        // QR –û–ø–ª–∞—Ç–∞
        composable(Screen.PaymentQR.route) {
            PaymentQRScreen(
                navController = navController,
                tariffTitle = "–°–µ–º–µ–π–Ω—ã–π",
                tariffPrice = "590 ‚ÇΩ",
                tariffPeriod = "–≤ –º–µ—Å—è—Ü",
                tariffFeatures = listOf("–î–æ 5 —É—Å—Ç—Ä–æ–π—Å—Ç–≤", "–ü–æ–ª–Ω–∞—è –∑–∞—â–∏—Ç–∞"),
                onBackClick = {
                    navController.popBackStack()
                },
                onPaymentCompleted = {
                    navController.popBackStack()
                }
            )
        }
    }
}

/**
 * üì± Screen Routes
 * –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –≤—Å–µ—Ö 25 —ç–∫—Ä–∞–Ω–æ–≤
 */
sealed class Screen(val route: String) {
    // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (14)
    object Onboarding : Screen("onboarding")
    object Main : Screen("main")
    object Family : Screen("family")
    object VPN : Screen("vpn")
    object Analytics : Screen("analytics")
    object AIAssistant : Screen("ai_assistant")
    object ParentalControl : Screen("parental_control")
    object ChildInterface : Screen("child_interface")
    object ElderlyInterface : Screen("elderly_interface")
    object Settings : Screen("settings")
    object Tariffs : Screen("tariffs")
    object Profile : Screen("profile")
    object Notifications : Screen("notifications")
    object Support : Screen("support")
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (11)
    object Login : Screen("login")
    object Registration : Screen("registration")
    object ForgotPassword : Screen("forgot_password")
    object PrivacyPolicy : Screen("privacy_policy")
    object TermsOfService : Screen("terms_of_service")
    object Devices : Screen("devices")
    object Referral : Screen("referral")
    object DeviceDetail : Screen("device_detail/{deviceId}") {
        fun createRoute(deviceId: String) = "device_detail/$deviceId"
    }
    object FamilyChat : Screen("family_chat/{memberId}") {
        fun createRoute(memberId: String) = "family_chat/$memberId"
    }
    object VPNEnergyStats : Screen("vpn_energy_stats")
    object PaymentQR : Screen("payment_qr")
}

