import SwiftUI

/**
 * üéÅ Referral Screen
 * –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
 * 13_referral_screen –∏–∑ HTML
 */

struct ReferralScreen: View {
    
    @Environment(\.dismiss) var dismiss
    @State private var referralCode: String = "ALADDIN-SH2024"
    @State private var referralsCount: Int = 3
    @State private var earnedBonus: Int = 1500
    @State private var showShareSheet: Bool = false
    
    var body: some View {
        ScrollView {
            VStack(spacing: Spacing.l) {
                ALADDINNavigationBar(
                    title: "–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê",
                    subtitle: "–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π - –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã",
                    showBackButton: true,
                    onBack: { dismiss() }
                )
                .padding(.bottom, Spacing.m)
                
                // Referral Stats
                VStack(spacing: Spacing.xl) {
                    Text("üéÅ")
                        .font(.system(size: Size.iconXLarge * 1.5))
                    
                    Text("–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π")
                        .font(.h1)
                        .foregroundColor(.textPrimary)
                    
                    Text("–ü–æ–ª—É—á–∏ 500‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞")
                        .font(.body)
                        .foregroundColor(.textSecondary)
                    
                    // Your Stats
                    HStack {
                        Spacer()
                        VStack {
                            Text("\(referralsCount)")
                                .font(.largeTitle)
                                .foregroundColor(.secondaryGold)
                            Text("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ")
                                .font(.caption)
                                .foregroundColor(.textSecondary)
                        }
                        Spacer()
                        VStack {
                            Text("\(earnedBonus)‚ÇΩ")
                                .font(.largeTitle)
                                .foregroundColor(.successGreen)
                            Text("–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ")
                                .font(.caption)
                                .foregroundColor(.textSecondary)
                        }
                        Spacer()
                    }
                    .padding(Spacing.cardPadding)
                    .background(
                        LinearGradient.cardGradient
                            .appGlassmorphism()
                    )
                    .cornerRadius(CornerRadius.large)
                    .cardShadow()
                }
                .padding(.horizontal, Spacing.screenPadding)
                
                // Your Referral Code
                VStack(alignment: .leading, spacing: Spacing.m) {
                    Text("–í–ê–® –†–ï–§–ï–†–ê–õ–¨–ù–´–ô –ö–û–î")
                        .font(.h3)
                        .foregroundColor(.textPrimary)
                    
                    HStack {
                        Text(referralCode)
                            .font(.h2)
                            .foregroundColor(.secondaryGold)
                        Spacer()
                        Button(action: {
                            UIPasteboard.general.string = referralCode
                            HapticFeedback.heavyImpact()
                        }) {
                            HStack(spacing: Spacing.xs) {
                                Image(systemName: "doc.on.doc.fill")
                                    .foregroundColor(.textPrimary)
                                Text("–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å")
                                    .font(.bodyBold)
                                    .foregroundColor(.textPrimary)
                            }
                            .padding(.vertical, Spacing.s)
                            .padding(.horizontal, Spacing.m)
                            .background(Color.primaryBlue)
                            .cornerRadius(CornerRadius.medium)
                        }
                    }
                    .padding(Spacing.cardPadding)
                    .background(
                        LinearGradient.cardGradient
                            .appGlassmorphism()
                    )
                    .cornerRadius(CornerRadius.large)
                    .cardShadow()
                }
                .padding(.horizontal, Spacing.screenPadding)
                
                // Share Buttons
                VStack(alignment: .leading, spacing: Spacing.m) {
                    Text("–ü–û–î–ï–õ–ò–¢–¨–°–Ø")
                        .font(.h3)
                        .foregroundColor(.textPrimary)
                    
                    PrimaryButton(title: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏") {
                        showShareSheet = true
                    }
                    
                    SecondaryButton(title: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", icon: nil) {
                        shareToWhatsApp()
                    }
                    
                    SecondaryButton(title: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram", icon: nil) {
                        shareToTelegram()
                    }
                    
                    SecondaryButton(title: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ VK", icon: nil) {
                        shareToVK()
                    }
                }
                .padding(.horizontal, Spacing.screenPadding)
                
                // How it Works
                VStack(alignment: .leading, spacing: Spacing.m) {
                    Text("–ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢")
                        .font(.h3)
                        .foregroundColor(.textPrimary)
                    
                    VStack(spacing: Spacing.m) {
                        StepCard(number: 1, title: "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–¥–æ–º", description: "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–¥ –¥—Ä—É–∑—å—è–º")
                        StepCard(number: 2, title: "–î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è", description: "–î—Ä—É–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à –∫–æ–¥ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                        StepCard(number: 3, title: "–ü–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å", description: "–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 500‚ÇΩ, –¥—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É 20%")
                    }
                }
                .padding(.horizontal, Spacing.screenPadding)
                
                // Your Referrals List
                VStack(alignment: .leading, spacing: Spacing.m) {
                    Text("–í–ê–®–ò –ü–†–ò–ì–õ–ê–®–ï–ù–ò–Ø")
                        .font(.h3)
                        .foregroundColor(.textPrimary)
                    
                    ReferralRow(name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö.", date: "15.10.2025", bonus: 500, status: .completed)
                    ReferralRow(name: "–ú–∞—Ä–∏—è –°.", date: "12.10.2025", bonus: 500, status: .completed)
                    ReferralRow(name: "–ò–≤–∞–Ω –ü.", date: "10.10.2025", bonus: 500, status: .pending)
                }
                .padding(.horizontal, Spacing.screenPadding)
            }
            .background(LinearGradient.backgroundGradient.ignoresSafeArea())
        }
        .navigationBarHidden(true)
        .sheet(isPresented: $showShareSheet) {
            ShareSheet(items: ["–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ ALADDIN! –ò—Å–ø–æ–ª—å–∑—É–π –º–æ–π –∫–æ–¥: \(referralCode) –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É 20%! https://aladdin.family/register?ref=\(referralCode)"])
        }
    }
    
    // MARK: - Actions
    
    private func shareToWhatsApp() {
        let text = "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ ALADDIN! –ò—Å–ø–æ–ª—å–∑—É–π –º–æ–π –∫–æ–¥: \(referralCode)"
        if let url = URL(string: "whatsapp://send?text=\(text.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed) ?? "")") {
            UIApplication.shared.open(url)
        }
    }
    
    private func shareToTelegram() {
        let text = "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ ALADDIN! –ö–æ–¥: \(referralCode)"
        if let url = URL(string: "tg://msg?text=\(text.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed) ?? "")") {
            UIApplication.shared.open(url)
        }
    }
    
    private func shareToVK() {
        print("Share to VK")
    }
}

// MARK: - Step Card

struct StepCard: View {
    let number: Int
    let title: String
    let description: String
    
    var body: some View {
        HStack(spacing: Spacing.m) {
            Text("\(number)")
                .font(.h1)
                .foregroundColor(.secondaryGold)
                .frame(width: 50, height: 50)
                .background(Color.surfaceDark)
                .cornerRadius(CornerRadius.medium)
            
            VStack(alignment: .leading, spacing: Spacing.xxs) {
                Text(title)
                    .font(.bodyBold)
                    .foregroundColor(.textPrimary)
                Text(description)
                    .font(.caption)
                    .foregroundColor(.textSecondary)
            }
            Spacer()
        }
        .padding(Spacing.m)
        .background(
            LinearGradient.cardGradient
                .appGlassmorphism()
        )
        .cornerRadius(CornerRadius.large)
        .cardShadow()
    }
}

// MARK: - Referral Row

struct ReferralRow: View {
    let name: String
    let date: String
    let bonus: Int
    let status: ReferralStatus
    
    enum ReferralStatus {
        case completed, pending
        
        var color: Color {
            switch self {
            case .completed: return .successGreen
            case .pending: return .warningOrange
            }
        }
        
        var text: String {
            switch self {
            case .completed: return "–ü–æ–ª—É—á–µ–Ω–æ"
            case .pending: return "–û–∂–∏–¥–∞–Ω–∏–µ"
            }
        }
    }
    
    var body: some View {
        HStack {
            VStack(alignment: .leading, spacing: Spacing.xxs) {
                Text(name)
                    .font(.bodyBold)
                    .foregroundColor(.textPrimary)
                Text(date)
                    .font(.captionSmall)
                    .foregroundColor(.textTertiary)
            }
            Spacer()
            VStack(alignment: .trailing, spacing: Spacing.xxs) {
                Text("+\(bonus)‚ÇΩ")
                    .font(.bodyBold)
                    .foregroundColor(status.color)
                Text(status.text)
                    .font(.captionSmall)
                    .foregroundColor(status.color)
            }
        }
        .padding(Spacing.m)
        .background(
            LinearGradient.cardGradient
                .appGlassmorphism()
        )
        .cornerRadius(CornerRadius.medium)
        .cardShadow()
    }
}

// MARK: - Share Sheet

struct ShareSheet: UIViewControllerRepresentable {
    let items: [Any]
    
    func makeUIViewController(context: Context) -> UIActivityViewController {
        UIActivityViewController(activityItems: items, applicationActivities: nil)
    }
    
    func updateUIViewController(_ uiViewController: UIActivityViewController, context: Context) {}
}

// MARK: - Preview

struct ReferralScreen_Previews: PreviewProvider {
    static var previews: some View {
        ReferralScreen()
    }
}




