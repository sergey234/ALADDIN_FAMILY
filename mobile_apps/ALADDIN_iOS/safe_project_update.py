#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Xcode –ø—Ä–æ–µ–∫—Ç–∞ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
"""

import os
import re

def generate_xcode_id():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π ID –¥–ª—è Xcode –ø—Ä–æ–µ–∫—Ç–∞"""
    import time
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º timestamp + —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    timestamp = int(time.time() * 1000000) % 0xFFFFFF
    return f"A1{timestamp:06X}"

def get_next_id():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π ID"""
    # –ß–∏—Ç–∞–µ–º –ø—Ä–æ–µ–∫—Ç –∏ –Ω–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID
    with open('ALADDIN.xcodeproj/project.pbxproj', 'r') as f:
        content = f.read()
    
    # –ò—â–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID
    ids = re.findall(r'\t\t(A1[0-9A-F]{6})', content)
    if not ids:
        return "A1000100"  # –ù–∞—á–∏–Ω–∞–µ–º —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    
    # –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º
    max_id = max(ids)
    next_num = int(max_id[3:], 16) + 1
    return f"A1{next_num:06X}"

def add_essential_files():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º"""
    
    # –°–ø–∏—Å–æ–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    essential_files = [
        ("Screens/01_MainScreen.swift", "01_MainScreen.swift"),
        ("Core/Config/AppConfig.swift", "AppConfig.swift"), 
        ("Core/Network/NetworkManager.swift", "NetworkManager.swift"),
        ("ViewModels/MainViewModel.swift", "MainViewModel.swift"),
        ("Shared/Styles/Colors.swift", "Colors.swift"),
        ("Shared/Styles/Fonts.swift", "Fonts.swift")
    ]
    
    print("üîß –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç
    with open('ALADDIN.xcodeproj/project.pbxproj', 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å
    existing_files = set()
    for match in re.finditer(r'/\* (\w+\.swift) \*/', content):
        existing_files.add(match.group(1))
    
    print(f"üìä –£–∂–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ: {len(existing_files)} —Ñ–∞–π–ª–æ–≤")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    new_files = []
    for file_path, file_name in essential_files:
        if file_name not in existing_files and os.path.exists(f"ALADDIN/{file_path}"):
            new_files.append((file_path, file_name))
            print(f"‚úÖ –î–æ–±–∞–≤–∏–º: {file_name}")
        else:
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: {file_name} (—É–∂–µ –µ—Å—Ç—å –∏–ª–∏ —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)")
    
    if not new_files:
        print("üéâ –í—Å–µ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        return True
    
    print(f"üìù –î–æ–±–∞–≤–ª—è–µ–º {len(new_files)} –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    # –ù–ï –∏–∑–º–µ–Ω—è–µ–º project.pbxproj –Ω–∞–ø—Ä—è–º—É—é - —ç—Ç–æ –º–æ–∂–µ—Ç –µ–≥–æ —Å–ª–æ–º–∞—Ç—å
    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüö® –í–ê–ñ–ù–û: –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ Xcode –ø—Ä–æ–µ–∫—Ç:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ ALADDIN.xcodeproj –≤ Xcode")
    print("2. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞–ø–∫–∏ –≤ Navigator –ø—Ä–æ–µ–∫—Ç–∞:")
    for file_path, file_name in new_files:
        print(f"   - ALADDIN/{os.path.dirname(file_path)}/ ‚û°Ô∏è {file_name}")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ target 'ALADDIN'")
    
    return True

if __name__ == "__main__":
    add_essential_files()
