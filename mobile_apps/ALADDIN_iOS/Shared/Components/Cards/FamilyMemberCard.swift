import SwiftUI

/// üë§ Family Member Card
/// –ö–∞—Ä—Ç–æ—á–∫–∞ —á–ª–µ–Ω–∞ —Å–µ–º—å–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ Family
/// –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∏–∑–∞–π–Ω–∞: HTML .member-card –Ω–∞ 02_family_screen.html
struct FamilyMemberCard: View {
    
    // MARK: - Properties
    
    let name: String
    let role: FamilyRole
    let avatar: String
    let status: ProtectionStatus
    let threatsBlocked: Int
    let lastActive: String
    let action: () -> Void
    
    // MARK: - Family Role
    
    enum FamilyRole {
        case parent      // –†–æ–¥–∏—Ç–µ–ª—å
        case child       // –†–µ–±—ë–Ω–æ–∫
        case teenager    // –ü–æ–¥—Ä–æ—Å—Ç–æ–∫
        case elderly     // –ü–æ–∂–∏–ª–æ–π
        
        var label: String {
            switch self {
            case .parent: return "–†–æ–¥–∏—Ç–µ–ª—å"
            case .child: return "–†–µ–±—ë–Ω–æ–∫"
            case .teenager: return "–ü–æ–¥—Ä–æ—Å—Ç–æ–∫"
            case .elderly: return "–ü–æ–∂–∏–ª–æ–π"
            }
        }
        
        var icon: String {
            switch self {
            case .parent: return "üë®‚Äçüíº"
            case .child: return "üë∂"
            case .teenager: return "üßí"
            case .elderly: return "üë¥"
            }
        }
    }
    
    // MARK: - Protection Status
    
    enum ProtectionStatus {
        case protected   // üü¢ –ó–∞—â–∏—â—ë–Ω
        case warning     // ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        case danger      // üî¥ –û–ø–∞—Å–Ω–æ—Å—Ç—å
        case offline     // ‚ö´ –û—Ñ—Ñ–ª–∞–π–Ω
        
        var label: String {
            switch self {
            case .protected: return "–ó–∞—â–∏—â—ë–Ω"
            case .warning: return "–í–Ω–∏–º–∞–Ω–∏–µ"
            case .danger: return "–£–≥—Ä–æ–∑–∞"
            case .offline: return "–û—Ñ—Ñ–ª–∞–π–Ω"
            }
        }
        
        var color: Color {
            switch self {
            case .protected: return .successGreen
            case .warning: return .warningOrange
            case .danger: return .dangerRed
            case .offline: return .textSecondary
            }
        }
        
        var indicator: String {
            switch self {
            case .protected: return "üü¢"
            case .warning: return "‚ö†Ô∏è"
            case .danger: return "üî¥"
            case .offline: return "‚ö´"
            }
        }
    }
    
    // MARK: - Init
    
    init(
        name: String,
        role: FamilyRole,
        avatar: String,
        status: ProtectionStatus,
        threatsBlocked: Int,
        lastActive: String = "–°–µ–π—á–∞—Å",
        action: @escaping () -> Void
    ) {
        self.name = name
        self.role = role
        self.avatar = avatar
        self.status = status
        self.threatsBlocked = threatsBlocked
        self.lastActive = lastActive
        self.action = action
    }
    
    // MARK: - Body
    
    var body: some View {
        Button(action: {
            let generator = UIImpactFeedbackGenerator(style: .medium)
            generator.impactOccurred()
            action()
        }) {
            HStack(spacing: Spacing.m) {
                // –ê–≤–∞—Ç–∞—Ä
                Text(avatar)
                    .font(.system(size: Size.iconMedium))
                    .frame(width: Size.avatarSize, height: Size.avatarSize)
                    .background(
                        Circle()
                            .fill(
                                LinearGradient(
                                    colors: [
                                        Color.primaryBlue.opacity(0.3),
                                        Color.primaryBlue.opacity(0.1)
                                    ],
                                    startPoint: .topLeading,
                                    endPoint: .bottomTrailing
                                )
                            )
                    )
                    .overlay(
                        Circle()
                            .stroke(status.color, lineWidth: 3)
                    )
                
                // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                VStack(alignment: .leading, spacing: Spacing.xs) {
                    // –ò–º—è –∏ —Ä–æ–ª—å
                    HStack(spacing: Spacing.xs) {
                        Text(name)
                            .font(.h3)
                            .foregroundColor(.textPrimary)
                        
                        Text(role.icon)
                            .font(.caption)
                    }
                    
                    // –†–æ–ª—å
                    Text(role.label)
                        .font(.caption)
                        .foregroundColor(.textSecondary)
                    
                    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    HStack(spacing: Spacing.m) {
                        // –£–≥—Ä–æ–∑—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
                        HStack(spacing: Spacing.xxs) {
                            Text("üõ°Ô∏è")
                                .font(.caption)
                            Text("\(threatsBlocked)")
                                .font(.captionBold)
                                .foregroundColor(.successGreen)
                        }
                        
                        // –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                        HStack(spacing: Spacing.xxs) {
                            Text("‚è∞")
                                .font(.caption)
                            Text(lastActive)
                                .font(.caption)
                                .foregroundColor(.textSecondary)
                        }
                    }
                }
                
                Spacer()
                
                // –°—Ç–∞—Ç—É—Å
                VStack(spacing: Spacing.xs) {
                    Text(status.indicator)
                        .font(.system(size: 24))
                    
                    Text(status.label)
                        .font(.captionSmall)
                        .foregroundColor(status.color)
                }
            }
            .padding(Spacing.cardPadding)
            .background(
                LinearGradient.cardGradient
                    .overlay(Color.white.opacity(0.05))
            )
            .cornerRadius(CornerRadius.large)
            .overlay(
                RoundedRectangle(cornerRadius: CornerRadius.large)
                    .stroke(Color.white.opacity(0.1), lineWidth: 1)
            )
            .cardShadow()
        }
        .buttonStyle(PlainButtonStyle())
    }
}

// MARK: - Preview

#Preview {
    VStack(spacing: Spacing.m) {
        // –†–æ–¥–∏—Ç–µ–ª—å - –∑–∞—â–∏—â—ë–Ω
        FamilyMemberCard(
            name: "–°–µ—Ä–≥–µ–π",
            role: .parent,
            avatar: "üë®",
            status: .protected,
            threatsBlocked: 47
        ) {
            print("–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –°–µ—Ä–≥–µ—è")
        }
        
        // –†–µ–±—ë–Ω–æ–∫ - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        FamilyMemberCard(
            name: "–ú–∞—à–∞",
            role: .child,
            avatar: "üëß",
            status: .warning,
            threatsBlocked: 23,
            lastActive: "5 –º–∏–Ω –Ω–∞–∑–∞–¥"
        ) {
            print("–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ú–∞—à–∏")
        }
        
        // –ü–æ–∂–∏–ª–æ–π - –æ—Ñ—Ñ–ª–∞–π–Ω
        FamilyMemberCard(
            name: "–ë–∞–±—É—à–∫–∞",
            role: .elderly,
            avatar: "üëµ",
            status: .offline,
            threatsBlocked: 12,
            lastActive: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
        ) {
            print("–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ë–∞–±—É—à–∫–∏")
        }
    }
    .padding()
    .background(LinearGradient.backgroundGradient)
}



