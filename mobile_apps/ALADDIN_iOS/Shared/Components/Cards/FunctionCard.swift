import SwiftUI

/// üìá Function Card
/// –ö–∞—Ä—Ç–æ—á–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ (–°–µ–º—å—è, –ó–∞—â–∏—Ç–∞, –ê–Ω–∞–ª–∏—Ç–∏–∫–∞, AI)
/// –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∏–∑–∞–π–Ω–∞: HTML .function-card –Ω–∞ 01_main_screen.html
struct FunctionCard: View {
    
    // MARK: - Properties
    
    let icon: String
    let title: String
    let subtitle: String
    let status: StatusType
    let action: () -> Void
    
    // MARK: - Status Type
    
    enum StatusType {
        case active     // üü¢ –ê–∫—Ç–∏–≤–Ω–æ
        case warning    // ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        case inactive   // üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–æ
        case neutral    // ‚ö™ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ
        
        var indicator: String {
            switch self {
            case .active: return "üü¢"
            case .warning: return "‚ö†Ô∏è"
            case .inactive: return "üî¥"
            case .neutral: return "‚úÖ"
            }
        }
        
        var color: Color {
            switch self {
            case .active: return .successGreen
            case .warning: return .warningOrange
            case .inactive: return .dangerRed
            case .neutral: return .primaryBlue
            }
        }
    }
    
    // MARK: - Init
    
    init(
        icon: String,
        title: String,
        subtitle: String,
        status: StatusType = .neutral,
        action: @escaping () -> Void
    ) {
        self.icon = icon
        self.title = title
        self.subtitle = subtitle
        self.status = status
        self.action = action
    }
    
    // MARK: - Body
    
    var body: some View {
        Button(action: {
            let generator = UIImpactFeedbackGenerator(style: .medium)
            generator.impactOccurred()
            action()
        }) {
            VStack(spacing: Spacing.m) {
                // –ò–∫–æ–Ω–∫–∞
                Text(icon)
                    .font(.system(size: Size.iconLarge))
                
                // –¢–µ–∫—Å—Ç
                VStack(spacing: Spacing.xxs) {
                    Text(title)
                        .font(.h3)
                        .foregroundColor(.textPrimary)
                    
                    Text(subtitle)
                        .font(.caption)
                        .foregroundColor(.textSecondary)
                        .multilineTextAlignment(.center)
                }
                
                // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
                HStack(spacing: Spacing.xxs) {
                    Circle()
                        .fill(status.color)
                        .frame(width: Size.statusIndicator, height: Size.statusIndicator)
                    
                    Text(status.indicator)
                        .font(.caption)
                }
            }
            .frame(maxWidth: .infinity)
            .frame(height: Size.functionCardHeight)
            .padding(Spacing.cardPadding)
            .background(
                // –ì—Ä–∞–¥–∏–µ–Ω—Ç –∫–∞–∫ –≤ HTML
                LinearGradient.cardGradient
                    .overlay(
                        // Glassmorphism —ç—Ñ—Ñ–µ–∫—Ç
                        Color.white.opacity(0.05)
                    )
            )
            .cornerRadius(CornerRadius.large)
            .overlay(
                RoundedRectangle(cornerRadius: CornerRadius.large)
                    .stroke(Color.white.opacity(0.1), lineWidth: 1)
            )
            .cardShadow()
        }
        .buttonStyle(PlainButtonStyle())
    }
}

// MARK: - Preview

#Preview {
    VStack(spacing: Spacing.m) {
        // –ê–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
        FunctionCard(
            icon: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
            title: "–°–ï–ú–¨–Ø",
            subtitle: "4 —á–ª–µ–Ω–∞ ‚Ä¢ –í—Å—ë –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π",
            status: .active
        ) {
            print("–û—Ç–∫—Ä—ã—Ç—å —Å–µ–º—å—é")
        }
        
        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        FunctionCard(
            icon: "üìä",
            title: "–ê–ù–ê–õ–ò–¢–ò–ö–ê",
            subtitle: "47 —É–≥—Ä–æ–∑ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ",
            status: .warning
        ) {
            print("–û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É")
        }
        
        // –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è
        FunctionCard(
            icon: "ü§ñ",
            title: "AI –ü–û–ú–û–©–ù–ò–ö",
            subtitle: "–í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å",
            status: .neutral
        ) {
            print("–û—Ç–∫—Ä—ã—Ç—å AI")
        }
    }
    .padding()
    .background(
        LinearGradient.backgroundGradient
    )
}



