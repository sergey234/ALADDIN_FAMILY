#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–∏–π SecurityMonitoringManager
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from security.security_monitoring_a_plus import (
    MonitoringLevel,
    AlertType,
    SecurityEvent,
    MonitoringConfig,
    ThreatDetectionStrategy,
    AnomalyDetectionStrategy,
    SecurityMonitoringManager
)


def test_special_methods():
    """–¢–µ—Å—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤"""
    print("üöÄ –¢–ï–°–¢ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–• –ú–ï–¢–û–î–û–í")
    print("=" * 50)
    
    try:
        # 1. –¢–µ—Å—Ç SecurityEvent
        print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SecurityEvent...")
        event1 = SecurityEvent(
            event_id="test_001",
            timestamp=datetime.now(),
            level=MonitoringLevel.HIGH,
            alert_type=AlertType.THREAT_DETECTED,
            description="Test event",
            source="test_system"
        )
        
        event2 = SecurityEvent(
            event_id="test_002",
            timestamp=datetime.now(),
            level=MonitoringLevel.MEDIUM,
            alert_type=AlertType.ANOMALY_FOUND,
            description="Test event 2",
            source="test_system"
        )
        
        # –¢–µ—Å—Ç __str__
        print(f"‚úÖ __str__: {str(event1)}")
        
        # –¢–µ—Å—Ç __repr__
        print(f"‚úÖ __repr__: {repr(event1)}")
        
        # –¢–µ—Å—Ç __eq__
        assert event1 != event2, "–°–æ–±—ã—Ç–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º–∏"
        assert event1 == event1, "–°–æ–±—ã—Ç–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ —Å–∞–º–æ–º—É —Å–µ–±–µ"
        print("‚úÖ __eq__ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # 2. –¢–µ—Å—Ç MonitoringConfig
        print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MonitoringConfig...")
        config1 = MonitoringConfig(
            enabled=True,
            alert_threshold=5,
            check_interval=30,
            retention_days=7,
            log_level="INFO"
        )
        
        config2 = MonitoringConfig(
            enabled=False,
            alert_threshold=10,
            check_interval=60,
            retention_days=14,
            log_level="DEBUG"
        )
        
        # –¢–µ—Å—Ç __str__
        print(f"‚úÖ __str__: {str(config1)}")
        
        # –¢–µ—Å—Ç __repr__
        print(f"‚úÖ __repr__: {repr(config1)}")
        
        # –¢–µ—Å—Ç __eq__
        assert config1 != config2, "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º–∏"
        assert config1 == config1, "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–∞ —Å–∞–º–æ–π —Å–µ–±–µ"
        print("‚úÖ __eq__ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # 3. –¢–µ—Å—Ç SecurityMonitoringManager
        print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SecurityMonitoringManager...")
        manager = SecurityMonitoringManager(
            name="TestManager",
            config=config1
        )
        
        # –¢–µ—Å—Ç __str__
        print(f"‚úÖ __str__: {str(manager)}")
        
        # –¢–µ—Å—Ç __repr__
        print(f"‚úÖ __repr__: {repr(manager)}")
        
        # –¢–µ—Å—Ç __len__
        print(f"‚úÖ __len__: {len(manager)} —Å—Ç—Ä–∞—Ç–µ–≥–∏–π")
        
        # –¢–µ—Å—Ç __iter__
        strategies = list(manager)
        print(f"‚úÖ __iter__: {len(strategies)} —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –≤ –∏—Ç–µ—Ä–∞—Ü–∏–∏")
        
        # –¢–µ—Å—Ç __contains__
        threat_strategy = ThreatDetectionStrategy(config1)
        manager.add_monitoring_strategy(threat_strategy)
        assert threat_strategy in manager, "–°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ"
        print("‚úÖ __contains__ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –¢–µ—Å—Ç __enter__ –∏ __exit__
        print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
        with manager as m:
            assert m is manager, "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å self"
            print("‚úÖ __enter__ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ __exit__ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # 5. –¢–µ—Å—Ç property –º–µ—Ç–æ–¥–æ–≤
        print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ property –º–µ—Ç–æ–¥–æ–≤...")
        print(f"‚úÖ is_running: {manager.is_running}")
        print(f"‚úÖ strategies_count: {manager.strategies_count}")
        print(f"‚úÖ status_info: {len(manager.status_info)} –ø–æ–ª–µ–π")
        
        # 6. –¢–µ—Å—Ç static –º–µ—Ç–æ–¥–æ–≤
        print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ static –º–µ—Ç–æ–¥–æ–≤...")
        levels = SecurityMonitoringManager.get_supported_levels()
        alert_types = SecurityMonitoringManager.get_supported_alert_types()
        print(f"‚úÖ get_supported_levels: {len(levels)} —É—Ä–æ–≤–Ω–µ–π")
        print(f"‚úÖ get_supported_alert_types: {len(alert_types)} —Ç–∏–ø–æ–≤")
        
        # 7. –¢–µ—Å—Ç class –º–µ—Ç–æ–¥–∞
        print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ class –º–µ—Ç–æ–¥–∞...")
        custom_manager = SecurityMonitoringManager.create_with_custom_config(
            "CustomManager", config2
        )
        assert custom_manager.name == "CustomManager", "–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å CustomManager"
        assert custom_manager.config == config2, "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
        print("‚úÖ create_with_custom_config —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print("\n" + "=" * 50)
        print("üéâ –í–°–ï –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ï –°–ü–ï–¶–ò–ê–õ–¨–ù–´–• –ú–ï–¢–û–î–û–í: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = test_special_methods()
    sys.exit(0 if success else 1)