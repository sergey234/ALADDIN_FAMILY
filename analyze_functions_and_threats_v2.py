#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–π –∏ —É–≥—Ä–æ–∑ —Å–∏—Å—Ç–µ–º—ã ALADDIN Family Security System
"""

import re
import os

def analyze_functions_and_threats():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –∏ —É–≥—Ä–æ–∑ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    
    # –ß–∏—Ç–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    with open('/Users/sergejhlystov/ALADDIN_NEW/ALADDIN_FAMILY_SECURITY_SYSTEM_COMPLETE_DOCUMENTATION.md', 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("=== –ê–ù–ê–õ–ò–ó –§–£–ù–ö–¶–ò–ô –ò –£–ì–†–û–ó –°–ò–°–¢–ï–ú–´ ALADDIN ===\n")
    
    # –ò—â–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ —Å –∏—Ö —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    modules = []
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
    module_pattern = r'\*\*([^*]+\.py)\*\*.*?\*\*–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\*\*\s*\n((?:  - [^-\n]+\n?)*)\*\*–ó–∞—â–∏—â–∞–µ—Ç –æ—Ç:\*\* ([^*]+)'
    module_matches = re.findall(module_pattern, content, re.DOTALL)
    
    total_functions = 0
    all_threats = set()
    
    print("üìã –ú–û–î–£–õ–ò –ò –ò–• –§–£–ù–ö–¶–ò–ò:")
    print("=" * 60)
    
    for module_name, functions_text, threats_text in module_matches:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
        functions = re.findall(r'  - ([^-\n]+)', functions_text)
        functions = [f.strip() for f in functions if f.strip()]
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —É–≥—Ä–æ–∑—ã
        threats = [t.strip() for t in threats_text.split(',') if t.strip()]
        
        total_functions += len(functions)
        all_threats.update(threats)
        
        print(f"\nüîß {module_name}")
        print(f"   –§—É–Ω–∫—Ü–∏–π: {len(functions)}")
        print(f"   –£–≥—Ä–æ–∑: {len(threats)}")
        print(f"   –§—É–Ω–∫—Ü–∏–∏: {', '.join(functions[:3])}{'...' if len(functions) > 3 else ''}")
        print(f"   –£–≥—Ä–æ–∑—ã: {', '.join(threats[:3])}{'...' if len(threats) > 3 else ''}")
        
        modules.append({
            'name': module_name,
            'functions': functions,
            'threats': threats
        })
    
    # –ò—â–µ–º –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    integrated_pattern = r'\*\*–ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò:\*\*\s*\n((?:    - [^-\n]+\n?)*)'
    integrated_matches = re.findall(integrated_pattern, content, re.MULTILINE)
    
    integrated_functions = 0
    for match in integrated_matches:
        functions = re.findall(r'    - ([^-\n]+)', match)
        integrated_functions += len(functions)
        total_functions += len(functions)
    
    # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ AURA
    aura_functions = 4  # –ò–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    total_functions += aura_functions
    
    # –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è
    gamification_functions = 6  # 5 —É—Ä–æ–≤–Ω–µ–π + 5 —Ç–∏–ø–æ–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π + —Å–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤ + –Ω–∞–≥—Ä–∞–¥—ã + –∏–≥—Ä—ã + –∫–≤–µ—Å—Ç—ã
    total_functions += gamification_functions
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–≥—Ä–æ–∑—ã –∏–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    additional_threats = [
        'DDoS –∞—Ç–∞–∫–∏', 'Ransomware', '–®–ø–∏–æ–Ω—Å–∫–æ–µ –ü–û', '–ë–æ—Ç–Ω–µ—Ç—ã', '–§–∏—à–∏–Ω–≥–æ–≤—ã–µ —Å–∞–π—Ç—ã',
        '–ü–æ–¥–¥–µ–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', '–í—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ –º–∞–π–Ω–µ—Ä—ã',
        '–†—É—Ç–∫–∏—Ç—ã', '–¢–µ–ª–µ—Ñ–æ–Ω–Ω–æ–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ', '–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ',
        '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞—Ñ–µ—Ä—ã', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è', '–ü–æ–¥–¥–µ–ª—å–Ω—ã–µ –±–∞–Ω–∫–∏',
        '–§–∏—à–∏–Ω–≥–æ–≤—ã–µ –ø–∏—Å—å–º–∞', '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –∫–∞—Ä—Ç–∞–º–∏', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∏—Ä–∞–º–∏–¥—ã',
        '–õ–æ—Ç–µ—Ä–µ–π–Ω—ã–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞', '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∞—Ñ–µ—Ä—ã', '–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç',
        '–ö–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥', '–û–ø–∞—Å–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞', '–ò–≥—Ä–æ–≤–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å',
        '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Å–æ—Ü—Å–µ—Ç–µ–π', '–ß—Ä–µ–∑–º–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
        '–°–ª—É—á–∞–π–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏', '–í–∑—Ä–æ—Å–ª—ã–µ —Å–∞–π—Ç—ã', '–ù–∞—Å–∏–ª–∏–µ –≤ –∏–≥—Ä–∞—Ö',
        '–ù–∞—Ä–∫–æ—Ç–∏–∫–∏ –∏ –∞–ª–∫–æ–≥–æ–ª—å', '–ê–∑–∞—Ä—Ç–Ω—ã–µ –∏–≥—Ä—ã', '–ö—Ä–∞–∂–∞ –ø–∞—Ä–æ–ª–µ–π',
        '–£—Ç–µ—á–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö', '–ö–æ–º–ø—Ä–æ–º–µ—Ç–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤',
        '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏', '–°–ª–µ–∂–∫–∞ –∑–∞ —Å–µ–º—å–µ–π', '–£—Ç–µ—á–∫–∏ –≤ —Ç–µ–º–Ω–æ–π —Å–µ—Ç–∏',
        '–£—Ç–µ—á–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö', 'Deepfake –≤–∏–¥–µ–æ', '–ü–æ–¥–¥–µ–ª—å–Ω—ã–µ –≥–æ–ª–æ—Å–∞',
        '–°–ø—É—Ñ–∏–Ω–≥ –Ω–æ–º–µ—Ä–æ–≤', '–ü–æ–¥–¥–µ–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã', '–§–µ–π–∫–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
        '–ü–æ–¥–¥–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', '–û–ø–∞—Å–Ω—ã–µ —Å–∞–π—Ç—ã', '–í—Ä–µ–¥–æ–Ω–æ—Å–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞',
        '–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏', '–ù–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ Wi-Fi', 'DNS-—Å–ø—É—Ñ–∏–Ω–≥',
        'Man-in-the-middle –∞—Ç–∞–∫–∏', '–í—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'SMS-–º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ',
        '–ü–æ–¥–¥–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', '–ö—Ä–∞–∂–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞', '–ì–µ–æ–ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ —É–≥—Ä–æ–∑—ã',
        'Bluetooth-–∞—Ç–∞–∫–∏', '–î–æ–º–∞—à–Ω–µ–µ –Ω–∞—Å–∏–ª–∏–µ –≤ —Å–µ—Ç–∏', '–°–µ–º–µ–π–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã',
        '–ò–∑–æ–ª—è—Ü–∏—è –æ—Ç —Å–µ–º—å–∏', '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã', '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        '–í–æ–µ–Ω–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ AES-256', '–ó–∞—â–∏—Ç–∞ –æ—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —à–ø–∏–æ–Ω–∞–∂–∞',
        '–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ', 'VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ', '–ó–∞—â–∏—Ç–∞ –æ—Ç –∫–∏–±–µ—Ä–∞—Ç–∞–∫',
        '–ó–∞—â–∏—Ç–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã'
    ]
    
    all_threats.update(additional_threats)
    
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 60)
    print(f"üîß –ú–æ–¥—É–ª–µ–π: {len(modules)}")
    print(f"‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {total_functions - integrated_functions - aura_functions - gamification_functions}")
    print(f"üîó –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {integrated_functions}")
    print(f"üåü AURA —Ñ—É–Ω–∫—Ü–∏–π: {aura_functions}")
    print(f"üéÆ –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π: {gamification_functions}")
    print(f"üìà –í–°–ï–ì–û –§–£–ù–ö–¶–ò–ô: {total_functions}")
    print(f"üõ°Ô∏è –í–°–ï–ì–û –£–ì–†–û–ó: {len(all_threats)}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–≥—Ä–æ–∑
    print(f"\nüõ°Ô∏è –ö–ê–¢–ï–ì–û–†–ò–ò –£–ì–†–û–ó:")
    print("=" * 60)
    
    cyber_threats = [t for t in all_threats if any(word in t.lower() for word in ['–≤–∏—Ä—É—Å', '—Ç—Ä–æ—è–Ω', 'ransomware', '—à–ø–∏–æ–Ω', '–±–æ—Ç–Ω–µ—Ç', 'ddos', '—Ñ–∏—à–∏–Ω–≥', '–≤—Ä–µ–¥–æ–Ω–æ—Å–Ω', '–º–∞–π–Ω–µ—Ä', '—Ä—É—Ç–∫–∏—Ç'])]
    fraud_threats = [t for t in all_threats if any(word in t.lower() for word in ['–º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ', '–∞—Ñ–µ—Ä–∞', '–ø–∏—Ä–∞–º–∏–¥–∞', '–ª–æ—Ç–µ—Ä–µ—è', '—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫'])]
    child_threats = [t for t in all_threats if any(word in t.lower() for word in ['–Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π', '–∫–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥', '–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞', '–∏–≥—Ä–æ–≤–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å', '–≤–∑—Ä–æ—Å–ª—ã–µ —Å–∞–π—Ç—ã', '–Ω–∞—Å–∏–ª–∏–µ', '–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏', '–∞–ª–∫–æ–≥–æ–ª—å', '–∞–∑–∞—Ä—Ç–Ω—ã–µ'])]
    data_threats = [t for t in all_threats if any(word in t.lower() for word in ['–∫—Ä–∞–∂–∞', '—É—Ç–µ—á–∫–∞', '–∫–æ–º–ø—Ä–æ–º–µ—Ç–∞—Ü–∏—è', '–ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å', '—Å–ª–µ–∂–∫–∞', '–º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö'])]
    fake_threats = [t for t in all_threats if any(word in t.lower() for word in ['deepfake', '–ø–æ–¥–¥–µ–ª—å–Ω—ã–µ', '—Å–ø—É—Ñ–∏–Ω–≥', '—Ñ–µ–π–∫–æ–≤—ã–µ'])]
    family_threats = [t for t in all_threats if any(word in t.lower() for word in ['—Å–µ–º–µ–π–Ω—ã–µ', '–∏–∑–æ–ª—è—Ü–∏—è', '—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ', '–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ'])]
    military_threats = [t for t in all_threats if any(word in t.lower() for word in ['–≤–æ–µ–Ω–Ω–æ–µ', '–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ', '–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å', 'vpn', '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π'])]
    
    print(f"   üñ•Ô∏è –ö–∏–±–µ—Ä—É–≥—Ä–æ–∑—ã: {len(cyber_threats)} —Ç–∏–ø–æ–≤")
    print(f"   üí∞ –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ: {len(fraud_threats)} —Ç–∏–ø–æ–≤")
    print(f"   üë∂ –î–µ—Ç—Å–∫–∏–µ —É–≥—Ä–æ–∑—ã: {len(child_threats)} —Ç–∏–ø–æ–≤")
    print(f"   üîí –£—Ç–µ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {len(data_threats)} —Ç–∏–ø–æ–≤")
    print(f"   üé≠ –ü–æ–¥–¥–µ–ª–∫–∏: {len(fake_threats)} —Ç–∏–ø–æ–≤")
    print(f"   üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–µ —É–≥—Ä–æ–∑—ã: {len(family_threats)} —Ç–∏–ø–æ–≤")
    print(f"   üõ°Ô∏è –í–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞: {len(military_threats)} —Ç–∏–ø–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –º–æ–±–∏–ª—å–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    print(f"\nüì± –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –° –ú–û–ë–ò–õ–¨–ù–´–ú –ü–†–ò–õ–û–ñ–ï–ù–ò–ï–ú:")
    print("=" * 60)
    
    mobile_file = '/Users/sergejhlystov/ALADDIN_NEW/MOBILE_APP_INFO_SECTIONS.md'
    if os.path.exists(mobile_file):
        with open(mobile_file, 'r', encoding='utf-8') as f:
            mobile_content = f.read()
        
        # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ
        functions_mentions = re.findall(r'(\d+)\+?\s*(?:—Ñ—É–Ω–∫—Ü–∏|–º–æ–¥—É–ª)', mobile_content, re.IGNORECASE)
        threats_mentions = re.findall(r'(\d+)\+?\s*—Ç–∏–ø–æ–≤?\s*—É–≥—Ä–æ–∑', mobile_content, re.IGNORECASE)
        
        print(f"   –£–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π/–º–æ–¥—É–ª–µ–π: {set(functions_mentions)}")
        print(f"   –£–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–≥—Ä–æ–∑: {set(threats_mentions)}")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –û–ë–ù–û–í–õ–ï–ù–ò–Æ:")
        print("=" * 60)
        print(f"   ‚úÖ –§—É–Ω–∫—Ü–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: {total_functions}")
        print(f"   ‚úÖ –£–≥—Ä–æ–∑ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_threats)}")
        print(f"   üì± –í –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —É–∫–∞–∑–∞–Ω–æ: 200+ —É–≥—Ä–æ–∑")
        print(f"   üì± –í –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —É–∫–∞–∑–∞–Ω–æ: 25 –º–æ–¥—É–ª–µ–π")
        print(f"   üîÑ –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥—Ä–æ–∑ —Å 200+ –Ω–∞ {len(all_threats)}+")
        print(f"   üîÑ –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥—É–ª–µ–π —Å 25 –Ω–∞ {len(modules)}")
    
    return total_functions, len(all_threats)

if __name__ == "__main__":
    functions_count, threats_count = analyze_functions_and_threats()
    print(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   {functions_count} —Ñ—É–Ω–∫—Ü–∏–π –∑–∞—â–∏—â–∞—é—Ç –æ—Ç {threats_count} —Ç–∏–ø–æ–≤ —É–≥—Ä–æ–∑")
