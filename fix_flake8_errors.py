#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ flake8
"""

import os
import re

def fix_file(filepath):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ flake8 –≤ —Ñ–∞–π–ª–µ"""
    print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {filepath}")
    
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    fixes = [
        # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        (r'from datetime import datetime, timedelta\n', 'from datetime import datetime\n'),
        (r'from typing import Dict, List, Any, Optional\n', 'from typing import Dict, List, Any\n'),
        (r'from typing import Dict, List, Any, Tuple\n', 'from typing import Dict, List, Any\n'),
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ f-strings –±–µ–∑ placeholder
        (r'f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: \{filepath\}"', '"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {}"'.format(filepath)),
    ]
    
    for pattern, replacement in fixes:
        content = re.sub(pattern, replacement, content)
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫
    lines = content.split('\n')
    lines = [line.rstrip() for line in lines]
    content = '\n'.join(lines)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω–µ—Ü
    if not content.endswith('\n'):
        content += '\n'
    
    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ –§–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {filepath}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    files_to_fix = [
        'security/ai_agents/auto_learning_system.py',
        'security/ai_agents/enhanced_data_collector.py',
        'security/ai_agents/fraud_detection_api.py',
        'security/ai_agents/improved_ml_models.py'
    ]
    
    for filepath in files_to_fix:
        if os.path.exists(filepath):
            fix_file(filepath)
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
    
    print("üéâ –í—Å–µ —Ñ–∞–π–ª—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")

if __name__ == "__main__":
    main()