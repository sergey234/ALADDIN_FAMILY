#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–¥—É–ª–µ–π –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º
"""

import re

def check_modules_distribution():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º"""
    
    with open('/Users/sergejhlystov/ALADDIN_NEW/MOBILE_APP_INFO_SECTIONS.md', 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("=== –ü–†–û–í–ï–†–ö–ê –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ú–û–î–£–õ–ï–ô –ü–û –¢–ê–†–ò–§–ê–ú ===\n")
    
    # –ò—â–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ
    main_modules_pattern = r'### [^#\n]+\d+\. [^#\n]+'
    main_modules = re.findall(main_modules_pattern, content)
    
    print(f"üìã –û–°–ù–û–í–ù–´–ï –ú–û–î–£–õ–ò: {len(main_modules)}")
    for i, module in enumerate(main_modules, 1):
        print(f"   {i}. {module}")
    
    # –ò—â–µ–º –º–æ–¥—É–ª–∏ –≤ Premium —Ä–∞–∑–¥–µ–ª–µ
    premium_pattern = r'\d+\. \*\*[^*]+\*\*'
    premium_modules = re.findall(premium_pattern, content)
    
    print(f"\n‚≠ê –ú–û–î–£–õ–ò –í PREMIUM: {len(premium_modules)}")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ (–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏)
    premium_main_modules = []
    for module in premium_modules:
        if not any(word in module.lower() for word in ['–∫–æ–Ω—Ç—Ä–æ–ª—å', '—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ', '–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', '–∞–Ω–∞–ª–∏–∑', '–∑–∞—â–∏—Ç–∞', '–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞', '—Å–æ–∑–¥–∞–Ω–∏–µ', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞', '–ø—Ä–æ–≤–µ—Ä–∫–∞', '—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ', '–∞–Ω–æ–Ω–∏–º–Ω–∞—è', '—Å–µ–º–µ–π–Ω–∞—è', '–≥–æ–ª–æ—Å–∞', '–ª–∏—Ü', '–≤–∏—Ä—É—Å—ã', '—Ç—Ä–æ—è–Ω—ã', 'ransomware', '—à–ø–∏–æ–Ω—Å–∫–æ–µ', '–±–æ—Ç–Ω–µ—Ç—ã', 'ddos', '—Ñ–∏—à–∏–Ω–≥–æ–≤—ã–µ', '–ø–æ–¥–¥–µ–ª—å–Ω—ã–µ', '–≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ', '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ', '—Ä—É—Ç–∫–∏—Ç—ã', '–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ', 'dns', 'man-in-the-middle', 'sms', '–∫—Ä–∞–∂–∞', '–≥–µ–æ–ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ', 'bluetooth', '–≤–∑–ª–æ–º', '–∫–æ–º–ø—Ä–æ–º–µ—Ç–∞—Ü–∏—è', '—Å–µ—Ç–µ–≤—ã–µ', '—Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–µ', '—Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ', '–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ', '—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è', '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ', '–ª–æ—Ç–µ—Ä–µ–π–Ω—ã–µ', '—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ', '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ', '–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ', '–Ω–µ–¥–≤–∏–∂–∏–º–æ–µ', '–∏–≥—Ä–æ–≤–æ–µ', '–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ', '–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ', '–Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π', '–∫–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥', '–æ–ø–∞—Å–Ω—ã–µ', '–∏–≥—Ä–æ–≤–∞—è', '–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å', '—á—Ä–µ–∑–º–µ—Ä–Ω–æ–µ', '—Å–ª—É—á–∞–π–Ω—ã–µ', '–≤–∑—Ä–æ—Å–ª—ã–µ', '–Ω–∞—Å–∏–ª–∏–µ', '–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏', '–∞–ª–∫–æ–≥–æ–ª—å', '–∞–∑–∞—Ä—Ç–Ω—ã–µ', '—Å–µ–∫—Å—É–∞–ª—å–Ω—ã–µ', '–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ', '—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ', '–∏–∑–æ–ª—è—Ü–∏—è', '–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö', '–∫–æ–º–ø—Ä–æ–º–µ—Ç–∞—Ü–∏—è', '–Ω–∞—Ä—É—à–µ–Ω–∏–µ', '—Å–ª–µ–∂–∫–∞', '—Ç–µ–º–Ω–æ–π', '–º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö', '—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö', '–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö', '–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö', '–±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö', '–≥–µ–æ–ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö', '–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö', '—Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö', '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö', 'deepfake', '–ø–æ–¥–¥–µ–ª—å–Ω—ã–µ', '—Å–ø—É—Ñ–∏–Ω–≥', '—Ñ–µ–π–∫–æ–≤—ã–µ', '–¥–æ–∫—É–º–µ–Ω—Ç—ã', '–ø—Ä–æ—Ñ–∏–ª–∏', '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', '—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã', '–¥–æ–º–∞—à–Ω–µ–µ', '—Å–µ–º–µ–π–Ω—ã–µ', '–∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã', '–ø–æ–∫–æ–ª–µ–Ω—á–µ—Å–∫–∏–µ', '—Ü–∏—Ñ—Ä–æ–≤–æ–µ', '–≤–æ–µ–Ω–Ω–æ–µ', '–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ', '–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å', 'vpn', '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π']):
            premium_main_modules.append(module)
    
    print(f"\nüîç –û–°–ù–û–í–ù–´–ï –ú–û–î–£–õ–ò –í PREMIUM: {len(premium_main_modules)}")
    for i, module in enumerate(premium_main_modules, 1):
        print(f"   {i}. {module}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï:")
    print(f"   –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏: {len(main_modules)}")
    print(f"   –ú–æ–¥—É–ª–∏ –≤ Premium: {len(premium_main_modules)}")
    
    if len(main_modules) == len(premium_main_modules):
        print("   ‚úÖ –ö–û–õ–ò–ß–ï–°–¢–í–û –°–û–í–ü–ê–î–ê–ï–¢")
    else:
        print("   ‚ùå –ö–û–õ–ò–ß–ï–°–¢–í–û –ù–ï –°–û–í–ü–ê–î–ê–ï–¢")
    
    return len(main_modules), len(premium_main_modules)

if __name__ == "__main__":
    main_count, premium_count = check_modules_distribution()
    print(f"\nüéØ –ò–¢–û–ì: {main_count} –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π, {premium_count} –≤ Premium")
