import SwiftUI

/// üîî Notifications View Model
/// –õ–æ–≥–∏–∫–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
class NotificationsViewModel: ObservableObject {
    
    @Published var notifications: [AppNotification] = []
    @Published var unreadCount: Int = 0
    
    struct AppNotification: Identifiable {
        let id = UUID()
        let icon: String
        let title: String
        let message: String
        let time: String
        var isRead: Bool
        let type: NotificationType
    }
    
    enum NotificationType {
        case threat, success, info, warning
    }
    
    init() {
        loadNotifications()
    }
    
    func loadNotifications() {
        notifications = [
            AppNotification(icon: "üõ°Ô∏è", title: "–£–≥—Ä–æ–∑–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞", message: "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π —Å–∞–π—Ç", time: "5 –º–∏–Ω –Ω–∞–∑–∞–¥", isRead: false, type: .threat),
            AppNotification(icon: "‚úÖ", title: "VPN –ø–æ–¥–∫–ª—é—á—ë–Ω", message: "–í–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–æ", time: "1 —á–∞—Å –Ω–∞–∑–∞–¥", isRead: true, type: .success),
            AppNotification(icon: "‚ö†Ô∏è", title: "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", message: "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞", time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥", isRead: true, type: .warning),
            AppNotification(icon: "‚ÑπÔ∏è", title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ", message: "–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è ALADDIN", time: "–í—á–µ—Ä–∞", isRead: true, type: .info)
        ]
        updateUnreadCount()
    }
    
    func markAsRead(_ notification: AppNotification) {
        if let index = notifications.firstIndex(where: { $0.id == notification.id }) {
            notifications[index].isRead = true
            updateUnreadCount()
        }
    }
    
    func markAllAsRead() {
        notifications = notifications.map { var n = $0; n.isRead = true; return n }
        updateUnreadCount()
    }
    
    private func updateUnreadCount() {
        unreadCount = notifications.filter { !$0.isRead }.count
    }
}



