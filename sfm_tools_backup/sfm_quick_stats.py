#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
SFM Quick Stats - –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ SFM
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ SFM –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
"""

import json
from collections import Counter
from datetime import datetime


def get_sfm_stats():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ SFM"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–µ—Å—Ç—Ä
        with open('data/sfm/function_registry.json', 'r', encoding='utf-8') as f:
            registry = json.load(f)
        
        functions = registry.get('functions', {})
        total = len(functions)
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã
        statuses = Counter()
        for func_data in functions.values():
            status = func_data.get('status', 'unknown')
            statuses[status] += 1
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        active = statuses.get('active', 0)
        sleeping = statuses.get('sleeping', 0)
        running = statuses.get('running', 0)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        critical = sum(1 for f in functions.values() if f.get('is_critical', False))
        
        return {
            'total': total,
            'active': active,
            'sleeping': sleeping,
            'running': running,
            'critical': critical,
            'last_updated': registry.get('last_updated', 'unknown')
        }
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None


def print_stats():
    """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    stats = get_sfm_stats()
    if not stats:
        return
    
    print("üìä –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê SFM")
    print("=" * 40)
    print(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {stats['last_updated']}")
    print()
    print("–ü–∞—Ä–∞–º–µ—Ç—Ä\t\t–ó–Ω–∞—á–µ–Ω–∏–µ\t–ü—Ä–æ—Ü–µ–Ω—Ç")
    print("-" * 40)
    
    total = stats['total']
    print(f"–í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π\t\t{total}\t\t100.0%")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã–µ\t\t{stats['active']}\t\t{(stats['active']/total)*100:.1f}%")
    print(f"–°–ø—è—â–∏–µ\t\t\t{stats['sleeping']}\t\t{(stats['sleeping']/total)*100:.1f}%")
    print(f"–†–∞–±–æ—Ç–∞—é—â–∏–µ\t\t{stats['running']}\t\t{(stats['running']/total)*100:.1f}%")
    print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ\t\t{stats['critical']}\t\t{(stats['critical']/total)*100:.1f}%")


if __name__ == "__main__":
    print_stats()