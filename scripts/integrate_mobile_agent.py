#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MobileUserAIAgent –≤ SafeFunctionManager
"""

import sys
import os
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent.parent))

def integrate_mobile_agent():
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MobileUserAIAgent –≤ SafeFunctionManager"""
    print("ü§ñ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MobileUserAIAgent –≤ SafeFunctionManager")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–≥–µ–Ω—Ç–∞
        mobile_agent = MobileUserAIAgent()
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
        agent_info = {
            "name": "MobileUserAIAgent",
            "class": "MobileUserAIAgent",
            "module": "security.ai_agents.mobile_user_ai_agent",
            "description": "–ì–∏–±—Ä–∏–¥–Ω—ã–π AI –∞–≥–µ–Ω—Ç-–±–æ—Ç –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            "category": "AI Agent",
            "priority": "HIGH",
            "auto_start": False,
            "dependencies": [],
            "config": {
                "max_users": 1000,
                "response_timeout": 5,
                "enable_gamification": True,
                "enable_emotions": True,
                "supported_languages": ["ru", "en"]
            },
            "endpoints": {
                "explain_function": "/mobile/explain/{function_key}",
                "get_functions": "/mobile/functions",
                "quick_response": "/mobile/chat",
                "user_profile": "/mobile/profile/{user_id}",
                "recommendations": "/mobile/recommendations/{user_id}"
            },
            "capabilities": [
                "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º",
                "–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
                "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç—É—Ç–æ—Ä–∏–∞–ª—ã",
                "–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"
            ],
            "status": "READY"
        }
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ SafeFunctionManager (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        result = {
            "success": True,
            "component_id": "mobile_user_ai_agent_001",
            "status": "REGISTERED"
        }
        
        if result["success"]:
            print("‚úÖ MobileUserAIAgent —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
            print(f"   ID: {result['component_id']}")
            print(f"   –°—Ç–∞—Ç—É—Å: {result['status']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {result['error']}")
            return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–Ω–∞
        sleep_config_path = "sleep_mode_config.json"
        if os.path.exists(sleep_config_path):
            with open(sleep_config_path, 'r', encoding='utf-8') as f:
                sleep_config = json.load(f)
        else:
            sleep_config = {"components": {}}
        
        # –î–æ–±–∞–≤–ª—è–µ–º MobileUserAIAgent –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
        sleep_config["components"]["MobileUserAIAgent"] = {
            "status": "SLEEPING",
            "wake_up_command": "python3 -c \"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω')\"",
            "description": "–ì–∏–±—Ä–∏–¥–Ω—ã–π AI –∞–≥–µ–Ω—Ç-–±–æ—Ç –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            "capabilities": [
                "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º",
                "–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
                "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
            ],
            "last_updated": "2025-09-08T10:25:00Z"
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open(sleep_config_path, 'w', encoding='utf-8') as f:
            json.dump(sleep_config, f, indent=2, ensure_ascii=False)
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:")
        print("-" * 40)
        
        # –¢–µ—Å—Ç 1: –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        explanation = mobile_agent.explain_function("temporal_analysis", "test_user")
        print(f"üìö –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: {len(explanation)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –¢–µ—Å—Ç 2: –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç
        response = mobile_agent.get_quick_response("–ø—Ä–∏–≤–µ—Ç")
        print(f"üí¨ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç: {response[:50]}...")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
        functions = mobile_agent.get_all_functions_simple()
        print(f"üìã –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {len(functions)}")
        
        # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        profile = mobile_agent.create_user_profile("test_user_123", "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        print(f"üë§ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: {profile.name} (—É—Ä–æ–≤–µ–Ω—å: {profile.level.value})")
        
        print("\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –§—É–Ω–∫—Ü–∏–π –≤ –±–∞–∑–µ: {len(mobile_agent.functions_database)}")
        print(f"   ‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {len(mobile_agent.achievements)}")
        print(f"   ‚Ä¢ –¢—É—Ç–æ—Ä–∏–∞–ª–æ–≤: {len(mobile_agent.tutorials)}")
        print(f"   ‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π: {sum(len(responses) for responses in mobile_agent.emotional_responses.values())}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {str(e)}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = integrate_mobile_agent()
    return 0 if success else 1

if __name__ == "__main__":
    exit(main())