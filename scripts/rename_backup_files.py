#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è backup —Ñ–∞–π–ª–æ–≤ –≤ formatting_work
–ó–∞–º–µ–Ω—è–µ—Ç _backup –Ω–∞ _enhanced –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–∞–Ω–∏—Ü—ã
"""

import os
import shutil
from pathlib import Path
import json
from datetime import datetime

def create_backup_renaming_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è backup —Ñ–∞–π–ª–æ–≤"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
    backup_dir = Path("security/formatting_work/backup_files")
    log_file = backup_dir / "RENAMING_LOG.json"
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
    rename_mappings = [
        {
            "old_name": "mobile_security_agent_original_backup_20250103.py",
            "new_name": "mobile_security_agent_enhanced.py"
        },
        {
            "old_name": "financial_protection_hub_original_backup_20250103.py", 
            "new_name": "financial_protection_hub_enhanced.py"
        },
        {
            "old_name": "malware_detection_agent_original_backup_20250103.py",
            "new_name": "malware_detection_agent_enhanced.py"
        },
        {
            "old_name": "safe_quality_analyzer_original_backup_20250103.py",
            "new_name": "safe_quality_analyzer_enhanced.py"
        },
        {
            "old_name": "security_quality_analyzer_original_backup_20250103.py",
            "new_name": "security_quality_analyzer_enhanced.py"
        },
        {
            "old_name": "family_communication_hub_a_plus_backup.py",
            "new_name": "family_communication_hub_enhanced.py"
        },
        {
            "old_name": "parental_control_bot_v2_original_backup_20250103.py",
            "new_name": "parental_control_bot_v2_enhanced.py"
        },
        {
            "old_name": "notification_service_original_backup_20250103.py",
            "new_name": "notification_service_enhanced.py"
        },
        {
            "old_name": "time_monitor_original_backup_20250103.py",
            "new_name": "time_monitor_enhanced.py"
        },
        {
            "old_name": "elderly_interface_manager_backup_original_backup_20250103.py",
            "new_name": "elderly_interface_manager_enhanced.py"
        },
        {
            "old_name": "content_analyzer_original_backup_20250103.py",
            "new_name": "content_analyzer_enhanced.py"
        },
        {
            "old_name": "put_to_sleep_backup.py",
            "new_name": "put_to_sleep_enhanced.py"
        },
        {
            "old_name": "user_interface_manager_extra_backup.py",
            "new_name": "user_interface_manager_extra_enhanced.py"
        }
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥
    log_data = {
        "timestamp": datetime.now().isoformat(),
        "script_version": "1.0",
        "total_files": len(rename_mappings),
        "renamed_files": 0,
        "failed_files": 0,
        "rename_details": []
    }
    
    print("üîÑ –ù–ê–ß–ò–ù–ê–ï–ú –ü–ï–†–ï–ò–ú–ï–ù–û–í–ê–ù–ò–ï BACKUP –§–ê–ô–õ–û–í")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
    if not backup_dir.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {backup_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
    for i, mapping in enumerate(rename_mappings, 1):
        old_path = backup_dir / mapping["old_name"]
        new_path = backup_dir / mapping["new_name"]
        
        print(f"\n{i:2d}. {mapping['old_name']}")
        print(f"    ‚Üí {mapping['new_name']}")
        
        if old_path.exists():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if new_path.exists():
                    print(f"    ‚ö†Ô∏è  –§–∞–π–ª {mapping['new_name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                    log_data["rename_details"].append({
                        "old_name": mapping["old_name"],
                        "new_name": mapping["new_name"],
                        "status": "failed",
                        "reason": "Target file already exists",
                        "timestamp": datetime.now().isoformat()
                    })
                    log_data["failed_files"] += 1
                    continue
                
                # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª
                old_path.rename(new_path)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                file_size = new_path.stat().st_size
                
                print(f"    ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω ({file_size:,} –±–∞–π—Ç)")
                
                log_data["rename_details"].append({
                    "old_name": mapping["old_name"],
                    "new_name": mapping["new_name"],
                    "status": "success",
                    "file_size": file_size,
                    "timestamp": datetime.now().isoformat()
                })
                log_data["renamed_files"] += 1
                
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                log_data["rename_details"].append({
                    "old_name": mapping["old_name"],
                    "new_name": mapping["new_name"],
                    "status": "failed",
                    "reason": str(e),
                    "timestamp": datetime.now().isoformat()
                })
                log_data["failed_files"] += 1
        else:
            print(f"    ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            log_data["rename_details"].append({
                "old_name": mapping["old_name"],
                "new_name": mapping["new_name"],
                "status": "failed",
                "reason": "Source file not found",
                "timestamp": datetime.now().isoformat()
            })
            log_data["failed_files"] += 1
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥
    try:
        with open(log_file, 'w', encoding='utf-8') as f:
            json.dump(log_data, f, indent=2, ensure_ascii=False)
        print(f"\nüìù –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {log_file}")
    except Exception as e:
        print(f"\n‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–∞: {e}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {log_data['total_files']}")
    print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: {log_data['renamed_files']}")
    print(f"   ‚Ä¢ –û—à–∏–±–æ–∫: {log_data['failed_files']}")
    
    if log_data["failed_files"] == 0:
        print(f"\nüéâ –í–°–ï –§–ê–ô–õ–´ –£–°–ü–ï–®–ù–û –ü–ï–†–ï–ò–ú–ï–ù–û–í–ê–ù–´!")
        return True
    else:
        print(f"\n‚ö†Ô∏è  –ï–°–¢–¨ –û–®–ò–ë–ö–ò! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.")
        return False

if __name__ == "__main__":
    success = create_backup_renaming_script()
    exit(0 if success else 1)
