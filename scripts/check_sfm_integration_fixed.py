#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ SFM (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"""

import sys
import os
sys.path.insert(0, '/Users/sergejhlystov/ALADDIN_NEW')

from security.safe_function_manager import SafeFunctionManager

def check_sfm_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ SFM"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –í SFM:")
    print("================================================")
    
    try:
        # –°–æ–∑–¥–∞–µ–º SFM
        sfm = SafeFunctionManager()
        print("‚úÖ SFM —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π
        all_functions = sfm.get_all_functions_status()
        print(f"üìä –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π –≤ SFM: {len(all_functions)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
        print("\nüìã –í–°–ï –§–£–ù–ö–¶–ò–ò –í SFM:")
        for i, func_info in enumerate(all_functions):
            print(f"  {i+1}. {func_info}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ—É–Ω–∫—Ü–∏–π
        enabled_count = sum(1 for func_info in all_functions 
                          if hasattr(func_info, 'status') and func_info.status == 'enabled')
        sleeping_count = sum(1 for func_info in all_functions 
                           if hasattr(func_info, 'status') and func_info.status == 'sleeping')
        disabled_count = sum(1 for func_info in all_functions 
                           if hasattr(func_info, 'status') and func_info.status == 'disabled')
        
        print(f"\nüìä –°–¢–ê–¢–£–° –§–£–ù–ö–¶–ò–ô:")
        print(f"  ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {enabled_count}")
        print(f"  üò¥ –°–ø—è—â–∏—Ö: {sleeping_count}")
        print(f"  ‚ùå –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö: {disabled_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã SFM
        print(f"\nüîß –î–û–°–¢–£–ü–ù–´–ï –ú–ï–¢–û–î–´ SFM:")
        methods = [method for method in dir(sfm) if not method.startswith('_')]
        for method in methods[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"  - {method}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ SFM: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    check_sfm_integration()
