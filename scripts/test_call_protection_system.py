#!/usr/bin/env python3
"""
üì± ALADDIN - Test Call Protection System
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤ –∏ SIM-–∫–∞—Ä—Ç

–ê–≤—Ç–æ—Ä: ALADDIN Security Team
–í–µ—Ä—Å–∏—è: 1.0
–î–∞—Ç–∞: 2025-01-27
"""

import sys
import os
import asyncio
import logging
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append("/Users/sergejhlystov/ALADDIN_NEW")

def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[
            logging.FileHandler('logs/call_protection_test.log'),
            logging.StreamHandler()
        ]
    )
    return logging.getLogger(__name__)

async def test_call_protection_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤"""
    logger = logging.getLogger(__name__)
    
    try:
        from security.integrations.sim_card_monitoring import SIMCardMonitoring
        
        logger.info("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤...")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        call_protection = SIMCardMonitoring()
        
        # –¢–ï–°–¢ 1: –ó–≤–æ–Ω–æ–∫ –æ—Ç –º–∞–º—ã (–¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏)
        logger.info("=" * 60)
        logger.info("üìû –¢–ï–°–¢ 1: –ó–≤–æ–Ω–æ–∫ –æ—Ç –º–∞–º—ã")
        logger.info("=" * 60)
        
        mom_call = {
            "call_id": "call_001",
            "caller_number": "+7-900-123-45-67",  # –ù–æ–º–µ—Ä –º–∞–º—ã –∏–∑ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö
            "receiver_number": "+7-900-111-22-33",
            "timestamp": datetime.now()
        }
        
        mom_analysis = call_protection.analyze_call(mom_call)
        logger.info(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å={mom_analysis.is_safe}, –¢–∏–ø={mom_analysis.caller_type}")
        logger.info(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {mom_analysis.blocking_recommendation}")
        logger.info(f"‚úÖ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {mom_analysis.confidence:.2f}")
        
        # –¢–ï–°–¢ 2: –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–π –∑–≤–æ–Ω–æ–∫ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)
        logger.info("=" * 60)
        logger.info("üìû –¢–ï–°–¢ 2: –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–π –∑–≤–æ–Ω–æ–∫")
        logger.info("=" * 60)
        
        scam_call = {
            "call_id": "call_002",
            "caller_number": "+7-800-555-00-00",  # –ù–æ–º–µ—Ä –∏–∑ –±–∞–∑—ã –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤
            "receiver_number": "+7-900-111-22-33",
            "timestamp": datetime.now()
        }
        
        scam_analysis = call_protection.analyze_call(scam_call)
        logger.info(f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å={scam_analysis.is_safe}, –¢–∏–ø={scam_analysis.caller_type}")
        logger.info(f"‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {scam_analysis.blocking_recommendation}")
        logger.info(f"‚ùå –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {scam_analysis.confidence:.2f}")
        
        # –¢–ï–°–¢ 3: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä (–∞–Ω–∞–ª–∏–∑)
        logger.info("=" * 60)
        logger.info("üìû –¢–ï–°–¢ 3: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
        logger.info("=" * 60)
        
        unknown_call = {
            "call_id": "call_003",
            "caller_number": "+7-900-777-88-99",  # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä
            "receiver_number": "+7-900-111-22-33",
            "timestamp": datetime.now()
        }
        
        unknown_analysis = call_protection.analyze_call(unknown_call)
        logger.info(f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å={unknown_analysis.is_safe}, –¢–∏–ø={unknown_analysis.caller_type}")
        logger.info(f"üîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {unknown_analysis.blocking_recommendation}")
        logger.info(f"üîç –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {unknown_analysis.confidence:.2f}")
        
        # –¢–ï–°–¢ 4: –ó–≤–æ–Ω–æ–∫ –æ—Ç –¥—Ä—É–≥–∞ (–¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏)
        logger.info("=" * 60)
        logger.info("üìû –¢–ï–°–¢ 4: –ó–≤–æ–Ω–æ–∫ –æ—Ç –¥—Ä—É–≥–∞")
        logger.info("=" * 60)
        
        friend_call = {
            "call_id": "call_004",
            "caller_number": "+7-900-345-67-89",  # –ù–æ–º–µ—Ä –¥—Ä—É–≥–∞ –∏–∑ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö
            "receiver_number": "+7-900-111-22-33",
            "timestamp": datetime.now()
        }
        
        friend_analysis = call_protection.analyze_call(friend_call)
        logger.info(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å={friend_analysis.is_safe}, –¢–∏–ø={friend_analysis.caller_type}")
        logger.info(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {friend_analysis.blocking_recommendation}")
        logger.info(f"‚úÖ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {friend_analysis.confidence:.2f}")
        
        # –¢–ï–°–¢ 5: –ù–æ—á–Ω–æ–π –∑–≤–æ–Ω–æ–∫ –æ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ (–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ)
        logger.info("=" * 60)
        logger.info("üìû –¢–ï–°–¢ 5: –ù–æ—á–Ω–æ–π –∑–≤–æ–Ω–æ–∫ –æ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ")
        logger.info("=" * 60)
        
        night_call = {
            "call_id": "call_005",
            "caller_number": "+7-900-999-88-77",  # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä
            "receiver_number": "+7-900-111-22-33",
            "timestamp": datetime(2024, 12, 1, 2, 30)  # 2:30 –Ω–æ—á–∏
        }
        
        night_analysis = call_protection.analyze_call(night_call)
        logger.info(f"üåô –†–µ–∑—É–ª—å—Ç–∞—Ç: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å={night_analysis.is_safe}, –¢–∏–ø={night_analysis.caller_type}")
        logger.info(f"üåô –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {night_analysis.blocking_recommendation}")
        logger.info(f"üåô –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {night_analysis.confidence:.2f}")
        
        # –¢–ï–°–¢ 6: –ê–Ω–∞–ª–∏–∑ SIM-–∫–∞—Ä—Ç—ã
        logger.info("=" * 60)
        logger.info("üì± –¢–ï–°–¢ 6: –ê–Ω–∞–ª–∏–∑ SIM-–∫–∞—Ä—Ç—ã")
        logger.info("=" * 60)
        
        sim_data = {
            "sim_id": "sim_001",
            "phone_number": "+7-900-123-45-67",
            "carrier": "Tele2",
            "registration_date": "2024-01-01"
        }
        
        sim_analysis = call_protection.analyze_sim_card(sim_data)
        logger.info(f"üì± –†–µ–∑—É–ª—å—Ç–∞—Ç: –õ–µ–≥–∏—Ç–∏–º–Ω–æ—Å—Ç—å={sim_analysis.is_legitimate}")
        logger.info(f"üì± –†–∏—Å–∫: {sim_analysis.risk_score:.2f}")
        logger.info(f"üì± –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {sim_analysis.recommendation}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = call_protection.get_statistics()
        logger.info("=" * 60)
        logger.info("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´:")
        logger.info("=" * 60)
        logger.info(f"üìû –í—Å–µ–≥–æ –∑–≤–æ–Ω–∫–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {stats['total_calls_analyzed']}")
        logger.info(f"üö´ –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {stats['scam_calls_blocked']}")
        logger.info(f"‚úÖ –°–µ–º—å—è –∏ –¥—Ä—É–∑—å—è –ø—Ä–æ–ø—É—â–µ–Ω—ã: {stats['family_friends_allowed']}")
        logger.info(f"‚ö†Ô∏è –õ–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π: {stats['false_positives']}")
        logger.info(f"üìã –î–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {stats['trusted_contacts_count']}")
        logger.info(f"üö´ –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: {stats['scam_database_size']}")
        
        logger.info("=" * 60)
        logger.info("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        logger.info("=" * 60)
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤: {str(e)}")
        return False

def demonstrate_family_protection():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã —Å–µ–º—å–∏"""
    logger = logging.getLogger(__name__)
    
    logger.info("=" * 80)
    logger.info("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–©–ò–¢–´ –°–ï–ú–¨–ò")
    logger.info("=" * 80)
    
    family_scenarios = [
        {
            "scenario": "–ó–≤–æ–Ω–æ–∫ –æ—Ç –º–∞–º—ã",
            "number": "+7-900-123-45-67",
            "expected": "NEVER_BLOCK",
            "reason": "–í —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
        },
        {
            "scenario": "–ó–≤–æ–Ω–æ–∫ –æ—Ç –ø–∞–ø—ã", 
            "number": "+7-900-234-56-78",
            "expected": "NEVER_BLOCK",
            "reason": "–í —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
        },
        {
            "scenario": "–ó–≤–æ–Ω–æ–∫ –æ—Ç –ª—É—á—à–µ–≥–æ –¥—Ä—É–≥–∞",
            "number": "+7-900-345-67-89", 
            "expected": "NEVER_BLOCK",
            "reason": "–í —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
        },
        {
            "scenario": "–ó–≤–æ–Ω–æ–∫ —Å —Ä–∞–±–æ—Ç—ã",
            "number": "+7-900-456-78-90",
            "expected": "NEVER_BLOCK", 
            "reason": "–í —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
        }
    ]
    
    for scenario in family_scenarios:
        logger.info(f"üìû {scenario['scenario']}: {scenario['number']}")
        logger.info(f"   ‚úÖ –û–∂–∏–¥–∞–µ—Ç—Å—è: {scenario['expected']}")
        logger.info(f"   üìù –ü—Ä–∏—á–∏–Ω–∞: {scenario['reason']}")
        logger.info("")
    
    logger.info("üõ°Ô∏è –í–´–í–û–î: –°–µ–º—å—è –∏ –¥—Ä—É–∑—å—è –ù–ò–ö–û–ì–î–ê –ù–ï –ë–£–î–£–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´!")
    logger.info("=" * 80)

def demonstrate_scam_protection():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤"""
    logger = logging.getLogger(__name__)
    
    logger.info("=" * 80)
    logger.info("üö® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–©–ò–¢–´ –û–¢ –ú–û–®–ï–ù–ù–ò–ö–û–í")
    logger.info("=" * 80)
    
    scam_scenarios = [
        {
            "scenario": "–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ",
            "number": "+7-800-555-00-00",
            "expected": "BLOCK_IMMEDIATELY",
            "reason": "–í –±–∞–∑–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤"
        },
        {
            "scenario": "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è",
            "number": "+7-900-999-99-99",
            "expected": "BLOCK_IMMEDIATELY", 
            "reason": "–í –±–∞–∑–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤"
        },
        {
            "scenario": "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —Ü–∏—Ñ—Ä–∞–º–∏",
            "number": "+7-900-777-77-77",
            "expected": "MONITOR/BLOCK",
            "reason": "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –Ω–æ–º–µ—Ä–∞"
        },
        {
            "scenario": "–ù–æ—á–Ω–æ–π –∑–≤–æ–Ω–æ–∫ –æ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ",
            "number": "+7-900-111-22-33",
            "expected": "MONITOR",
            "reason": "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞"
        }
    ]
    
    for scenario in scam_scenarios:
        logger.info(f"üìû {scenario['scenario']}: {scenario['number']}")
        logger.info(f"   ‚ùå –û–∂–∏–¥–∞–µ—Ç—Å—è: {scenario['expected']}")
        logger.info(f"   üìù –ü—Ä–∏—á–∏–Ω–∞: {scenario['reason']}")
        logger.info("")
    
    logger.info("üõ°Ô∏è –í–´–í–û–î: –ú–æ—à–µ–Ω–Ω–∏–∫–∏ –±—É–¥—É—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!")
    logger.info("=" * 80)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger = setup_logging()
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤...")
    logger.info("=" * 80)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã —Å–µ–º—å–∏
    demonstrate_family_protection()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤
    demonstrate_scam_protection()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    logger.info("üîß –ó–∞–ø—É—Å–∫ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤...")
    if not await test_call_protection_system():
        logger.error("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–æ")
        return False
    
    logger.info("=" * 80)
    logger.info("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    logger.info("üõ°Ô∏è –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ó–ê–©–ò–¢–ï –í–ê–®–ï–ô –°–ï–ú–¨–ò!")
    logger.info("=" * 80)
    
    return True

if __name__ == "__main__":
    success = asyncio.run(main())
    
    if success:
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
        print("üõ°Ô∏è –°–µ–º—å—è –∑–∞—â–∏—â–µ–Ω–∞, –º–æ—à–µ–Ω–Ω–∏–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!")
        print("üì± –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª:")
        print("   üìÑ ALADDIN_CALL_PROTECTION_EXPLANATION.md")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∑–≤–æ–Ω–∫–æ–≤")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")