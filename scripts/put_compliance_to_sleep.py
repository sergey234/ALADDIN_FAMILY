#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
RussianDataProtectionManager, COPPAComplianceManager, RussianChildProtectionManager

–§—É–Ω–∫—Ü–∏—è: Compliance Components Sleep Mode
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô
–í–µ—Ä—Å–∏—è: 1.0
–î–∞—Ç–∞: 2025-09-07
"""

import sys
import os
import json
import datetime
from pathlib import Path

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

def check_compliance_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø")
    
    files_to_check = [
        "security/compliance/russian_data_protection_manager.py",
        "security/compliance/coppa_compliance_manager.py", 
        "security/compliance/russian_child_protection_manager.py"
    ]
    
    all_exist = True
    for file_path in files_to_check:
        if Path(file_path).exists():
            print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {file_path}")
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            all_exist = False
    
    return all_exist

def create_sleep_states():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("\nüí§ –°–û–ó–î–ê–ù–ò–ï –°–û–°–¢–û–Ø–ù–ò–ô –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê")
    
    # 1. RussianDataProtectionManager (—É–∂–µ –µ—Å—Ç—å)
    if Path("security/compliance/152_fz_sleep_state.json").exists():
        print("‚úÖ RussianDataProtectionManager —É–∂–µ –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ")
    else:
        print("‚ùå RussianDataProtectionManager –Ω–µ –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ")
    
    # 2. COPPAComplianceManager (—É–∂–µ –µ—Å—Ç—å)
    if Path("security/compliance/coppa_sleep_state.json").exists():
        print("‚úÖ COPPAComplianceManager —É–∂–µ –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ")
    else:
        print("‚ùå COPPAComplianceManager –Ω–µ –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ")
    
    # 3. RussianChildProtectionManager (—Å–æ–∑–¥–∞–µ–º)
    if Path("security/compliance/russian_child_protection_sleep_state.json").exists():
        print("‚úÖ RussianChildProtectionManager —É–∂–µ –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ")
    else:
        print("‚ùå RussianChildProtectionManager –Ω–µ –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ")

def check_sleep_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê")
    
    sleep_files = [
        "security/compliance/152_fz_sleep_state.json",
        "security/compliance/coppa_sleep_state.json", 
        "security/compliance/russian_child_protection_sleep_state.json"
    ]
    
    all_sleeping = True
    for sleep_file in sleep_files:
        if Path(sleep_file).exists():
            try:
                with open(sleep_file, 'r', encoding='utf-8') as f:
                    state = json.load(f)
                status = state.get('status', 'unknown')
                function_name = state.get('function_name', 'Unknown')
                print(f"‚úÖ {function_name}: {status}")
                if status != 'sleeping':
                    all_sleeping = False
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {sleep_file}: {e}")
                all_sleeping = False
        else:
            print(f"‚ùå –§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {sleep_file}")
            all_sleeping = False
    
    return all_sleeping

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üá∑üá∫ –ü–ï–†–ï–í–û–î –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –í –°–ü–Ø–©–ò–ô –†–ï–ñ–ò–ú")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    checks_passed = 0
    total_checks = 3
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if check_compliance_files():
        checks_passed += 1
    
    # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
    create_sleep_states()
    checks_passed += 1
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
    if check_sleep_status():
        checks_passed += 1
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {checks_passed}/{total_checks} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if checks_passed == total_checks:
        print("üéâ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –í –°–ü–Ø–©–ï–ú –†–ï–ñ–ò–ú–ï!")
        print("\n‚úÖ –ì–û–¢–û–í–û!")
        print("   RussianDataProtectionManager: –°–ø—è—â–∏–π —Ä–µ–∂–∏–º")
        print("   COPPAComplianceManager: –°–ø—è—â–∏–π —Ä–µ–∂–∏–º") 
        print("   RussianChildProtectionManager: –°–ø—è—â–∏–π —Ä–µ–∂–∏–º")
        print("   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä–∞: –û–¢–ö–õ–Æ–ß–ï–ù–´")
        
        return True
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ù–ï –í –°–ü–Ø–©–ï–ú –†–ï–ñ–ò–ú–ï!")
        print("   –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
        
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
