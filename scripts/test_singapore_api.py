#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Singapore API –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
"""

import asyncio
import logging
import sys
import os
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.vpn.vpn_security_system import VPNSecuritySystem, VPNSecurityLevel

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_singapore_mobile():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Singapore –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"""
    print("ÔøΩÔøΩ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SINGAPORE VPN –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–û–ì–û –£–°–¢–†–û–ô–°–¢–í–ê")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ VPN —Å–∏—Å—Ç–µ–º—ã
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ VPN Security System...")
        vpn_system = VPNSecuritySystem("MobileTestVPN")
        print("‚úÖ VPN Security System —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ Singapore —Å–µ—Ä–≤–µ—Ä–æ–≤
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ Singapore —Å–µ—Ä–≤–µ—Ä–æ–≤...")
        singapore_servers = vpn_system.get_available_servers("Singapore")
        print(f"   –ù–∞–π–¥–µ–Ω–æ Singapore —Å–µ—Ä–≤–µ—Ä–æ–≤: {len(singapore_servers)}")
        
        for server in singapore_servers:
            print(f"   ÔøΩÔøΩ {server['name']} ({server['city']})")
            print(f"      –ü—Ä–æ—Ç–æ–∫–æ–ª: {server['protocol']}")
            print(f"      –ó–∞–¥–µ—Ä–∂–∫–∞: {server['latency']:.1f}ms")
            print(f"      –ù–∞–≥—Ä—É–∑–∫–∞: {server['load']:.1%}")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Singapore
        print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Singapore...")
        test_user = f"mobile_user_{int(time.time())}"
        
        print("   üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Singapore...")
        success, message, report = await vpn_system.connect(
            test_user, 
            country="Singapore",
            security_level=VPNSecurityLevel.HIGH
        )
        
        if success:
            print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {message}")
            print(f"   –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {report.get('provider', 'unknown')}")
            print(f"   –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {report.get('connection_time', 0):.2f}—Å")
            print(f"   –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {report.get('security_level', 'unknown')}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
            connection_status = vpn_system.get_connection_status(test_user)
            if connection_status:
                print(f"   –°—Ç–∞—Ç—É—Å: {connection_status['status']}")
                print(f"   –°–µ—Ä–≤–µ—Ä: {connection_status['server_id']}")
                print(f"   –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {connection_status['start_time']}")
            
            # –ò–º–∏—Ç–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
            print("\n5. –ò–º–∏—Ç–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ...")
            print("   üì± –û—Ç–∫—Ä—ã—Ç–∏–µ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü...")
            await asyncio.sleep(2)
            print("   üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ IP –∞–¥—Ä–µ—Å–∞...")
            await asyncio.sleep(1)
            print("   üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏...")
            await asyncio.sleep(2)
            
            # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ
            print("\n6. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç VPN...")
            success, message = await vpn_system.disconnect(test_user)
            if success:
                print(f"   ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {message}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è: {message}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {message}")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\n7. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print("=" * 25)
        final_stats = vpn_system.get_system_stats()
        print(f"   –í—Å–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {final_stats['total_connections']}")
        print(f"   –£—Å–ø–µ—à–Ω—ã—Ö: {final_stats['successful_connections']}")
        print(f"   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {final_stats['success_rate']:.1f}%")
        print(f"   –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {final_stats['security_level']}")
        
        print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SINGAPORE –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–û–ì–û –£–°–¢–†–û–ô–°–¢–í–ê –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üì± VPN SECURITY SYSTEM - –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SINGAPORE –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–û–ì–û")
    print("=" * 80)
    print(f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 80)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Singapore
    success = await test_singapore_mobile()
    
    print("\n" + "=" * 80)
    print(f"–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    if success:
        print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SINGAPORE –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    else:
        print("‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SINGAPORE –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò!")
    print("=" * 80)

if __name__ == "__main__":
    asyncio.run(main())
