#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç APIGateway - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import sys
import os
import asyncio
import time
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_api_gateway():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ APIGateway"""
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï APIGATEWAY")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç APIGateway
        from security.microservices.api_gateway import APIGateway, HTTPMethod, AuthMethod
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        config = {
            'database_url': 'sqlite:///test_api_gateway.db',
            'jwt_secret': 'test-secret-key'
        }
        
        gateway = APIGateway(name="TestAPIGateway", config=config)
        print("‚úÖ APIGateway: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è API –∫–ª—é—á–∞
        try:
            from security.microservices.api_gateway import APIKeyRequest
            key_request = APIKeyRequest(
                name="test_key",
                permissions=["read", "write"],
                rate_limit=1000,
                expires_in_days=30
            )
            print("‚úÖ APIKeyRequest: —Å–æ–∑–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ùå APIKeyRequest: {e}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
        try:
            from security.microservices.api_gateway import RouteRequest
            route_request = RouteRequest(
                path="/test",
                method=HTTPMethod.GET,
                service_name="test_service",
                service_url="http://localhost:8001",
                rate_limit=100,
                timeout=30,
                retry_count=3
            )
            print("‚úÖ RouteRequest: —Å–æ–∑–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ùå RouteRequest: {e}")
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        status = gateway.get_status()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {status['status']}")
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å—ã: {status['services_count']}")
        print(f"‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã: {status['routes_count']}")
        
        # –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        try:
            jwt_provider = gateway.auth_providers.get(AuthMethod.JWT)
            if jwt_provider:
                print("‚úÖ JWT –ø—Ä–æ–≤–∞–π–¥–µ—Ä: –¥–æ—Å—Ç—É–ø–µ–Ω")
            
            api_key_provider = gateway.auth_providers.get(AuthMethod.API_KEY)
            if api_key_provider:
                print("‚úÖ API –∫–ª—é—á –ø—Ä–æ–≤–∞–π–¥–µ—Ä: –¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: {e}")
        
        print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: APIGateway —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

if __name__ == "__main__":
    success = test_api_gateway()
    if success:
        print("\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
    else:
        print("\nüí• –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù!")