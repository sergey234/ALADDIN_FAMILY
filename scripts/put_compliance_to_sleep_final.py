#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
"""

import sys
import os
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

def put_compliance_to_sleep():
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º"""
    print("üí§ –ü–ï–†–ï–í–û–î –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –í –°–ü–Ø–©–ò–ô –†–ï–ñ–ò–ú")
    print("=" * 60)
    
    compliance_components = {
        "RussianDataProtectionManager": {
            "file_path": "security/compliance/russian_data_protection_manager.py",
            "sleep_state_file": "security/compliance/152_fz_sleep_state.json",
            "function_id": "function_152_fz_compliance",
            "name": "152-–§–ó Compliance System"
        },
        "COPPAComplianceManager": {
            "file_path": "security/compliance/coppa_compliance_manager.py",
            "sleep_state_file": "security/compliance/coppa_sleep_state.json",
            "function_id": "function_coppa_compliance",
            "name": "COPPA Compliance Manager"
        },
        "RussianChildProtectionManager": {
            "file_path": "security/compliance/russian_child_protection_manager.py",
            "sleep_state_file": "security/compliance/russian_child_protection_sleep_state.json",
            "function_id": "function_russian_child_protection",
            "name": "Russian Child Protection Manager"
        }
    }
    
    base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø")
    for key, details in compliance_components.items():
        full_path = os.path.join(base_dir, details["file_path"])
        if os.path.exists(full_path):
            print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {details['file_path']}")
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {details['file_path']}")
    
    print("\nüí§ –°–û–ó–î–ê–ù–ò–ï –°–û–°–¢–û–Ø–ù–ò–ô –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê")
    for key, details in compliance_components.items():
        sleep_state_full_path = os.path.join(base_dir, details["sleep_state_file"])
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
        sleep_state = {
            "function_name": details["name"],
            "function_id": details["function_id"],
            "status": "sleeping",
            "priority": "critical",
            "created_at": datetime.now().isoformat(),
            "sleep_mode": True,
            "compliance_requirements": [
                "152-–§–ó '–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'",
                "–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –†–§",
                "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä–∞ –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö",
                "–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                "–í–µ–¥–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ –¥–æ—Å—Ç—É–ø–∞",
                "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                "–ü—Ä–∞–≤–æ –Ω–∞ –∑–∞–±–≤–µ–Ω–∏–µ (—É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö)"
            ],
            "capabilities": [
                "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                "–ü—Ä–∞–≤–æ –Ω–∞ –∑–∞–±–≤–µ–Ω–∏–µ (—É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö)",
                "–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –†–§)",
                "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö (–≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤)",
                "–ê—É–¥–∏—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º",
                "–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ 152-–§–ó"
            ],
            "statistics": {
                "subjects_registered": 0,
                "active_consents": 0,
                "violations_detected": 0,
                "data_requests_processed": 0,
                "deletion_requests_processed": 0
            },
            "integration_status": {
                "safe_function_manager": True,
                "compliance_system": True,
                "monitoring_system": True
            }
        }
        
        with open(sleep_state_full_path, 'w', encoding='utf-8') as f:
            json.dump(sleep_state, f, ensure_ascii=False, indent=4)
        print(f"‚úÖ {details['name']} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º")
    
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê")
    all_in_sleep_mode = True
    for key, details in compliance_components.items():
        sleep_state_full_path = os.path.join(base_dir, details["sleep_state_file"])
        try:
            with open(sleep_state_full_path, 'r', encoding='utf-8') as f:
                state = json.load(f)
            if state.get("status") == "sleeping" and state.get("sleep_mode") == True:
                print(f"‚úÖ {details['name']}: sleeping")
            else:
                print(f"‚ùå {details['name']}: active (–æ—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è)")
                all_in_sleep_mode = False
        except (json.JSONDecodeError, FileNotFoundError):
            print(f"‚ùå –§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {details['sleep_state_file']}")
            all_in_sleep_mode = False
    
    print("\n" + "=" * 60)
    if all_in_sleep_mode:
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢: 3/3 –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
        print("üéâ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –í –°–ü–Ø–©–ï–ú –†–ï–ñ–ò–ú–ï!")
    else:
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–ï –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´")
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ù–ï –í –°–ü–Ø–©–ï–ú –†–ï–ñ–ò–ú–ï!")
    
    print("\n‚úÖ –ì–û–¢–û–í–û!")
    for key, details in compliance_components.items():
        print(f"   {details['name']}: –°–ø—è—â–∏–π —Ä–µ–∂–∏–º")
    print("   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä–∞: –û–¢–ö–õ–Æ–ß–ï–ù–´")


if __name__ == "__main__":
    put_compliance_to_sleep()
