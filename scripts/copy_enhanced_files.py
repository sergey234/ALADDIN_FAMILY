#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è enhanced —Ñ–∞–π–ª–æ–≤ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ SFM —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import os
import shutil
from pathlib import Path
import json
from datetime import datetime

def copy_enhanced_files():
    """–ö–æ–ø–∏—Ä—É–µ—Ç enhanced —Ñ–∞–π–ª—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
    source_dir = Path("security/formatting_work/backup_files")
    log_file = source_dir / "COPY_ENHANCED_LOG.json"
    
    # –ú–∞–ø–ø–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤: enhanced —Ñ–∞–π–ª -> –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    file_mappings = [
        {
            "enhanced_file": "mobile_security_agent_enhanced.py",
            "original_path": "security/ai_agents/mobile_security_agent_enhanced.py"
        },
        {
            "enhanced_file": "financial_protection_hub_enhanced.py",
            "original_path": "security/ai_agents/financial_protection_hub_enhanced.py"
        },
        {
            "enhanced_file": "malware_detection_agent_enhanced.py",
            "original_path": "security/ai_agents/malware_detection_agent_enhanced.py"
        },
        {
            "enhanced_file": "safe_quality_analyzer_enhanced.py",
            "original_path": "security/ai_agents/safe_quality_analyzer_enhanced.py"
        },
        {
            "enhanced_file": "security_quality_analyzer_enhanced.py",
            "original_path": "security/ai_agents/security_quality_analyzer_enhanced.py"
        },
        {
            "enhanced_file": "family_communication_hub_enhanced.py",
            "original_path": "security/family/family_communication_hub_enhanced.py"
        },
        {
            "enhanced_file": "parental_control_bot_v2_enhanced.py",
            "original_path": "security/bots/parental_control_bot_v2_enhanced.py"
        },
        {
            "enhanced_file": "notification_service_enhanced.py",
            "original_path": "security/microservices/notification_service_enhanced.py"
        },
        {
            "enhanced_file": "time_monitor_enhanced.py",
            "original_path": "security/active/time_monitor_enhanced.py"
        },
        {
            "enhanced_file": "elderly_interface_manager_enhanced.py",
            "original_path": "security/managers/elderly_interface_manager_enhanced.py"
        },
        {
            "enhanced_file": "content_analyzer_enhanced.py",
            "original_path": "security/ai_agents/content_analyzer_enhanced.py"
        },
        {
            "enhanced_file": "put_to_sleep_enhanced.py",
            "original_path": "security/microservices/put_to_sleep_enhanced.py"
        },
        {
            "enhanced_file": "user_interface_manager_extra_enhanced.py",
            "original_path": "security/microservices/user_interface_manager_extra_enhanced.py"
        }
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥
    log_data = {
        "timestamp": datetime.now().isoformat(),
        "script_version": "1.0",
        "total_files": len(file_mappings),
        "copied_files": 0,
        "failed_files": 0,
        "copy_details": []
    }
    
    print("üîÑ –ö–û–ü–ò–†–û–í–ê–ù–ò–ï ENHANCED –§–ê–ô–õ–û–í –í –û–°–ù–û–í–ù–£–Æ –°–ò–°–¢–ï–ú–£")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
    if not source_dir.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {source_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    for i, mapping in enumerate(file_mappings, 1):
        source_path = source_dir / mapping["enhanced_file"]
        dest_path = Path(mapping["original_path"])
        
        print(f"\n{i:2d}. {mapping['enhanced_file']}")
        print(f"    ‚Üí {mapping['original_path']}")
        
        if source_path.exists():
            try:
                # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                dest_path.parent.mkdir(parents=True, exist_ok=True)
                
                # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
                shutil.copy2(source_path, dest_path)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                file_size = dest_path.stat().st_size
                
                print(f"    ‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω ({file_size:,} –±–∞–π—Ç)")
                
                log_data["copy_details"].append({
                    "enhanced_file": mapping["enhanced_file"],
                    "original_path": mapping["original_path"],
                    "status": "success",
                    "file_size": file_size,
                    "timestamp": datetime.now().isoformat()
                })
                log_data["copied_files"] += 1
                
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                log_data["copy_details"].append({
                    "enhanced_file": mapping["enhanced_file"],
                    "original_path": mapping["original_path"],
                    "status": "failed",
                    "reason": str(e),
                    "timestamp": datetime.now().isoformat()
                })
                log_data["failed_files"] += 1
        else:
            print(f"    ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            log_data["copy_details"].append({
                "enhanced_file": mapping["enhanced_file"],
                "original_path": mapping["original_path"],
                "status": "failed",
                "reason": "Source file not found",
                "timestamp": datetime.now().isoformat()
            })
            log_data["failed_files"] += 1
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥
    try:
        with open(log_file, 'w', encoding='utf-8') as f:
            json.dump(log_data, f, indent=2, ensure_ascii=False)
        print(f"\nüìù –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {log_file}")
    except Exception as e:
        print(f"\n‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–∞: {e}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {log_data['total_files']}")
    print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: {log_data['copied_files']}")
    print(f"   ‚Ä¢ –û—à–∏–±–æ–∫: {log_data['failed_files']}")
    
    if log_data["failed_files"] == 0:
        print(f"\nüéâ –í–°–ï –§–ê–ô–õ–´ –£–°–ü–ï–®–ù–û –°–ö–û–ü–ò–†–û–í–ê–ù–´!")
        return True
    else:
        print(f"\n‚ö†Ô∏è  –ï–°–¢–¨ –û–®–ò–ë–ö–ò! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.")
        return False

if __name__ == "__main__":
    success = copy_enhanced_files()
    exit(0 if success else 1)
