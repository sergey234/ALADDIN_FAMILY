#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ VPN –∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞ –≤ SafeFunctionManager
"""

import asyncio
import logging
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.safe_function_manager import SafeFunctionManager
from security.vpn.vpn_security_system import VPNSecurityLevel

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_safe_function_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ VPN –∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞ –≤ SafeFunctionManager"""
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò VPN –ò –ê–ù–¢–ò–í–ò–†–£–°–ê –í SAFEFUNCTIONMANAGER")
    print("=" * 70)
    print(f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 70)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ SafeFunctionManager
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ SafeFunctionManager...")
        sfm = SafeFunctionManager("TestSafeFunctionManager")
        print("‚úÖ SafeFunctionManager —Å–æ–∑–¥–∞–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        print("\n2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SafeFunctionManager...")
        init_success = sfm.initialize()
        if init_success:
            print("‚úÖ SafeFunctionManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SafeFunctionManager")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ VPN —Å–∏—Å—Ç–µ–º—ã
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ VPN —Å–∏—Å—Ç–µ–º—ã...")
        if sfm.vpn_system:
            print("‚úÖ VPN —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VPN —Ñ—É–Ω–∫—Ü–∏–∏
            print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VPN —Ñ—É–Ω–∫—Ü–∏–∏...")
            success, result, message = sfm.execute_function("vpn_security", {"action": "status"})
            if success:
                print(f"‚úÖ VPN —Å—Ç–∞—Ç—É—Å: {message}")
                print(f"   –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
                print(f"   –°–µ—Ä–≤–µ—Ä–æ–≤: {result.get('total_servers', 0)}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ VPN: {message}")
        else:
            print("‚ùå VPN —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        if sfm.antivirus_system:
            print("‚úÖ –ê–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
            print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏...")
            success, result, message = sfm.execute_function("antivirus_security", {"action": "status"})
            if success:
                print(f"‚úÖ –ê–Ω—Ç–∏–≤–∏—Ä—É—Å —Å—Ç–∞—Ç—É—Å: {message}")
                print(f"   –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
                print(f"   –°–∏–≥–Ω–∞—Ç—É—Ä: {result.get('total_signatures', 0)}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞: {message}")
        else:
            print("‚ùå –ê–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        if sfm.vpn_system:
            success, result, message = sfm.execute_function("vpn_security", {
                "action": "connect",
                "connection_id": "test_connection_1",
                "country": "Singapore",
                "security_level": VPNSecurityLevel.HIGH
            })
            if success:
                print(f"‚úÖ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {message}")
                print(f"   Connection ID: test_connection_1")
                print(f"   –°—Ç—Ä–∞–Ω–∞: Singapore")
                print(f"   –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: HIGH")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {message}")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è VPN
        print("\n8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è VPN...")
        if sfm.vpn_system:
            success, result, message = sfm.execute_function("vpn_security", {
                "action": "disconnect",
                "connection_id": "test_connection_1"
            })
            if success:
                print(f"‚úÖ VPN –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ: {message}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ VPN –æ—Ç–∫–ª—é—á–µ–Ω–∏—è: {message}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print("\n9. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ SafeFunctionManager...")
        stats = sfm.get_safe_function_stats()
        print(f"   –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {stats['total_functions']}")
        print(f"   –í–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {stats['enabled_functions']}")
        print(f"   –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {stats['disabled_functions']}")
        print(f"   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π: {stats['critical_functions']}")
        print(f"   –§—É–Ω–∫—Ü–∏–π –ø–æ —Ç–∏–ø–∞–º: {stats['functions_by_type']}")
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
        print("\n10. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ SafeFunctionManager...")
        stop_success = sfm.stop()
        if stop_success:
            print("‚úÖ SafeFunctionManager –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ SafeFunctionManager")
        
        print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:")
        print("   ‚úÖ VPN —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        print("   ‚úÖ –ê–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ VPN —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   ‚úÖ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º –ø–æ–ª—É—á–∞–µ—Ç—Å—è")
        
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß SAFEFUNCTIONMANAGER - –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø VPN –ò –ê–ù–¢–ò–í–ò–†–£–°–ê")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    success = await test_safe_function_integration()
    
    print("\n" + "=" * 70)
    print(f"–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    if success:
        print("‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø VPN –ò –ê–ù–¢–ò–í–ò–†–£–°–ê –í SAFEFUNCTIONMANAGER –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("\nüéØ –ì–û–¢–û–í–û –ö –°–ü–Ø–©–ï–ú–£ –†–ï–ñ–ò–ú–£:")
        print("1. üîß VPN –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ SafeFunctionManager")
        print("2. üõ°Ô∏è –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ SafeFunctionManager")
        print("3. ‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("4. üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("5. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
    else:
        print("‚ùå –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø VPN –ò –ê–ù–¢–ò–í–ò–†–£–°–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–ê–ú–ò!")
    print("=" * 70)

if __name__ == "__main__":
    asyncio.run(main())
