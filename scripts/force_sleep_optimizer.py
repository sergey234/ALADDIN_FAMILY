#!/usr/bin/env python3
"""
–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –û–ü–¢–ò–ú–ò–ó–ê–¢–û–† –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê
–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ñ–ª–∞–≥ is_critical
"""

import sys
import os
import json
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.safe_function_manager import SafeFunctionManager, FunctionStatus

def force_sleep_optimizer():
    """
    –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
    """
    print("üåô –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –û–ü–¢–ò–ú–ò–ó–ê–¢–û–† –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º SFM
    sfm = SafeFunctionManager()
    
    # –ù–ï–û–ë–•–û–î–ò–ú–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ü–õ–ê–ù–û–ú A+
    essential_functions = [
        # SFM –∏ –±–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏ - –û–°–ù–û–í–ê
        'security_safefunctionmanager',  # –ú–µ–Ω–µ–¥–∂–µ—Ä —Ñ—É–Ω–∫—Ü–∏–π - –û–°–ù–û–í–ê
        'security_base',                 # –ë–∞–∑–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –û–°–ù–û–í–ê
        'core_base',                     # –ë–∞–∑–æ–≤—ã–π –º–æ–¥—É–ª—å - –û–°–ù–û–í–ê
        'database',                      # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - –ö–†–ò–¢–ò–ß–ù–û
        'authentication',                # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - –ö–†–ò–¢–ò–ß–ù–û
        'security_authentication',       # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –ö–†–ò–¢–ò–ß–ù–û
        
        # –ê–ù–ê–õ–ò–ó –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì
        'security_securityanalyticsmanager',  # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        'security_securitymetric',            # –ú–µ—Ç—Ä–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        'security_performancemetrics',        # –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        'security_performanceoptimizer',      # –û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        'security_optimizationresult',        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        'security_optimizationmetrics',       # –ú–µ—Ç—Ä–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        
        # –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –û–¢–ß–ï–¢–ù–û–°–¢–¨
        'security_securityauditmanager',      # –ú–µ–Ω–µ–¥–∂–µ—Ä –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        'security_securityaudit',             # –ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        'security_auditfinding',              # –ù–∞—Ö–æ–¥–∫–∏ –∞—É–¥–∏—Ç–∞
        'security_incidentresponsemanager',   # –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã
        'security_incident',                  # –ò–Ω—Ü–∏–¥–µ–Ω—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        
        # –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –ö–ê–ß–ï–°–¢–í–û
        'security_testmanager',               # –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        'security_testfunction',              # –§—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        'security_securityevent',             # –°–æ–±—ã—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        'security_securitylayer',             # –°–ª–æ–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        
        # –ù–ê–®–ò –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò (–ö–ê–ß–ï–°–¢–í–û A+)
        'bot_website',                        # WebsiteNavigationBot (A+)
        'bot_browser',                        # BrowserSecurityBot (A+)
        'bot_cloud',                          # CloudStorageSecurityBot (A+)
        'bot_device',                         # DeviceSecurityBot (A+)
        'ai_agent_phishingprotection',        # PhishingProtectionAgent (A+)
        'ai_agent_malwaredetection',          # MalwareDetectionAgent (A+)
        
        # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–®–ò –§–£–ù–ö–¶–ò–ò
        'bot_maxmessenger',                   # MaxMessengerSecurityBot
        'bot_mobilenavigation',               # MobileNavigationBot
        'bot_gaming',                         # GamingSecurityBot
        'bot_analytics',                      # AnalyticsBot
        
        # AI AGENTS –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê
        'ai_agent_behavioralanalysisagent',   # –ê–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è
        'ai_agent_threatdetectionagent',      # –î–µ—Ç–µ–∫—Ü–∏—è —É–≥—Ä–æ–∑
        'ai_agent_networksecurityagent',      # –°–µ—Ç–µ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        'ai_agent_dataprotectionagent',       # –ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        'ai_agent_incidentresponseagent',     # –†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã
        'ai_agent_threatintelligenceagent',   # –†–∞–∑–≤–µ–¥–∫–∞ —É–≥—Ä–æ–∑
        'ai_agent_passwordsecurityagent',     # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª–µ–π
        'ai_agent_complianceagent',           # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
        
        # MICROSERVICES –î–õ–Ø –†–ê–ë–û–¢–´
        'microservice_configurationmanager',  # –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        'microservice_databasemanager',       # –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        'microservice_ratelimiter',           # –û–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏
        'microservice_circuitbreaker',        # –ü—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å
        'microservice_fastapi',               # FastAPI
        'microservice_httpexception',         # HTTP –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        
        # –ò–ù–¢–ï–†–§–ï–ô–°–´ –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï
        'security_userinterfacemanager',      # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
        'security_webinterface',              # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        'security_apiinterface',              # API –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        'security_apigateway',                # API Gateway
        'security_loadbalancer',              # –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–≥—Ä—É–∑–∫–∏
        
        # –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨
        'security_rediscachemanager',         # –ú–µ–Ω–µ–¥–∂–µ—Ä Redis –∫—ç—à–∞
        'security_cacheentry',                # –ó–∞–ø–∏—Å–∏ –∫—ç—à–∞
        'security_cachemetrics',              # –ú–µ—Ç—Ä–∏–∫–∏ –∫—ç—à–∞
        
        # –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ò –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï
        'security_recoveryservice',           # –°–µ—Ä–≤–∏—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        'security_recoveryplan',              # –ü–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        'security_recoverytask',              # –ó–∞–¥–∞—á–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        'security_recoveryreport',            # –û—Ç—á–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        
        # –§–û–†–ï–ù–ó–ò–ö–ê –ò –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø
        'security_forensicsservice',          # –°–µ—Ä–≤–∏—Å —Ñ–æ—Ä–µ–Ω–∑–∏–∫–∏
        'security_forensicsreport',           # –û—Ç—á–µ—Ç —Ñ–æ—Ä–µ–Ω–∑–∏–∫–∏
        'security_investigation',             # –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
        'security_evidence',                  # –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞
    ]
    
    print(f"üéØ –ù–ï–û–ë–•–û–î–ò–ú–´–• –§–£–ù–ö–¶–ò–ô: {len(essential_functions)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
    all_functions = list(sfm.functions.values())
    print(f"üìÑ –í–°–ï–ì–û –§–£–ù–ö–¶–ò–ô: {len(all_functions)}")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
    sleep_candidates = []
    for func in all_functions:
        if func.function_id not in essential_functions:
            sleep_candidates.append(func.function_id)
    
    print(f"üò¥ –ö–ê–ù–î–ò–î–ê–¢–û–í –î–õ–Ø –°–ü–Ø–©–ï–ì–û –†–ï–ñ–ò–ú–ê: {len(sleep_candidates)}")
    
    # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–≤–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
    successful = 0
    failed = 0
    
    print(f"\nüåô –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ü–ï–†–ï–í–û–î–Æ –§–£–ù–ö–¶–ò–ò –í –°–ü–Ø–©–ò–ô –†–ï–ñ–ò–ú...")
    
    for i, func_id in enumerate(sleep_candidates, 1):
        try:
            func = sfm.functions.get(func_id)
            if func:
                # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º, –∏–≥–Ω–æ—Ä–∏—Ä—É—è is_critical
                old_status = func.status
                func.status = FunctionStatus.SLEEPING
                func.last_activity = datetime.now()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                sfm.sleep_transitions += 1
                sfm.manual_sleep_count += 1
                sfm.functions_sleeping += 1
                sfm.functions_enabled = max(0, sfm.functions_enabled - 1)
                
                successful += 1
                if successful <= 20:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20
                    print(f"  ‚úÖ {func_id} -> —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º (–±—ã–ª–æ: {old_status})")
            else:
                failed += 1
                if failed <= 10:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –æ—à–∏–±–æ–∫
                    print(f"  ‚ùå {func_id} -> —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    
        except Exception as e:
            failed += 1
            if failed <= 10:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –æ—à–∏–±–æ–∫
                print(f"  ‚ùå {func_id} -> –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)[:50]}...")
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ì–û –ü–ï–†–ï–í–û–î–ê:")
    print(f"  ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: {successful}")
    print(f"  ‚ùå –û—à–∏–±–∫–∏: {failed}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    try:
        sfm._save_functions()
        print(f"  üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ function_registry.json")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    active_count = 0
    sleeping_count = 0
    for func in all_functions:
        if func.status == FunctionStatus.ENABLED:
            active_count += 1
        elif func.status == FunctionStatus.SLEEPING:
            sleeping_count += 1
    
    print(f"\nüìä –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
    print(f"  üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_count}")
    print(f"  üò¥ –°–ø—è—â–∏—Ö: {sleeping_count}")
    print(f"  üìä –≠–∫–æ–Ω–æ–º–∏—è: {(sleeping_count / len(all_functions)) * 100:.1f}%")
    
    if active_count <= 70:  # –î–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
        print(f"\n‚úÖ –ü–†–û–ë–õ–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print(f"üéØ –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞–Ω–æ–º A+!")
        print(f"üí° –¢–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏!")
        return True
    else:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print(f"üîç –ù—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...")
        return False

if __name__ == "__main__":
    success = force_sleep_optimizer()
    if success:
        print(f"\nüéâ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
    else:
        print(f"\nüí• –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ù–ï –£–î–ê–õ–ê–°–¨!")
        sys.exit(1)