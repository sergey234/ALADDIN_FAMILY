#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ API –¥–ª—è VPN –∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞
"""

import asyncio
import logging
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.mobile.mobile_api import (
    MobileSecurityAPI, 
    MobileConnectionConfig, 
    ConnectionType, 
    ConnectionSpeed
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_mobile_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ API"""
    print("üì± –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û API ALADDIN")
    print("=" * 60)
    print(f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ API
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ API...")
        api = MobileSecurityAPI()
        print("‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π API —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        status = api.get_mobile_status()
        print(f"   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {status['app_name']}")
        print(f"   –í–µ—Ä—Å–∏—è: {status['version']}")
        print(f"   –°—Ç–∞—Ç—É—Å: {status['status']}")
        print(f"   VPN –¥–æ—Å—Ç—É–ø–µ–Ω: {status['vpn_available']}")
        print(f"   –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω: {status['antivirus_available']}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        options = api.get_connection_options()
        print(f"   –¢–∏–ø–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {len(options['connection_types'])}")
        print(f"   –°–∫–æ—Ä–æ—Å—Ç–µ–π: {len(options['speeds'])}")
        print(f"   –°—Ç—Ä–∞–Ω: {len(options['countries'])}")
        
        for conn_type in options['connection_types']:
            print(f"   üì± {conn_type['name']}: {conn_type['description']}")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN
        print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN...")
        config = MobileConnectionConfig(
            connection_type=ConnectionType.VPN_ONLY,
            speed=ConnectionSpeed.FAST,
            country="Singapore"
        )
        
        result = await api.connect_mobile(config)
        print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN: {result.message}")
        print(f"   ID –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result.connection_id}")
        print(f"   –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result.connection_time:.2f}—Å")
        print(f"   –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {result.security_level}")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞
        print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞...")
        config_antivirus = MobileConnectionConfig(
            connection_type=ConnectionType.ANTIVIRUS_ONLY,
            speed=ConnectionSpeed.SECURE,
            country="Singapore"
        )
        
        result_antivirus = await api.connect_mobile(config_antivirus)
        print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞: {result_antivirus.message}")
        print(f"   ID –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_antivirus.connection_id}")
        print(f"   –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_antivirus.connection_time:.2f}—Å")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VPN + –ê–Ω—Ç–∏–≤–∏—Ä—É—Å...")
        config_combined = MobileConnectionConfig(
            connection_type=ConnectionType.VPN_ANTIVIRUS,
            speed=ConnectionSpeed.BALANCED,
            country="Singapore"
        )
        
        result_combined = await api.connect_mobile(config_combined)
        print(f"   ‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {result_combined.message}")
        print(f"   ID –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_combined.connection_id}")
        print(f"   –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_combined.connection_time:.2f}—Å")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–π –∑–∞—â–∏—Ç—ã
        print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–π –∑–∞—â–∏—Ç—ã...")
        config_smart = MobileConnectionConfig(
            connection_type=ConnectionType.SMART_PROTECTION,
            speed=ConnectionSpeed.SECURE,
            country="Singapore"
        )
        
        result_smart = await api.connect_mobile(config_smart)
        print(f"   ‚úÖ –£–º–Ω–∞—è –∑–∞—â–∏—Ç–∞: {result_smart.message}")
        print(f"   ID –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_smart.connection_id}")
        print(f"   –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_smart.connection_time:.2f}—Å")
        
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
        print("\n8. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")
        connections = [result.connection_id, result_antivirus.connection_id, 
                      result_combined.connection_id, result_smart.connection_id]
        
        for conn_id in connections:
            if conn_id:
                disconnect_result = await api.disconnect_mobile(conn_id)
                print(f"   ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ {conn_id}: {disconnect_result['message']}")
        
        # –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        print("\n9. –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å...")
        final_status = api.get_mobile_status()
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {final_status['active_connections']}")
        print(f"   –°—Ç–∞—Ç—É—Å: {final_status['status']}")
        
        print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û API –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("\nüì± –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:")
        print("   ‚úÖ 4 —Ç–∏–ø–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   ‚úÖ 3 —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   ‚úÖ 5 —Å—Ç—Ä–∞–Ω –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("   ‚úÖ –ü—Ä–æ—Å—Ç–æ–µ –∏ –∫—Ä–∞—Å–∏–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ")
        
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üì± MOBILE API ALADDIN - –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
    success = await test_mobile_api()
    
    print("\n" + "=" * 60)
    print(f"–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    if success:
        print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û API –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("\nüéØ –ì–û–¢–û–í–û –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:")
        print("1. üì± –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ - 1 –∫–Ω–æ–ø–∫–∞")
        print("2. üåç 4 —Ç–∏–ø–∞ –∑–∞—â–∏—Ç—ã - –Ω–∞ –≤—ã–±–æ—Ä")
        print("3. ‚ö° 3 —Å–∫–æ—Ä–æ—Å—Ç–∏ - –±—ã—Å—Ç—Ä–∞—è, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, –±–µ–∑–æ–ø–∞—Å–Ω–∞—è")
        print("4. üó∫Ô∏è 5 —Å—Ç—Ä–∞–Ω - Singapore, Russia, Netherlands, USA, Japan")
        print("5. üß† –£–º–Ω–∞—è –∑–∞—â–∏—Ç–∞ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä")
        print("6. üîí –¢–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ALADDIN")
    else:
        print("‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û API –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò!")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(main())
