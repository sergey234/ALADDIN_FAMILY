#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç ChildInterfaceManager
"""

import os
import sys
import time
import json
from datetime import datetime

def test_child_interface_simple():
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç ChildInterfaceManager"""
    print("üß™ –£–ü–†–û–©–ï–ù–ù–´–ô –¢–ï–°–¢ CHILDINTERFACEMANAGER")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
        sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'security', 'ai_agents'))
        
        from child_interface_manager import (
            ChildInterfaceManager, 
            ChildAgeCategory, 
            GameLevel, 
            AchievementType,
            ChildInterfaceMetrics
        )
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        manager = ChildInterfaceManager()
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ ChildInterfaceManager —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        user_data_toddler = {
            "interaction_pattern": {"touch_heavy": True, "voice_commands": True},
            "preferences": {"simple_games": True},
            "behavior": {"help_seeking": True}
        }
        
        age_category = manager.detect_age_category(user_data_toddler)
        print("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {}".format(age_category.value))
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        interface = manager.get_interface_for_age(age_category)
        if interface and "design" in interface:
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {}".format(interface["design"]["theme"]))
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
            return False
        
        # –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–∞—é—â–µ–≥–æ –º–æ–¥—É–ª—è
        module = manager.start_learning_module(age_category, "interactive")
        if module and "module" in module:
            print("‚úÖ –ó–∞–ø—É—Å–∫ –æ–±—É—á–∞—é—â–µ–≥–æ –º–æ–¥—É–ª—è: {}".format(module["module"]))
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è")
            return False
        
        # –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
        quest_result = manager.complete_quest("test_user", "daily", 100)
        if quest_result and "progress" in quest_result:
            print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞: –±–∞–ª–ª {}".format(quest_result["progress"]["score"]))
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞")
            return False
        
        # –¢–µ—Å—Ç —Å–µ–º–µ–π–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        family_data = manager.get_family_dashboard_data("test_family")
        if family_data and "family_id" in family_data:
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–º–µ–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {}".format(family_data["family_id"]))
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ–º–µ–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notification = manager.send_parent_notification("test_parent", "–¢–µ—Å—Ç", "normal")
        if notification and "parent_id" in notification:
            print("‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {}".format(notification["parent_id"]))
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return False
        
        # –¢–µ—Å—Ç –∑–∞—â–∏—Ç—ã –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
        test_data = {"personal_info": "test", "device_id": "12345"}
        protected = manager.protect_privacy_data(test_data)
        if "***MASKED***" in str(protected):
            print("‚úÖ –ó–∞—â–∏—Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞—â–∏—Ç—ã –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏")
            return False
        
        # –¢–µ—Å—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
        encrypted = manager.encrypt_sensitive_data("test_password")
        if len(encrypted) == 64:  # SHA256 hash length
            print("‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
        privacy_settings = {
            "data_collection": True,
            "data_sharing": False,
            "data_retention": 30,
            "parental_consent": True,
            "child_protection": True
        }
        if manager.validate_privacy_settings(privacy_settings):
            print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏")
            return False
        
        # –¢–µ—Å—Ç –º–µ—Ç—Ä–∏–∫
        metrics = ChildInterfaceMetrics()
        metrics.update_metrics(
            {"age_category": "7-9"},
            {"module_completed": 1},
            {"quest_completed": 1},
            {"family_quest": 1}
        )
        if metrics.total_users == 1:
            print("‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –º–µ—Ç—Ä–∏–∫")
            return False
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ ChildInterfaceManager —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        return True
        
    except Exception as e:
        print("‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {}".format(str(e)))
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_child_interface_simple()
    if success:
        print("\nüèÜ –ö–ê–ß–ï–°–¢–í–û: A+ (–û–¢–õ–ò–ß–ù–û)")
        print("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ö†Ô∏è –ö–ê–ß–ï–°–¢–í–û: –¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø")
    exit(0 if success else 1)