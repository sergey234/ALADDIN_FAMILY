#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è backup —Ñ–∞–π–ª–æ–≤ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–∞–º–∏
"""

import os
import json
from pathlib import Path

def create_comparison_table():
    # –ü—É—Ç–∏
    backup_dir = Path('/Users/sergejhlystov/ALADDIN_NEW/security/formatting_work/backup_files')
    base_dir = Path('/Users/sergejhlystov/ALADDIN_NEW')

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ backup —Ñ–∞–π–ª–æ–≤
    backup_files = []
    for file in backup_dir.glob('*.py'):
        if file.is_file():
            backup_files.append(file)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞–∑–º–µ—Ä—É
    backup_files.sort(key=lambda x: x.stat().st_size, reverse=True)

    print('üìä –¢–ê–ë–õ–ò–¶–ê –°–†–ê–í–ù–ï–ù–ò–Ø: BACKUP vs –û–†–ò–ì–ò–ù–ê–õ')
    print('=' * 120)
    print(f'{"‚Ññ":<3} | {"BACKUP –§–ê–ô–õ":<50} | {"–†–ê–ó–ú–ï–†":<8} | {"–û–†–ò–ì–ò–ù–ê–õ":<50} | {"–†–ê–ó–ú–ï–†":<8} | {"–°–¢–ê–¢–£–°":<10}')
    print('-' * 120)

    found_count = 0
    not_found_count = 0

    for i, backup_file in enumerate(backup_files, 1):
        backup_name = backup_file.name
        backup_size = backup_file.stat().st_size
        
        # –û—á–∏—â–∞–µ–º –∏–º—è –æ—Ç backup —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤
        original_name = backup_name
        for suffix in [
            '_backup_original_backup_20250103',
            '.backup_20250909_212030',
            '.backup_20250909_212748', 
            '.backup_20250909_213215',
            '.backup_20250928_003043',
            '.backup_20250928_002228',
            '.backup_20250927_231340',
            '.backup_20250927_231341',
            '.backup_20250927_231342',
            '.backup_20250927_232629',
            '.backup_20250927_233351',
            '.backup_20250927_234000',
            '.backup_20250927_234616',
            '.backup_20250928_000215',
            '.backup_20250928_003940',
            '.backup_20250928_005946',
            '_before_formatting',
            '.backup_011225',
            '_BACKUP',
            '_backup'
        ]:
            original_name = original_name.replace(suffix, '')
        
        # –ò—â–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
        original_found = False
        original_size = 0
        original_path = ''
        
        for root, dirs, files in os.walk(base_dir / 'security'):
            if 'formatting_work' in root:
                continue
            for file in files:
                if file == original_name:
                    original_path = os.path.join(root, file)
                    original_size = os.path.getsize(original_path)
                    original_found = True
                    break
            if original_found:
                break
        
        if original_found:
            found_count += 1
            status = '‚úÖ –ù–ê–ô–î–ï–ù'
        else:
            not_found_count += 1
            status = '‚ùå –ù–ï –ù–ê–ô–î–ï–ù'
        
        # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
        original_display = original_name[:47] + '...' if len(original_name) > 50 else original_name
        backup_display = backup_name[:47] + '...' if len(backup_name) > 50 else backup_name
        
        print(f'{i:<3} | {backup_display:<50} | {backup_size:<8} | {original_display:<50} | {original_size:<8} | {status:<10}')

    print('-' * 120)
    print(f'üìà –ò–¢–û–ì–û BACKUP –§–ê–ô–õ–û–í: {len(backup_files)}')
    print(f'‚úÖ –ù–ê–ô–î–ï–ù–û –û–†–ò–ì–ò–ù–ê–õ–û–í: {found_count}')
    print(f'‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û: {not_found_count}')
    print(f'üìä –ü–†–û–¶–ï–ù–¢ –ù–ê–ô–î–ï–ù–ù–´–•: {(found_count/len(backup_files)*100):.1f}%')

if __name__ == "__main__":
    create_comparison_table()