#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ ALADDIN Security System
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ CodeQualityManager
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

try:
    from core.code_quality_manager import CODE_QUALITY_MANAGER

    def main():
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"""
        print("üîß ALADDIN Security System - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞")
        print("=" * 60)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–∞
        report = CODE_QUALITY_MANAGER.check_project_quality(".")

        print(f"üìä –û–±—â–∏–π –±–∞–ª–ª –∫–∞—á–µ—Å—Ç–≤–∞: {report['overall_score']:.1f}/100")
        print(f"üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {report['total_files']}")
        print()

        print("üìà –î–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:")
        metrics = report["metrics"]
        print(f"  Flake8: {metrics['flake8']:.1f}/100")
        print(f"  MyPy: {metrics['mypy']:.1f}/100")
        print(f"  Pylint: {metrics['pylint']:.1f}/10")
        print(f"  Black: {metrics['black']:.1f}/100")
        print(f"  Isort: {metrics['isort']:.1f}/100")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç
        print("\nüìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
        CODE_QUALITY_MANAGER.generate_quality_report(".")
        print("‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")

        return 0

    if __name__ == "__main__":
        sys.exit(main())

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CodeQualityManager —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    sys.exit(1)
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
    sys.exit(1)
