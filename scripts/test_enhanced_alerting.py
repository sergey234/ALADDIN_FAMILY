#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced Alerting System
–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤

–ê–≤—Ç–æ—Ä: ALADDIN Security Team
–í–µ—Ä—Å–∏—è: 1.0
–î–∞—Ç–∞: 2025-09-08
"""

import sys
import os
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.enhanced_alerting import EnhancedAlertingSystem, AlertRule, AlertSeverity, AlertChannel


def test_enhanced_alerting():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced Alerting System")
    print("=" * 50)
    
    try:
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤...")
        alerting_system = EnhancedAlertingSystem()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–ª–µ—Ä—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞")
        
        # 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞
        print("2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞...")
        test_rule = AlertRule(
            rule_id="test_high_cpu",
            name="–¢–µ—Å—Ç –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ CPU",
            description="–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤",
            condition="cpu_usage > 0",  # –í—Å–µ–≥–¥–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
            severity=AlertSeverity.INFO,
            channels=[AlertChannel.CONSOLE, AlertChannel.LOG],
            cooldown=1
        )
        
        alerting_system.add_alert_rule(test_rule)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        
        # 3. –û–∂–∏–¥–∞–Ω–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤
        print("3. –û–∂–∏–¥–∞–Ω–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤ (15 —Å–µ–∫—É–Ω–¥)...")
        print("   (–í –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è –∞–ª–µ—Ä—Ç—ã)")
        
        for i in range(15):
            time.sleep(1)
            if i % 5 == 0:
                print(f"   –ü—Ä–æ—à–ª–æ {i+1} —Å–µ–∫—É–Ω–¥...")
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤
        print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤...")
        alerts = alerting_system.get_alerts(limit=10)
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ –∞–ª–µ—Ä—Ç–æ–≤: {len(alerts)}")
        
        for i, alert in enumerate(alerts, 1):
            print(f"   {i}. [{alert.severity.value.upper()}] {alert.title}")
            print(f"      –í—Ä–µ–º—è: {alert.timestamp.strftime('%H:%M:%S')}")
            print(f"      –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: {alert.component}")
            print()
        
        # 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        stats = alerting_system.get_alert_statistics()
        print(f"üìà –í—Å–µ–≥–æ –∞–ª–µ—Ä—Ç–æ–≤: {stats['total_alerts']}")
        print(f"üö® –ù–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö: {stats['unresolved_alerts']}")
        print(f"üìä –ü–æ —É—Ä–æ–≤–Ω—è–º —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏:")
        for severity, count in stats['severity_counts'].items():
            print(f"   - {severity}: {count}")
        print(f"üîß –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª: {stats['active_rules']}")
        
        # 6. –¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞
        if alerts:
            print("6. –¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞...")
            first_alert = alerts[0]
            print(f"   –†–∞–∑—Ä–µ—à–∞–µ–º –∞–ª–µ—Ä—Ç: {first_alert.alert_id}")
            alerting_system.resolve_alert(first_alert.alert_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
            stats_after = alerting_system.get_alert_statistics()
            print(f"   –ù–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: {stats_after['unresolved_alerts']}")
        
        # 7. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        print("7. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        alerting_system.stop()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        # 8. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print("\n" + "=" * 50)
        print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("=" * 50)
        print(f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"üö® –í—Å–µ–≥–æ –∞–ª–µ—Ä—Ç–æ–≤: {stats['total_alerts']}")
        print(f"üìä –ü—Ä–∞–≤–∏–ª –∞–ª–µ—Ä—Ç–æ–≤: {len(alerting_system.alert_rules)}")
        print(f"üì° –ö–∞–Ω–∞–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏: {len(alerting_system.channels)}")
        print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False


def test_dashboard_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥–∞—à–±–æ—Ä–¥–æ–º"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥–∞—à–±–æ—Ä–¥–æ–º...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—à–±–æ—Ä–¥ –∑–∞–ø—É—â–µ–Ω
        import requests
        
        try:
            response = requests.get('http://localhost:5000/api/health', timeout=5)
            if response.status_code == 200:
                print("‚úÖ –î–∞—à–±–æ—Ä–¥ –¥–æ—Å—Ç—É–ø–µ–Ω")
                health_data = response.json()
                print(f"   –°—Ç–∞—Ç—É—Å: {health_data['status']}")
                print(f"   –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: {health_data['components']}")
            else:
                print(f"‚ö†Ô∏è –î–∞—à–±–æ—Ä–¥ –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
        except requests.exceptions.ConnectionError:
            print("‚ùå –î–∞—à–±–æ—Ä–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ dashboard_server.py)")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞: {e}")
        
        return True
        
    except ImportError:
        print("‚ö†Ô∏è requests –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞: {e}")
        return False


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Enhanced Alerting System")
    print("=" * 60)
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    success = test_enhanced_alerting()
    
    if success:
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞
        test_dashboard_integration()
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∞—à–±–æ—Ä–¥: python3 dashboard_server.py")
        print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:5000")
        print("   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ email –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤")
    else:
        print("\n‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ï –£–î–ê–õ–û–°–¨!")
        sys.exit(1)