#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç CPU, RAM –∏ SFM –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
"""

import sys
import os
import time
import psutil
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def get_system_stats():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"""
    cpu = psutil.cpu_percent(interval=0.1)
    ram = psutil.virtual_memory()
    
    return {
        'cpu_percent': cpu,
        'ram_percent': ram.percent,
        'ram_used_gb': ram.used / (1024**3),
        'ram_total_gb': ram.total / (1024**3),
        'ram_available_gb': ram.available / (1024**3)
    }

def get_sfm_performance():
    """–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ SFM"""
    try:
        from security.safe_function_manager import SafeFunctionManager
        
        config = {
            'thread_pool_enabled': True,
            'max_thread_pool_workers': 5,
            'async_io_enabled': True,
            'redis_cache_enabled': True,
            'enable_auto_management': False,
            'enable_sleep_mode': False
        }
        
        sfm = SafeFunctionManager('PerfSFM', config)
        
        start_time = time.time()
        for i in range(10):
            _ = list(sfm.functions.keys())
            critical_functions = []
            for func_id, func_obj in sfm.functions.items():
                if getattr(func_obj, 'is_critical', False):
                    critical_functions.append(func_id)
        end_time = time.time()
        
        avg_response = (end_time - start_time) / 10
        operations_per_sec = 10 / (end_time - start_time)
        
        return {
            'avg_response_ms': avg_response * 1000,
            'operations_per_sec': operations_per_sec,
            'total_functions': len(sfm.functions)
        }
    except Exception as e:
        return None

def print_status():
    """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
    print("=" * 60)
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    sys_stats = get_system_stats()
    print(f"üíª CPU: {sys_stats['cpu_percent']:.1f}%")
    print(f"üíæ RAM: {sys_stats['ram_percent']:.1f}% ({sys_stats['ram_used_gb']:.2f}GB / {sys_stats['ram_total_gb']:.2f}GB)")
    print(f"üìä –î–æ—Å—Ç—É–ø–Ω–æ RAM: {sys_stats['ram_available_gb']:.2f}GB")
    
    # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å SFM
    sfm_perf = get_sfm_performance()
    if sfm_perf:
        print(f"‚ö° SFM –æ—Ç–∫–ª–∏–∫: {sfm_perf['avg_response_ms']:.2f} –º—Å")
        print(f"üöÄ –û–ø–µ—Ä–∞—Ü–∏–π/—Å–µ–∫: {sfm_perf['operations_per_sec']:.0f}")
        print(f"üì¶ –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {sfm_perf['total_functions']}")
        
        # –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        if sfm_perf['avg_response_ms'] < 1.0:
            print("‚úÖ –û—Ç–ª–∏—á–Ω–æ!")
        elif sfm_perf['avg_response_ms'] < 5.0:
            print("‚úÖ –•–æ—Ä–æ—à–æ")
        else:
            print("‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ SFM")
    
    print("=" * 60)

def main():
    print("üñ•Ô∏è  –ü–†–û–°–¢–û–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ò–°–¢–ï–ú–´ ALADDIN")
    print()
    
    try:
        while True:
            print_status()
            print()
            print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            input()
            print()
            
    except KeyboardInterrupt:
        print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")

if __name__ == "__main__":
    main()