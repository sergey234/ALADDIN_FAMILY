#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ TrustScoring –≤ SafeFunctionManager
"""

import sys
import os
sys.path.insert(0, '/Users/sergejhlystov/ALADDIN_NEW')

from security.safe_function_manager import SafeFunctionManager, SecurityLevel
from security.preliminary.trust_scoring import TrustScoring

def test_trust_scoring_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é TrustScoring –≤ SFM"""
    
    print("üîç –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò TRUSTSCORING –í SFM")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º SFM
        sfm = SafeFunctionManager()
        print("‚úÖ SafeFunctionManager —Å–æ–∑–¥–∞–Ω")
        
        # –°–æ–∑–¥–∞–µ–º TrustScoring
        trust_scoring = TrustScoring()
        print("‚úÖ TrustScoring —Å–æ–∑–¥–∞–Ω")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º TrustScoring –≤ SFM
        success = sfm.register_function(
            function_id="trust_scoring",
            name="TrustScoring",
            description="–°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –¥–æ–≤–µ—Ä–∏—è –¥–ª—è —Å–µ–º–µ–π",
            function_type="preliminary",
            security_level=SecurityLevel.HIGH,
            is_critical=True,
            auto_enable=False
        )
        
        if success:
            print("‚úÖ TrustScoring –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ SFM")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ TrustScoring –≤ SFM")
            return False
        
        # –í–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        enable_success = sfm.enable_function("trust_scoring")
        if enable_success:
            print("‚úÖ TrustScoring –≤–∫–ª—é—á–µ–Ω –≤ SFM")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è TrustScoring –≤ SFM")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:")
        
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        status = trust_scoring.get_status()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å TrustScoring: {status['status']}")
        print(f"‚úÖ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {status['total_users']}")
        print(f"‚úÖ –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –¥–æ–≤–µ—Ä–∏—è: {status['average_trust_score']}")
        
        # –¢–µ—Å—Ç 2: –†–∞—Å—á–µ—Ç –¥–æ–≤–µ—Ä–∏—è
        from core.security_base import SecurityEvent, IncidentSeverity
        test_events = [
            SecurityEvent(
                event_id="test_1",
                event_type="login_success",
                severity=IncidentSeverity.LOW,
                timestamp=status['last_updated'],
                description="–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
            )
        ]
        
        trust_score = trust_scoring.calculate_trust_score("admin", test_events)
        print(f"‚úÖ –†–∞—Å—á–µ—Ç –¥–æ–≤–µ—Ä–∏—è –¥–ª—è admin: {trust_score.score:.3f}")
        print(f"‚úÖ –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: {trust_score.trust_level.value}")
        
        # –¢–µ—Å—Ç 3: –û—Ç—á–µ—Ç –æ –¥–æ–≤–µ—Ä–∏–∏
        report = trust_scoring.get_trust_report("admin")
        print(f"‚úÖ –û—Ç—á–µ—Ç –æ –¥–æ–≤–µ—Ä–∏–∏: {report['current_score']:.3f}")
        print(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {len(report['recommendations'])}")
        
        # –¢–µ—Å—Ç 4: SFM —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏
        sfm_test = sfm.test_function("trust_scoring")
        if sfm_test:
            print("‚úÖ SFM —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ trust_scoring: –£–°–ü–ï–•")
        else:
            print("‚ö†Ô∏è SFM —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ trust_scoring: –ü–†–û–í–ê–õ–ï–ù")
        
        print("\nüéâ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò TRUSTSCORING –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_trust_scoring_integration()
