#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ backup —Ñ–∞–π–ª–∞–º
"""

import json
from pathlib import Path
from datetime import datetime

def load_analysis_report():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞"""
    report_dir = Path('/Users/sergejhlystov/ALADDIN_NEW/security/formatting_work/backup_files')
    report_files = list(report_dir.glob('FUNCTIONALITY_ANALYSIS_REPORT_*.json'))
    
    if not report_files:
        print("‚ùå –û—Ç—á–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None
    
    # –ë–µ—Ä–µ–º —Å–∞–º—ã–π –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç
    latest_report = max(report_files, key=lambda x: x.stat().st_mtime)
    
    with open(latest_report, 'r', encoding='utf-8') as f:
        return json.load(f)

def generate_detailed_recommendations(analysis_data):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    
    print("üéØ –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û BACKUP –§–ê–ô–õ–ê–ú")
    print("=" * 80)
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ —Ç–∏–ø—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    categories = {
        'keep_both': [],
        'check_carefully': [],
        'can_remove': [],
        'critical_differences': []
    }
    
    for item in analysis_data:
        comparison = item['comparison']
        diff_ratio = comparison.get('diff_ratio', 0)
        
        if diff_ratio > 100:
            categories['critical_differences'].append(item)
        elif diff_ratio > 50:
            categories['keep_both'].append(item)
        elif diff_ratio > 20:
            categories['check_carefully'].append(item)
        else:
            categories['can_remove'].append(item)
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print(f"\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –†–ê–ó–õ–ò–ß–ò–Ø ({len(categories['critical_differences'])} —Ñ–∞–π–ª–æ–≤):")
    print("   –ù–ï –£–î–ê–õ–Ø–¢–¨ - —Ñ–∞–π–ª—ã –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ —Ä–∞–∑–Ω—ã–µ!")
    for item in categories['critical_differences']:
        print(f"   ‚Ä¢ {item['backup_name']} vs {item['original_name']}")
        print(f"     –†–∞–∑–ª–∏—á–∏—è: {item['comparison']['diff_ratio']:.1f}%")
        print(f"     –†–∞–∑–º–µ—Ä: backup {item['comparison']['size_comparison']['backup_size']:,} vs original {item['comparison']['size_comparison']['original_size']:,}")
        print()
    
    print(f"\nüîÑ –°–û–•–†–ê–ù–ò–¢–¨ –û–ë–ê ({len(categories['keep_both'])} —Ñ–∞–π–ª–æ–≤):")
    print("   –§–∞–π–ª—ã –∏–º–µ—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    for item in categories['keep_both']:
        print(f"   ‚Ä¢ {item['backup_name']} vs {item['original_name']}")
        print(f"     –†–∞–∑–ª–∏—á–∏—è: {item['comparison']['diff_ratio']:.1f}%")
        print()
    
    print(f"\n‚ö†Ô∏è –ü–†–û–í–ï–†–ò–¢–¨ –î–ï–¢–ê–õ–¨–ù–û ({len(categories['check_carefully'])} —Ñ–∞–π–ª–æ–≤):")
    print("   –§–∞–π–ª—ã –∏–º–µ—é—Ç –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞–∑–ª–∏—á–∏—è - –Ω—É–∂–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
    for item in categories['check_carefully']:
        print(f"   ‚Ä¢ {item['backup_name']} vs {item['original_name']}")
        print(f"     –†–∞–∑–ª–∏—á–∏—è: {item['comparison']['diff_ratio']:.1f}%")
        print()
    
    print(f"\n‚úÖ –ú–û–ñ–ù–û –£–î–ê–õ–ò–¢–¨ ({len(categories['can_remove'])} —Ñ–∞–π–ª–æ–≤):")
    print("   –§–∞–π–ª—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã")
    for item in categories['can_remove']:
        print(f"   ‚Ä¢ {item['backup_name']} vs {item['original_name']}")
        print(f"     –†–∞–∑–ª–∏—á–∏—è: {item['comparison']['diff_ratio']:.1f}%")
        print()
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
    print("\n" + "="*80)
    print("üìã –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ö–ê–ñ–î–û–ì–û –§–ê–ô–õ–ê")
    print("="*80)
    
    for i, item in enumerate(analysis_data, 1):
        print(f"\nüìÅ [{i}] {item['backup_name']}")
        print(f"   üîç –û—Ä–∏–≥–∏–Ω–∞–ª: {item['original_name']}")
        
        comparison = item['comparison']
        class_comp = comparison['class_comparison']
        func_comp = comparison['function_comparison']
        import_comp = comparison['import_comparison']
        size_comp = comparison['size_comparison']
        
        print(f"   üìä –†–∞–∑–º–µ—Ä: backup {size_comp['backup_size']:,} vs original {size_comp['original_size']:,}")
        print(f"   üìà –†–∞–∑–ª–∏—á–∏—è: {comparison['diff_ratio']:.1f}%")
        
        # –ö–ª–∞—Å—Å—ã
        if class_comp['backup_only']:
            print(f"   üèóÔ∏è –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –≤ backup: {', '.join(class_comp['backup_only'])}")
        if class_comp['original_only']:
            print(f"   üèóÔ∏è –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ: {', '.join(class_comp['original_only'])}")
        
        # –§—É–Ω–∫—Ü–∏–∏
        if func_comp['backup_only']:
            print(f"   ‚ö° –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ backup: {len(func_comp['backup_only'])} —à—Ç.")
            if len(func_comp['backup_only']) <= 10:
                print(f"      {', '.join(func_comp['backup_only'])}")
        if func_comp['original_only']:
            print(f"   ‚ö° –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ: {len(func_comp['original_only'])} —à—Ç.")
            if len(func_comp['original_only']) <= 10:
                print(f"      {', '.join(func_comp['original_only'])}")
        
        # –ò–º–ø–æ—Ä—Ç—ã
        if import_comp['backup_only']:
            print(f"   üì¶ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤ backup: {len(import_comp['backup_only'])} —à—Ç.")
        if import_comp['original_only']:
            print(f"   üì¶ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ: {len(import_comp['original_only'])} —à—Ç.")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"   üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {item['recommendations'][-1] if item['recommendations'] else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}")
    
    return categories

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ó–ê–ì–†–£–ó–ö–ê –û–¢–ß–ï–¢–ê –ê–ù–ê–õ–ò–ó–ê...")
    
    analysis_data = load_analysis_report()
    if not analysis_data:
        return
    
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(analysis_data)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    categories = generate_detailed_recommendations(analysis_data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    report_file = Path('/Users/sergejhlystov/ALADDIN_NEW/security/formatting_work/backup_files/DETAILED_RECOMMENDATIONS.md')
    
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write("# –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û BACKUP –§–ê–ô–õ–ê–ú\n\n")
        f.write(f"–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        
        f.write("## –°–í–û–î–ö–ê –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú\n\n")
        f.write(f"- üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è: {len(categories['critical_differences'])} —Ñ–∞–π–ª–æ–≤\n")
        f.write(f"- üîÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–∞: {len(categories['keep_both'])} —Ñ–∞–π–ª–æ–≤\n")
        f.write(f"- ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ: {len(categories['check_carefully'])} —Ñ–∞–π–ª–æ–≤\n")
        f.write(f"- ‚úÖ –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å: {len(categories['can_remove'])} —Ñ–∞–π–ª–æ–≤\n\n")
        
        f.write("## –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò\n\n")
        f.write("1. **–ù–ï –£–î–ê–õ–Ø–¢–¨** —Ñ–∞–π–ª—ã —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞–∑–ª–∏—á–∏—è–º–∏ (>100%)\n")
        f.write("2. **–°–û–•–†–ê–ù–ò–¢–¨ –û–ë–ê** —Ñ–∞–π–ª–∞ —Å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ä–∞–∑–ª–∏—á–∏—è–º–∏ (50-100%)\n")
        f.write("3. **–ü–†–û–í–ï–†–ò–¢–¨ –î–ï–¢–ê–õ–¨–ù–û** —Ñ–∞–π–ª—ã —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ —Ä–∞–∑–ª–∏—á–∏—è–º–∏ (20-50%)\n")
        f.write("4. **–ú–û–ñ–ù–û –£–î–ê–õ–ò–¢–¨** —Ñ–∞–π–ª—ã —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–ª–∏—á–∏—è–º–∏ (<20%)\n\n")
        
        f.write("## –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó\n\n")
        for i, item in enumerate(analysis_data, 1):
            f.write(f"### {i}. {item['backup_name']}\n\n")
            f.write(f"- **–û—Ä–∏–≥–∏–Ω–∞–ª:** {item['original_name']}\n")
            f.write(f"- **–†–∞–∑–ª–∏—á–∏—è:** {item['comparison']['diff_ratio']:.1f}%\n")
            f.write(f"- **–†–∞–∑–º–µ—Ä:** backup {item['comparison']['size_comparison']['backup_size']:,} vs original {item['comparison']['size_comparison']['original_size']:,}\n")
            f.write(f"- **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** {item['recommendations'][-1] if item['recommendations'] else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}\n\n")
    
    print(f"\nüìã –î–ï–¢–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –°–û–•–†–ê–ù–ï–ù: {report_file}")
    print(f"üìä –ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–û–í–ê–ù–û: {len(analysis_data)} —Ñ–∞–π–ª–æ–≤")

if __name__ == "__main__":
    main()