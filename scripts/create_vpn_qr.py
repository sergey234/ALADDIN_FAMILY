#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN
"""

import qrcode
import socket
import sys
import os
from datetime import datetime

def get_local_ip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–Ω–µ—à–Ω–µ–º—É –∞–¥—Ä–µ—Å—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ IP
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        return local_ip
    except:
        return "localhost"

def create_vpn_qr():
    """–°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞ –¥–ª—è VPN"""
    print("üì± –°–û–ó–î–ê–ù–ò–ï QR-–ö–û–î–ê –î–õ–Ø VPN –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞
    local_ip = get_local_ip()
    port = 5000
    
    # URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    vpn_url = f"http://{local_ip}:{port}"
    
    print(f"üåê –õ–æ–∫–∞–ª—å–Ω—ã–π IP: {local_ip}")
    print(f"üîó URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {vpn_url}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=10,
        border=4,
    )
    
    qr.add_data(vpn_url)
    qr.make(fit=True)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    img = qr.make_image(fill_color="black", back_color="white")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ QR-–∫–æ–¥–∞
    qr_filename = f"vpn_qr_{datetime.now().strftime('%Y%m%d_%H%M%S')}.png"
    img.save(qr_filename)
    
    print(f"‚úÖ QR-–∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {qr_filename}")
    print(f"üì± –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∫–∞–º–µ—Ä–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    
    return qr_filename, vpn_url

def create_simple_test_page():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    local_ip = get_local_ip()
    port = 5000
    
    html_content = f'''
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VPN Test - Singapore</title>
    <style>
        body {{
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            min-height: 100vh;
        }}
        .container {{
            max-width: 400px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
            text-align: center;
        }}
        h1 {{ font-size: 2em; margin-bottom: 30px; }}
        .button {{
            background: #4CAF50;
            color: white;
            padding: 20px 40px;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            font-size: 18px;
            margin: 20px 0;
            width: 100%;
            transition: background 0.3s;
        }}
        .button:hover {{ background: #45a049; }}
        .info {{ background: rgba(255, 255, 255, 0.2); padding: 15px; border-radius: 10px; margin: 20px 0; }}
        .status {{ font-size: 16px; margin: 10px 0; }}
    </style>
</head>
<body>
    <div class="container">
        <h1>üåç VPN Test</h1>
        <div class="info">
            <h3>üá∏üá¨ Singapore VPN</h3>
            <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Singapore</p>
        </div>
        
        <button class="button" onclick="testSingapore()">üöÄ –¢–µ—Å—Ç Singapore</button>
        
        <div class="info">
            <div class="status" id="status">–ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</div>
        </div>
        
        <div class="info">
            <h3>üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
            <p>1. –ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç Singapore"</p>
            <p>2. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</p>
            <p>3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ IP –∞–¥—Ä–µ—Å</p>
        </div>
    </div>

    <script>
        async function testSingapore() {{
            const status = document.getElementById('status');
            const button = event.target;
            
            status.textContent = 'üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...';
            button.disabled = true;
            button.textContent = 'üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...';
            
            try {{
                const response = await fetch('/api/test_singapore');
                const data = await response.json();
                
                if (data.success) {{
                    status.innerHTML = `
                        <div style="color: #4CAF50;">
                            ‚úÖ –¢–µ—Å—Ç Singapore —É—Å–ø–µ—à–µ–Ω!<br>
                            –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ${{data.connect_message}}<br>
                            –û—Ç–∫–ª—é—á–µ–Ω–∏–µ: ${{data.disconnect_message}}<br>
                            –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${{data.test_duration}}
                        </div>
                    `;
                }} else {{
                    status.innerHTML = `
                        <div style="color: #f44336;">
                            ‚ùå –û—à–∏–±–∫–∞: ${{data.error}}
                        </div>
                    `;
                }}
            }} catch (error) {{
                status.innerHTML = `
                    <div style="color: #f44336;">
                        ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${{error.message}}
                    </div>
                `;
            }} finally {{
                button.disabled = false;
                button.textContent = 'üöÄ –¢–µ—Å—Ç Singapore';
            }}
        }}
    </script>
</body>
</html>
    '''
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ HTML —Ñ–∞–π–ª–∞
    html_filename = "vpn_test_simple.html"
    with open(html_filename, 'w', encoding='utf-8') as f:
        f.write(html_content)
    
    print(f"‚úÖ –ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: {html_filename}")
    return html_filename

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üì± –°–û–ó–î–ê–ù–ò–ï –£–î–û–ë–ù–´–• –°–ü–û–°–û–ë–û–í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø VPN")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞
    qr_filename, vpn_url = create_vpn_qr()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    html_filename = create_simple_test_page()
    
    print("\nüéØ –í–ê–†–ò–ê–ù–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("=" * 30)
    print("1. üì± QR-–∫–æ–¥ - –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –∫–∞–º–µ—Ä–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    print(f"   –§–∞–π–ª: {qr_filename}")
    print(f"   URL: {vpn_url}")
    
    print("\n2. üåê –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print(f"   –§–∞–π–ª: {html_filename}")
    print(f"   URL: {vpn_url}")
    
    print("\n3. üì± –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ - –≤–≤–µ–¥–∏—Ç–µ URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print(f"   URL: {vpn_url}")
    
    print("\n4. üîó –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ - –µ—Å–ª–∏ –Ω–∞ —Ç–æ–º –∂–µ Wi-Fi")
    print(f"   URL: http://localhost:5000")
    
    print("\n‚úÖ –ì–û–¢–û–í–û! –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–±!")

if __name__ == "__main__":
    main()
