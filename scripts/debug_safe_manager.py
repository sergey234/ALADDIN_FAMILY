#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Ç–ª–∞–¥–∫–∞ SafeFunctionManager
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.safe_function_manager import SafeFunctionManager

def debug_safe_manager():
    """–û—Ç–ª–∞–¥–∫–∞ SafeFunctionManager"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ SafeFunctionManager...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        safe_manager = SafeFunctionManager()
        print("‚úÖ SafeFunctionManager —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = safe_manager.get_safe_function_stats()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
        all_functions = safe_manager.get_all_functions_status()
        print(f"üìã –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {len(all_functions)}")
        
        for func in all_functions:
            print(f"  - {func.get('function_id', 'unknown')}: {func.get('status', 'unknown')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        function_status = safe_manager.get_function_status("advanced_alerting_system")
        print(f"üîç –°—Ç–∞—Ç—É—Å advanced_alerting_system: {function_status}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    debug_safe_manager()