#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AnalyticsManager —Å SafeFunctionManager
"""

import asyncio
import uuid
from datetime import datetime
import sys
import os

sys.path.insert(0, '/Users/sergejhlystov/ALADDIN_NEW')

from security.safe_function_manager import SafeFunctionManager, SecurityLevel
from security.managers.analytics_manager import (
    AnalyticsManager, AnalyticsConfig, AnalyticsType, DataSource
)


async def run_integration_test():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AnalyticsManager —Å SFM"""
    print("üîß –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AnalyticsManager —Å SafeFunctionManager")
    print("============================================================")
    
    # –°–æ–∑–¥–∞–µ–º SFM
    sfm = SafeFunctionManager(name="ALADDIN")
    print("‚úÖ SafeFunctionManager —Å–æ–∑–¥–∞–Ω!")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º AnalyticsManager –≤ SFM
    registration_success = sfm.register_function(
        function_id="analytics_manager",
        name="AnalyticsManager",
        description="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å ML",
        function_type="ai_agent",
        security_level=SecurityLevel.HIGH,
        is_critical=True,
        auto_enable=False
    )
    print(f"‚úÖ AnalyticsManager –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {registration_success}")
    
    # –í–∫–ª—é—á–∞–µ–º AnalyticsManager
    enable_success = sfm.enable_function("analytics_manager")
    print(f"‚úÖ AnalyticsManager –≤–∫–ª—é—á–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {enable_success}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
    manager_status = sfm.get_function_status("analytics_manager")
    print(f"\nüìà –°—Ç–∞—Ç—É—Å AnalyticsManager: {manager_status['status']}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    config = AnalyticsConfig(
        analysis_type=AnalyticsType.BEHAVIORAL,
        data_source=DataSource.USER_ACTIVITY,
        time_window=3600,
        sample_size=1000,
        confidence_threshold=0.95,
        anomaly_threshold=0.1,
        enable_ml=True,
        enable_clustering=True,
        enable_prediction=True
    )
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä AnalyticsManager
    manager = AnalyticsManager(config)
    print("‚úÖ AnalyticsManager —Å–æ–∑–¥–∞–Ω!")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = [
        {
            'session_duration': 1200,
            'page_views': 15,
            'click_rate': 0.3,
            'time_on_site': 800,
            'bounce_rate': 0.2,
            'conversion_rate': 0.05
        }
        for _ in range(100)
    ]
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
    result = await manager.analyze(test_data)
    print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω! –°—Ç–∞—Ç—É—Å: {result.status}")
    print(f"   ‚Ä¢ –ò–Ω—Å–∞–π—Ç—ã: {len(result.insights)}")
    print(f"   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {len(result.recommendations)}")
    print(f"   ‚Ä¢ Confidence Score: {result.confidence_score:.2f}")
    print(f"   ‚Ä¢ Anomaly Score: {result.anomaly_score:.2f}")
    
    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
    metrics = await manager.get_metrics()
    print(f"‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã! –†–µ–∑—É–ª—å—Ç–∞—Ç: {metrics}")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∞–Ω–∞–ª–∏–∑–æ–≤: {metrics.get('total_analyses', 0)}")
    print(f"   ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤: {metrics.get('completed_analyses', 0)}")
    print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {metrics.get('success_rate', 0):.1%}")
    print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {metrics.get('average_confidence', 0):.2f}")
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
    await manager.shutdown()
    print("‚úÖ AnalyticsManager –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É!")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ SFM
    sfm_test_result = sfm.test_function("analytics_manager")
    print(f"‚úÖ –¢–µ—Å—Ç SFM –∑–∞–≤–µ—Ä—à–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {sfm_test_result}")
    
    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ SFM
    sfm_metrics = sfm.get_performance_metrics()
    print("‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ SFM –ø–æ–ª—É—á–µ–Ω—ã!")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {sfm_metrics['current_metrics']['total_functions']}")
    print(f"   ‚Ä¢ –í–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {sfm_metrics['current_metrics']['enabled_functions']}")
    print(f"   ‚Ä¢ –°–ø—è—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π: {sfm_metrics['current_metrics']['sleeping_functions']}")
    print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π: {sfm_metrics['current_metrics']['active_executions']}")
    
    print("\n============================================================")
    print("üéâ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AnalyticsManager –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    if registration_success and enable_success and result.status.value == "completed":
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å.")
        return False


if __name__ == "__main__":
    asyncio.run(run_integration_test())