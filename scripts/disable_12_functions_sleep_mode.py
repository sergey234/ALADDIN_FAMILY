#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ALADDIN Security System - –û—Ç–∫–ª—é—á–µ–Ω–∏–µ 12 —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
–ê–≤—Ç–æ—Ä: ALADDIN Security Team
–í–µ—Ä—Å–∏—è: 1.0
–î–∞—Ç–∞: 2025-09-03
"""

import os
import sys
import json
import time
from datetime import datetime
from typing import Dict, List, Any

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def disable_functions_sleep_mode():
    """–û—Ç–∫–ª—é—á–∏—Ç—å 12 —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
    
    print("üõ°Ô∏è ALADDIN Security System - –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º")
    print("=" * 70)
    
    # –°–ø–∏—Å–æ–∫ 12 —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    functions_to_disable = [
        # –§—É–Ω–∫—Ü–∏–∏ –∏–∑ preliminary (7 —Ñ—É–Ω–∫—Ü–∏–π)
        {
            "name": "PolicyEngine",
            "file": "security/preliminary/policy_engine.py",
            "class": "PolicyEngine",
            "function_id": "function_22",
            "reason": "–ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "RiskAssessment", 
            "file": "security/preliminary/risk_assessment.py",
            "class": "RiskAssessmentService",
            "function_id": "function_23",
            "reason": "–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "BehavioralAnalysis",
            "file": "security/preliminary/behavioral_analysis.py", 
            "class": "BehavioralAnalysis",
            "function_id": "function_24",
            "reason": "–ê–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è - –¥—É–±–ª–∏—Ä—É–µ—Ç BehavioralAnalysisAgent"
        },
        {
            "name": "MFAService",
            "file": "security/preliminary/mfa_service.py",
            "class": "MFAService", 
            "function_id": "function_25",
            "reason": "–ú–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "ZeroTrustService",
            "file": "security/preliminary/zero_trust_service.py",
            "class": "ZeroTrustService",
            "function_id": "function_26", 
            "reason": "Zero Trust –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "TrustScoring",
            "file": "security/preliminary/trust_scoring.py",
            "class": "TrustScoring",
            "function_id": "function_27",
            "reason": "–°–∏—Å—Ç–µ–º–∞ –¥–æ–≤–µ—Ä–∏—è - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "ContextAwareAccess",
            "file": "security/preliminary/context_aware_access.py",
            "class": "ContextAwareAccess",
            "function_id": "function_28",
            "reason": "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        
        # –§—É–Ω–∫—Ü–∏–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã (5 —Ñ—É–Ω–∫—Ü–∏–π)
        {
            "name": "ServiceMeshManager",
            "file": "security/microservices/service_mesh_manager.py",
            "class": "ServiceMeshManager",
            "function_id": "function_36",
            "reason": "Service Mesh - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "APIGatewayManager", 
            "file": "security/microservices/api_gateway_manager.py",
            "class": "APIGatewayManager",
            "function_id": "function_37",
            "reason": "API Gateway - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "RedisCacheManager",
            "file": "security/microservices/redis_cache_manager.py",
            "class": "RedisCacheManager",
            "function_id": "function_38", 
            "reason": "Redis –∫—ç—à - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "KubernetesOrchestrator",
            "file": "security/orchestration/kubernetes_orchestrator.py",
            "class": "KubernetesOrchestrator",
            "function_id": "function_41",
            "reason": "Kubernetes –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        },
        {
            "name": "AutoScalingEngine",
            "file": "security/scaling/auto_scaling_engine.py", 
            "class": "AutoScalingEngine",
            "function_id": "function_42",
            "reason": "–ê–≤—Ç–æ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ - –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        }
    ]
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(functions_to_disable)} —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è")
    print()
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
    sleep_config = {
        "timestamp": datetime.now().isoformat(),
        "reason": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π",
        "disabled_functions": [],
        "active_functions": [
            "ThreatDetectionAgent",
            "BehavioralAnalysisAgent", 
            "NetworkSecurityAgent",
            "PerformanceOptimizationAgent"
        ]
    }
    
    disabled_count = 0
    
    for func in functions_to_disable:
        print(f"üî¥ –û—Ç–∫–ª—é—á–∞–µ–º {func['function_id']}: {func['name']}")
        print(f"   üìÅ –§–∞–π–ª: {func['file']}")
        print(f"   üéØ –ö–ª–∞—Å—Å: {func['class']}")
        print(f"   üí° –ü—Ä–∏—á–∏–Ω–∞: {func['reason']}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        sleep_config["disabled_functions"].append({
            "function_id": func['function_id'],
            "name": func['name'],
            "class": func['class'],
            "file": func['file'],
            "reason": func['reason'],
            "disabled_at": datetime.now().isoformat()
        })
        
        disabled_count += 1
        print(f"   ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ")
        print()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
    config_file = "config/sleep_mode_config.json"
    os.makedirs(os.path.dirname(config_file), exist_ok=True)
    
    with open(config_file, 'w', encoding='utf-8') as f:
        json.dump(sleep_config, f, indent=2, ensure_ascii=False)
    
    print("=" * 70)
    print(f"üéâ –£–°–ü–ï–®–ù–û –û–¢–ö–õ–Æ–ß–ï–ù–û {disabled_count} –§–£–ù–ö–¶–ò–ô –í –°–ü–Ø–©–ò–ô –†–ï–ñ–ò–ú!")
    print()
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ: {disabled_count} —Ñ—É–Ω–∫—Ü–∏–π")
    print(f"   üü¢ –ê–∫—Ç–∏–≤–Ω–æ: {len(sleep_config['active_functions'])} —Ñ—É–Ω–∫—Ü–∏–π")
    print(f"   üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_file}")
    print()
    print("üí° –ê–ö–¢–ò–í–ù–´–ï –§–£–ù–ö–¶–ò–ò (–æ—Å—Ç–∞–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å):")
    for active_func in sleep_config['active_functions']:
        print(f"   ‚úÖ {active_func}")
    print()
    print("üîÑ –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞—Ç–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python scripts/enable_functions_wake_up.py")
    print()
    print("‚ö° –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –£–°–ö–û–†–ï–ù–ù–û–ô –†–ê–ó–†–ê–ë–û–¢–ö–ï!")

if __name__ == "__main__":
    try:
        disable_functions_sleep_mode()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        sys.exit(1)