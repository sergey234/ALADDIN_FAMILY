#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤ —Å SafeFunctionManager
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from security.advanced_alerting_system import alerting_system
from security.safe_function_manager import SafeFunctionManager
from core.base import SecurityLevel

def integrate_alerting_system():
    """–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤"""
    print("üîó –ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AdvancedAlertingSystem —Å SafeFunctionManager...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º SafeFunctionManager
        safe_manager = SafeFunctionManager()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∞–ª–µ—Ä—Ç–æ–≤ –ë–ï–ó auto_enable
        result = safe_manager.register_function(
            function_id="advanced_alerting_system",
            name="Advanced Alerting System",
            description="–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–ª–µ—Ä—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            function_type="security",
            security_level=SecurityLevel.HIGH,
            auto_enable=False  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ
        )
        
        if result:
            print("‚úÖ AdvancedAlertingSystem —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            function_status = safe_manager.get_function_status("advanced_alerting_system")
            
            if function_status:
                print(f"üìä –°—Ç–∞—Ç—É—Å —Ñ—É–Ω–∫—Ü–∏–∏: {function_status.get('status', 'unknown')}")
                print(f"üîí –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {function_status.get('security_level', 'unknown')}")
                print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {function_status.get('description', 'unknown')}")
                
                # –í–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤—Ä—É—á–Ω—É—é
                enable_result = safe_manager.enable_function("advanced_alerting_system")
                if enable_result:
                    print("‚úÖ –§—É–Ω–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏")
            else:
                print("‚ùå –§—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∞–ª–µ—Ä—Ç–æ–≤
            test_data = {
                'threat_level': 'critical',
                'cpu_usage': 95,
                'memory_usage': 90,
                'error_count': 15
            }
            
            alerts = alerting_system.check_alerts(test_data)
            print(f"üß™ –¢–µ—Å—Ç: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(alerts)} –∞–ª–µ—Ä—Ç–æ–≤")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = alerting_system.get_alert_statistics()
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤: {stats['total_alerts']} –≤—Å–µ–≥–æ, {stats['active_alerts']} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
            
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ AdvancedAlertingSystem")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == '__main__':
    success = integrate_alerting_system()
    if success:
        print("üéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        sys.exit(1)