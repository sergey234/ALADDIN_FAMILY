#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ALADDIN Security System - Script –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è 12 —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import sys
import os
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from security.safe_function_manager import SafeFunctionManager, FunctionStatus


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è"""
    print("üöÄ –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï 12 –§–£–ù–ö–¶–ò–ô –í –°–ü–Ø–©–ò–ô –†–ï–ñ–ò–ú")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SafeFunctionManager...")
        manager = SafeFunctionManager()
        manager.initialize()
        print("‚úÖ SafeFunctionManager –≥–æ—Ç–æ–≤")
        
        # –°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        functions_to_disable = [
            "policy_engine",           # function_22
            "risk_assessment",         # function_23  
            "behavioral_analysis",     # function_24
            "mfa_service",            # function_25
            "zero_trust_service",     # function_26
            "trust_scoring",          # function_27
            "context_aware_access",   # function_28
            "service_mesh_manager",   # function_36
            "api_gateway_manager",    # function_37
            "redis_cache_manager",    # function_38
            "threat_detection_agent", # function_39
            "performance_optimization_agent" # function_40
        ]
        
        print("üéØ –û—Ç–∫–ª—é—á–∞–µ–º {} —Ñ—É–Ω–∫—Ü–∏–π...".format(len(functions_to_disable)))
        
        disabled_count = 0
        for func_id in functions_to_disable:
            try:
                success = manager.disable_function(func_id)
                if success:
                    print("‚úÖ {} - –æ—Ç–∫–ª—é—á–µ–Ω".format(func_id))
                    disabled_count += 1
                else:
                    print("‚ö†Ô∏è {} - –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω".format(func_id))
            except Exception as e:
                print("‚ùå {} - –æ—à–∏–±–∫–∞: {}".format(func_id, e))
        
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢: {}/{} —Ñ—É–Ω–∫—Ü–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–æ".format(disabled_count, len(functions_to_disable)))
        print("üí§ –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        report = """
# –û–¢–ß–ï–¢ –û–ë –û–¢–ö–õ–Æ–ß–ï–ù–ò–ò –§–£–ù–ö–¶–ò–ô
–î–∞—Ç–∞: {}
–û—Ç–∫–ª—é—á–µ–Ω–æ: {}/{} —Ñ—É–Ω–∫—Ü–∏–π

–û—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
{}
""".format(
            datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
            disabled_count,
            len(functions_to_disable),
            '\n'.join("- {}".format(func) for func in functions_to_disable[:disabled_count])
        )
        
        report_path = os.path.join(os.path.dirname(__file__), '..', 'logs', 
                                 'disable_report_{}.md'.format(datetime.now().strftime("%Y%m%d_%H%M%S")))
        os.makedirs(os.path.dirname(report_path), exist_ok=True)
        
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(report)
        
        print("üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {}".format(report_path))
        print("üéâ –ì–û–¢–û–í–û! –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ")
        
    except Exception as e:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {}".format(e))
        return False
    
    return True


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)