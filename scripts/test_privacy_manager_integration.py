#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ UniversalPrivacyManager —Å SafeFunctionManager
"""

import asyncio
import uuid
from datetime import datetime
import sys
import os

sys.path.insert(0, '/Users/sergejhlystov/ALADDIN_NEW')

from security.safe_function_manager import SafeFunctionManager, SecurityLevel
from security.privacy.universal_privacy_manager import (
    UniversalPrivacyManager, DataCategory, ConsentType, PrivacyAction
)


async def run_integration_test():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ UniversalPrivacyManager —Å SFM"""
    print("üîß –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ UniversalPrivacyManager —Å SafeFunctionManager")
    print("============================================================")
    
    # –°–æ–∑–¥–∞–µ–º SFM
    sfm = SafeFunctionManager(name="ALADDIN")
    print("‚úÖ SafeFunctionManager —Å–æ–∑–¥–∞–Ω!")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º UniversalPrivacyManager –≤ SFM
    registration_success = sfm.register_function(
        function_id="privacy_manager",
        name="UniversalPrivacyManager",
        description="–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º",
        function_type="privacy",
        security_level=SecurityLevel.HIGH,
        is_critical=True,
        auto_enable=False
    )
    print(f"‚úÖ UniversalPrivacyManager –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {registration_success}")
    
    # –í–∫–ª—é—á–∞–µ–º UniversalPrivacyManager
    enable_success = sfm.enable_function("privacy_manager")
    print(f"‚úÖ UniversalPrivacyManager –≤–∫–ª—é—á–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {enable_success}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
    manager_status = sfm.get_function_status("privacy_manager")
    print(f"\nüìà –°—Ç–∞—Ç—É—Å UniversalPrivacyManager: {manager_status['status']}")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä UniversalPrivacyManager
    manager = UniversalPrivacyManager()
    print("‚úÖ UniversalPrivacyManager —Å–æ–∑–¥–∞–Ω!")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å—É–±—ä–µ–∫—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    register_success = manager.register_data_subject(
        user_id="test_user_123",
        email="test@example.com",
        phone="+1234567890"
    )
    print(f"‚úÖ –°—É–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {register_success}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ
    consent_success = manager.add_consent(
        user_id="test_user_123",
        consent_type=ConsentType.EXPLICIT,
        data_category=DataCategory.PERSONAL,
        granted=True
    )
    print(f"‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {consent_success}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ
    has_consent = manager.check_consent("test_user_123", DataCategory.PERSONAL)
    print(f"‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {has_consent}")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
    action_success = manager.process_data_action(
        user_id="test_user_123",
        action=PrivacyAction.PROCESS,
        data_category=DataCategory.PERSONAL,
        details={
            "purpose": "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
            "legal_basis": "—Å–æ–≥–ª–∞—Å–∏–µ",
            "sale_notice": True
        }
    )
    print(f"‚úÖ –î–µ–π—Å—Ç–≤–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {action_success}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É–±—ä–µ–∫—Ç–µ –¥–∞–Ω–Ω—ã—Ö
    subject_info = manager.get_data_subject_info("test_user_123")
    print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—É–±—ä–µ–∫—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç: {subject_info}")
    print(f"   ‚Ä¢ Email: {subject_info.get('email', 'N/A')}")
    print(f"   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {subject_info.get('data_categories', [])}")
    print(f"   ‚Ä¢ –°–æ–≥–ª–∞—Å–∏–π: {len(subject_info.get('consents', []))}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
    events = manager.get_privacy_events("test_user_123", limit=5)
    print(f"‚úÖ –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω—ã! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(events)}")
    for event in events:
        print(f"   ‚Ä¢ {event['action']} - {event['data_category']} ({event['timestamp']})")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏
    compliance_report = manager.get_compliance_report()
    print(f"‚úÖ –û—Ç—á–µ—Ç –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—É—á–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {compliance_report}")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {compliance_report.get('total_events', 0)}")
    print(f"   ‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö: {compliance_report.get('compliant_events', 0)}")
    print(f"   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: {compliance_report.get('compliance_rate', 0):.1f}%")
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    export_data = manager.export_data("test_user_123")
    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã! –†–µ–∑—É–ª—å—Ç–∞—Ç: {export_data}")
    print(f"   ‚Ä¢ –°—É–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö: {export_data.get('data_subject', {}).get('user_id', 'N/A')}")
    print(f"   ‚Ä¢ –°–æ–±—ã—Ç–∏–π: {len(export_data.get('privacy_events', []))}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∑—ã–≤ —Å–æ–≥–ª–∞—Å–∏—è
    revoke_success = manager.revoke_consent("test_user_123", DataCategory.PERSONAL)
    print(f"‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –æ—Ç–æ–∑–≤–∞–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {revoke_success}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    status = manager.get_status()
    print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {status}")
    print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å: {status.status}")
    print(f"   ‚Ä¢ –ó–¥–æ—Ä–æ–≤—å–µ: {status.health_score}")
    print(f"   ‚Ä¢ –°—É–±—ä–µ–∫—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {status.details.get('data_subjects_count', 0)}")
    print(f"   ‚Ä¢ –°–æ–±—ã—Ç–∏–π: {status.details.get('privacy_events_count', 0)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ SFM
    sfm_test_result = sfm.test_function("privacy_manager")
    print(f"‚úÖ –¢–µ—Å—Ç SFM –∑–∞–≤–µ—Ä—à–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {sfm_test_result}")
    
    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ SFM
    sfm_metrics = sfm.get_performance_metrics()
    print("‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ SFM –ø–æ–ª—É—á–µ–Ω—ã!")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {sfm_metrics['current_metrics']['total_functions']}")
    print(f"   ‚Ä¢ –í–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {sfm_metrics['current_metrics']['enabled_functions']}")
    print(f"   ‚Ä¢ –°–ø—è—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π: {sfm_metrics['current_metrics']['sleeping_functions']}")
    print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π: {sfm_metrics['current_metrics']['active_executions']}")
    
    print("\n============================================================")
    print("üéâ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ UniversalPrivacyManager –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    if (registration_success and enable_success and register_success and 
        consent_success and has_consent and action_success):
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å.")
        return False


if __name__ == "__main__":
    asyncio.run(run_integration_test())