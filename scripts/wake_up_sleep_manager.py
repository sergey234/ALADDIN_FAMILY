#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üò¥ –ü–†–û–ë–£–ñ–î–ï–ù–ò–ï –ú–ï–ù–ï–î–ñ–ï–†–ê –°–ù–ê
============================

–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ SleepModeManager –∏ SFM
"""

import json
import os
from datetime import datetime

def wake_up_sleep_manager():
    """–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–Ω–∞ –∏ SFM"""
    
    print("üò¥ –ü–†–û–ë–£–ñ–î–ï–ù–ò–ï –ú–ï–ù–ï–î–ñ–ï–†–ê –°–ù–ê –ò SFM")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º SFM —Ä–µ–µ—Å—Ç—Ä
    sfm_path = "data/sfm/function_registry.json"
    
    if not os.path.exists(sfm_path):
        print(f"‚ùå –§–∞–π–ª {sfm_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    with open(sfm_path, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    functions = data.get('functions', {})
    
    # –ù–∞—Ö–æ–¥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã —Å–Ω–∞ –∏ SFM
    sleep_managers = [
        'sleep_mode_manager',
        'all_bots_sleep_manager', 
        'safe_sleep_mode_optimizer',
        'safe_function_manager',
        'enhanced_safe_function_manager',
        'security_safefunctionmanager'
    ]
    
    print(f"üîç –ü–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —Å–Ω–∞ –∏ SFM...")
    
    woken_up = 0
    for manager in sleep_managers:
        if manager in functions:
            functions[manager]['status'] = 'active'
            functions[manager]['wake_time'] = datetime.now().isoformat()
            functions[manager]['sleep_manager_wake'] = True
            woken_up += 1
            print(f"‚úÖ {manager} - –ø—Ä–æ–±—É–∂–¥–µ–Ω")
        else:
            print(f"‚ö†Ô∏è  {manager} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä
    data['functions'] = functions
    data['last_updated'] = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    data['sleep_managers_woken'] = woken_up
    
    with open(sfm_path, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –ü—Ä–æ–±—É–∂–¥–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤: {woken_up}")
    print(f"   SFM —Ä–µ–µ—Å—Ç—Ä –æ–±–Ω–æ–≤–ª–µ–Ω: {sfm_path}")
    
    return woken_up

if __name__ == "__main__":
    wake_up_sleep_manager()