#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è APIGateway –≤ —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
"""

import sys
import os
import json
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def integrate_api_gateway():
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è APIGateway –≤ —Å–∏—Å—Ç–µ–º—É"""
    print("üîó –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø APIGATEWAY –í –°–ò–°–¢–ï–ú–£")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç APIGateway
        from security.microservices.api_gateway import APIGateway, HTTPMethod, AuthMethod
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        config = {
            'database_url': 'sqlite:///api_gateway.db',
            'jwt_secret': 'aladdin-security-secret-key-2025',
            'redis_url': 'redis://localhost:6379'
        }
        
        gateway = APIGateway(name="ALADDIN_APIGateway", config=config)
        print("‚úÖ APIGateway: —Å–æ–∑–¥–∞–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        status = gateway.get_status()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {status['status']}")
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å—ã: {status['services_count']}")
        print(f"‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã: {status['routes_count']}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è API –∫–ª—é—á–∞
        from security.microservices.api_gateway import APIKeyRequest
        key_request = APIKeyRequest(
            name="aladdin_mobile_app",
            permissions=["read", "write", "admin"],
            rate_limit=5000,
            expires_in_days=365
        )
        print("‚úÖ APIKeyRequest: —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
        from security.microservices.api_gateway import RouteRequest
        route_request = RouteRequest(
            path="/api/v1/security",
            method=HTTPMethod.POST,
            service_name="security_service",
            service_url="http://localhost:8001",
            rate_limit=1000,
            timeout=30,
            retry_count=3
        )
        print("‚úÖ RouteRequest: —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        jwt_provider = gateway.auth_providers.get(AuthMethod.JWT)
        api_key_provider = gateway.auth_providers.get(AuthMethod.API_KEY)
        
        if jwt_provider:
            print("‚úÖ JWT –ø—Ä–æ–≤–∞–π–¥–µ—Ä: –∞–∫—Ç–∏–≤–µ–Ω")
        if api_key_provider:
            print("‚úÖ API –∫–ª—é—á –ø—Ä–æ–≤–∞–π–¥–µ—Ä: –∞–∫—Ç–∏–≤–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ ML –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if hasattr(gateway, 'anomaly_detector'):
            print("‚úÖ ML –¥–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω–æ–º–∞–ª–∏–π: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        if hasattr(gateway, 'request_classifier'):
            print("‚úÖ ML –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        if hasattr(gateway, 'clustering_model'):
            print("‚úÖ ML –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ç–æ—Ä: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        print("\nüéØ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò: {e}")
        return False

if __name__ == "__main__":
    success = integrate_api_gateway()
    if success:
        print("\nüéâ APIGATEWAY –£–°–ü–ï–®–ù–û –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù!")
    else:
        print("\nüí• –û–®–ò–ë–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò!")