#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è TrustScoring —Å SafeFunctionManager
"""
import sys
import os
from typing import Dict, Any

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from security.safe_function_manager import SafeFunctionManager
from core.base import SecurityLevel

def integrate_trust_scoring() -> bool:
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è TrustScoring —Å SafeFunctionManager"""
    print("üöÄ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø TRUSTSCORING:")
    
    manager = SafeFunctionManager()
    manager.initialize()
    
    print("üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º TrustScoring...")
    success = manager.register_function(
        function_id="trust_scoring",
        name="TrustScoring",
        description="–°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –¥–æ–≤–µ—Ä–∏—è –¥–ª—è —Å–µ–º–µ–π",
        function_type="preliminary",
        security_level=SecurityLevel.HIGH,
        is_critical=True,
        auto_enable=False
    )
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£–°–ü–ï–®–ù–û' if success else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    print("\nüìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:")
    status = manager.get_status()
    print(f"–í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {status.get('total_functions', 0)}")
    print(f"–í–∫–ª—é—á–µ–Ω–æ: {status.get('functions_enabled', 0)}")
    print(f"–û—Ç–∫–ª—é—á–µ–Ω–æ: {status.get('functions_disabled', 0)}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º
    types_stats = status.get('functions_by_type', {})
    if types_stats:
        print("–ü–æ —Ç–∏–ø–∞–º:")
        for func_type, count in types_stats.items():
            print(f"  {func_type}: {count}")
    
    print("\nüéâ FUNCTION_26 –ó–ê–í–ï–†–®–ï–ù!")
    return success

if __name__ == "__main__":
    success = integrate_trust_scoring()
    sys.exit(0 if success else 1)