#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º—ã ALADDIN –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å —Ä–∞–∑–±–∏–≤–∫–æ–π –ø–æ —Ç–∏–ø–∞–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import sys
import os
import json
from pathlib import Path
from collections import defaultdict

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent.parent))

def analyze_all_categories_unified():
    """–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    print("üöÄ –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó –°–ò–°–¢–ï–ú–´ ALADDIN")
    print("=" * 80)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    categories = {
        "ü§ñ AI Agents": "security/ai_agents/",
        "ü§ñ Security Bots": "security/bots/",
        "‚öôÔ∏è Managers": "security/managers/",
        "üîß Microservices": "security/microservices/",
        "üîí Privacy": "security/privacy/",
        "üîÑ CI/CD": "security/ci_cd/",
        "üèóÔ∏è Core": "core/",
        "‚öôÔ∏è Config": "config/"
    }
    
    # –û–±—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    component_types = {
        "ü§ñ AI –ê–ì–ï–ù–¢–´": ["agent"],
        "‚öôÔ∏è –ú–ï–ù–ï–î–ñ–ï–†–´": ["manager"],
        "üîß –î–í–ò–ñ–ö–ò –ò –°–ò–°–¢–ï–ú–´": ["engine", "system", "hub", "interface"],
        "ü§ñ –ë–û–¢–´": ["bot"],
        "üîç –ê–ù–ê–õ–ò–ó–ê–¢–û–†–´": ["analyzer", "detector", "protector", "validator"],
        "üîß –ú–ò–ö–†–û–°–ï–†–í–ò–°–´": ["service", "microservice", "gateway", "balancer"],
        "üìä –£–¢–ò–õ–ò–¢–´": ["utils", "helper", "tool"],
        "üìã –ú–û–î–ï–õ–ò": ["model", "base", "formatter"],
        "üîß –ò–ù–¢–ï–ì–†–ê–¶–ò–ò": ["integration", "caller", "connector"],
        "üìä –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï": ["extra", "main", "backup", "__init__", "test"]
    }
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_files = 0
    total_by_type = defaultdict(int)
    total_by_category = defaultdict(int)
    undefined_files = []
    
    print("\nüìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:")
    print("=" * 80)
    
    for category_name, category_path in categories.items():
        if not os.path.exists(category_path):
            print(f"\n{category_name}: ‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            continue
            
        print(f"\n{category_name}:")
        print("-" * 50)
        
        files_by_type = defaultdict(list)
        category_files = 0
        
        # –°–∫–∞–Ω–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for file in os.listdir(category_path):
            if file.endswith('.py'):
                category_files += 1
                total_files += 1
                file_lower = file.lower()
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                categorized = False
                for type_name, keywords in component_types.items():
                    for keyword in keywords:
                        if keyword in file_lower:
                            files_by_type[type_name].append(file)
                            total_by_type[type_name] += 1
                            categorized = True
                            break
                    if categorized:
                        break
                
                # –ï—Å–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Ç–∏–ø
                if not categorized:
                    files_by_type["‚ùì –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–ï"].append(file)
                    total_by_type["‚ùì –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–ï"] += 1
                    undefined_files.append(f"{category_name}: {file}")
        
        total_by_category[category_name] = category_files
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for type_name, files in files_by_type.items():
            if files:
                print(f"  {type_name}: {len(files)} —Ñ–∞–π–ª–æ–≤")
                for file in sorted(files)[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
                    print(f"    ‚Ä¢ {file}")
                if len(files) > 5:
                    print(f"    ... –∏ –µ—â–µ {len(files) - 5} —Ñ–∞–π–ª–æ–≤")
        
        print(f"  üìä –ò–¢–û–ì–û: {category_files} —Ñ–∞–π–ª–æ–≤")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\nüéØ –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 80)
    
    print("\nüìÅ –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:")
    for category, count in total_by_category.items():
        print(f"  {category}: {count} —Ñ–∞–π–ª–æ–≤")
    
    print(f"\nüìä –í–°–ï–ì–û –§–ê–ô–õ–û–í: {total_files}")
    
    print("\n‚öôÔ∏è –ü–û –¢–ò–ü–ê–ú –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:")
    for type_name, count in total_by_type.items():
        percentage = (count / total_files * 100) if total_files > 0 else 0
        print(f"  {type_name}: {count} —Ñ–∞–π–ª–æ–≤ ({percentage:.1f}%)")
    
    # –ê–Ω–∞–ª–∏–∑ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\n‚ùì –ê–ù–ê–õ–ò–ó –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–• –§–ê–ô–õ–û–í:")
    print("=" * 80)
    print(f"–í—Å–µ–≥–æ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {len(undefined_files)}")
    
    if undefined_files:
        print("\nüìã –°–ü–ò–°–û–ö –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–• –§–ê–ô–õ–û–í:")
        for file_info in undefined_files:
            print(f"  ‚Ä¢ {file_info}")
        
        print("\nüîç –ê–ù–ê–õ–ò–ó –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–• –§–ê–ô–õ–û–í:")
        print("–≠—Ç–∏ —Ñ–∞–π–ª—ã –Ω–µ –ø–æ–ø–∞–ª–∏ –Ω–∏ –≤ –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ—Ç–æ–º—É —á—Ç–æ:")
        print("1. –ò–º–µ—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤")
        print("2. –Ø–≤–ª—è—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏")
        print("3. –ú–æ–≥—É—Ç –±—ã—Ç—å —É—Ç–∏–ª–∏—Ç–∞–º–∏ –∏–ª–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ –º–æ–¥—É–ª—è–º–∏")
        print("4. –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    
    return total_files, total_by_type, total_by_category, undefined_files

def analyze_undefined_files_detailed():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–• –§–ê–ô–õ–û–í:")
    print("=" * 80)
    
    undefined_analysis = {
        "ü§ñ AI-–°–ò–°–¢–ï–ú–´": [],
        "üìã –ú–û–î–ï–õ–ò –ò –î–ê–ù–ù–´–ï": [],
        "üîß –°–ï–†–í–ò–°–´": [],
        "üìä –£–¢–ò–õ–ò–¢–´": [],
        "üîó –ò–ù–¢–ï–ì–†–ê–¶–ò–ò": [],
        "‚ùì –î–†–£–ì–ò–ï": []
    }
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ AI Agents
    ai_agents_path = "security/ai_agents/"
    if os.path.exists(ai_agents_path):
        for file in os.listdir(ai_agents_path):
            if file.endswith('.py'):
                file_lower = file.lower()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º
                is_undefined = True
                for keyword in ["agent", "manager", "engine", "system", "hub", "interface", "bot", "analyzer", "detector", "protector", "validator", "extra", "main", "utils", "backup", "__init__"]:
                    if keyword in file_lower:
                        is_undefined = False
                        break
                
                if is_undefined:
                    # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
                    if "ai" in file_lower or "master" in file_lower:
                        undefined_analysis["ü§ñ AI-–°–ò–°–¢–ï–ú–´"].append(file)
                    elif "model" in file_lower or "base" in file_lower or "formatter" in file_lower:
                        undefined_analysis["üìã –ú–û–î–ï–õ–ò –ò –î–ê–ù–ù–´–ï"].append(file)
                    elif "service" in file_lower or "caller" in file_lower:
                        undefined_analysis["üîß –°–ï–†–í–ò–°–´"].append(file)
                    elif "utils" in file_lower or "helper" in file_lower:
                        undefined_analysis["üìä –£–¢–ò–õ–ò–¢–´"].append(file)
                    elif "integration" in file_lower or "messenger" in file_lower:
                        undefined_analysis["üîó –ò–ù–¢–ï–ì–†–ê–¶–ò–ò"].append(file)
                    else:
                        undefined_analysis["‚ùì –î–†–£–ì–ò–ï"].append(file)
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for category, files in undefined_analysis.items():
        if files:
            print(f"\n{category} ({len(files)} —Ñ–∞–π–ª–æ–≤):")
            for file in files:
                print(f"  ‚Ä¢ {file}")
    
    return undefined_analysis

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó –°–ò–°–¢–ï–ú–´ ALADDIN")
    print("=" * 80)
    
    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    total_files, total_by_type, total_by_category, undefined_files = analyze_all_categories_unified()
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    undefined_analysis = analyze_undefined_files_detailed()
    
    print("\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("=" * 80)
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å–∏—Å—Ç–µ–º—ã ALADDIN")
    print("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤—Å–µ —Ç–∏–ø—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
    print("‚úÖ –í—ã—è–≤–ª–µ–Ω—ã –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")

if __name__ == "__main__":
    main()