#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ SafeFunctionManager
"""

import os
import sys
import time
import psutil
import json

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '.')))

print('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ì–û SFM')
print('=' * 70)

print('\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ô –í–ï–†–°–ò–ò SFM')
print('-' * 50)

start_time = time.time()
start_memory = psutil.Process().memory_info().rss / 1024 / 1024

try:
    from security.safe_function_manager import SafeFunctionManager
    sfm = SafeFunctionManager()
    sfm.initialize()
    
    load_time = time.time() - start_time
    memory = psutil.Process().memory_info().rss / 1024 / 1024
    memory_used = memory - start_memory
    
    print(f'   ‚è±Ô∏è  –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {load_time:.3f} —Å–µ–∫')
    print(f'   üíæ –ü–∞–º—è—Ç—å: {memory_used:.2f} MB')
    print(f'   üì¶ –§—É–Ω–∫—Ü–∏–π: {len(sfm.functions)}')
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    optimization_stats = sfm.get_optimization_stats()
    print(f'   üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:')
    print(f'      Memory Pool: {optimization_stats["memory_pool"]["size"]} –æ–±—ä–µ–∫—Ç–æ–≤')
    print(f'      Import Cache: {optimization_stats["import_optimizer"]["cached_imports"]} –º–æ–¥—É–ª–µ–π')
    print(f'      Performance Optimizer: {"‚úÖ" if optimization_stats["performance_optimizer"] else "‚ùå"}')
    print(f'      Redis Cache: {"‚úÖ" if optimization_stats["redis_cache"] else "‚ùå"}')
    print(f'      Async IO: {"‚úÖ" if optimization_stats["async_io"] else "‚ùå"}')
    
    success = True
    
except Exception as e:
    print(f'   ‚ùå –û—à–∏–±–∫–∞: {e}')
    import traceback
    traceback.print_exc()
    success = False
    load_time = 0
    memory_used = 0

print('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø')
print('=' * 70)

if success:
    print(f'‚úÖ SFM —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!')
    print(f'‚è±Ô∏è  –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {load_time:.3f} —Å–µ–∫')
    print(f'üíæ –ü–∞–º—è—Ç—å: {memory_used:.2f} MB')
    print(f'üì¶ –§—É–Ω–∫—Ü–∏–π: {len(sfm.functions)}')
    print(f'üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {len(optimization_stats)}')
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print(f'\nüéØ –ê–ù–ê–õ–ò–ó –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:')
    if load_time < 5.0:
        print(f'   ‚úÖ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–ª–∏—á–Ω–æ–µ: {load_time:.3f} —Å–µ–∫')
    elif load_time < 10.0:
        print(f'   ‚ö†Ô∏è  –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–µ–º–ª–µ–º–æ–µ: {load_time:.3f} —Å–µ–∫')
    else:
        print(f'   ‚ùå –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–ª–µ–Ω–Ω–æ–µ: {load_time:.3f} —Å–µ–∫')
    
    if memory_used < 100:
        print(f'   ‚úÖ –ü–∞–º—è—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ: {memory_used:.2f} MB')
    elif memory_used < 200:
        print(f'   ‚ö†Ô∏è  –ü–∞–º—è—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É–º–µ—Ä–µ–Ω–Ω–æ: {memory_used:.2f} MB')
    else:
        print(f'   ‚ùå –ü–∞–º—è—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–Ω–æ–≥–æ: {memory_used:.2f} MB')
        
else:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SFM')

print(f'\nÔøΩÔøΩ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú:')
if not success:
    print('   ‚ùå –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')
    print('   üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏')
