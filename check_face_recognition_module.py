#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–æ–¥—É–ª—è –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶ –≤ –∑–∞—â–∏—Ç–µ
"""

import re

def check_face_recognition_module():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–æ–¥—É–ª—è –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶ –≤ –∑–∞—â–∏—Ç–µ"""
    
    with open('/Users/sergejhlystov/ALADDIN_NEW/MOBILE_APP_INFO_SECTIONS.md', 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("=== –ü–†–û–í–ï–†–ö–ê –ú–û–î–£–õ–Ø –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶ ===\n")
    
    # –ò—â–µ–º –º–æ–¥—É–ª—å –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶
    face_recognition_pattern = r'### [^#\n]*24\. –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶[^#\n]*'
    face_recognition_match = re.search(face_recognition_pattern, content)
    
    if face_recognition_match:
        print("‚úÖ –ú–û–î–£–õ–¨ –ù–ê–ô–î–ï–ù:")
        print(face_recognition_match.group())
        
        # –ò—â–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥—É–ª—è
        description_pattern = r'### [^#\n]*24\. –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶[^#\n]*\n\n\*\*–ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ\?\*\*\n([^#\n]+)\n\n\*\*–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞:\*\*\n((?:[^#\n]*\n)*?)\*\*–û—Ç —á–µ–≥–æ –∑–∞—â–∏—â–∞–µ—Ç:\*\*\n((?:[^#\n]*\n)*?)(?=---|\n###)'
        description_match = re.search(description_pattern, content, re.DOTALL)
        
        if description_match:
            print("\nüìã –û–ü–ò–°–ê–ù–ò–ï –ú–û–î–£–õ–Ø:")
            print(f"–ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ: {description_match.group(1).strip()}")
            print(f"–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞: {description_match.group(2).strip()}")
            print(f"–û—Ç —á–µ–≥–æ –∑–∞—â–∏—â–∞–µ—Ç: {description_match.group(3).strip()}")
        
        return True
    else:
        print("‚ùå –ú–û–î–£–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù")
        return False

if __name__ == "__main__":
    found = check_face_recognition_module()
    if found:
        print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–¥—É–ª—å –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞—â–∏—Ç—ã")
    else:
        print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–¥—É–ª—å –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –õ–ò–¶ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞—â–∏—Ç—ã")
