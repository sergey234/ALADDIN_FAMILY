{
  "timestamp": "/Users/sergejhlystov/ALADDIN_NEW",
  "statistics": {
    "total_functions": 1477,
    "registration_scripts": 261,
    "sleep_functions": 47,
    "active_functions": 602,
    "categories": {
      "OTHER": [
        {
          "function_id": "Abuse.ch URLhaus",
          "file": "threat_intelligence_system.py",
          "line": 150,
          "pattern": "function_name",
          "content": "name=\"Abuse.ch URLhaus\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Abuse.ch Feodo Tracker",
          "file": "threat_intelligence_system.py",
          "line": 159,
          "pattern": "function_name",
          "content": "name=\"Abuse.ch Feodo Tracker\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Malware Domain List",
          "file": "threat_intelligence_system.py",
          "line": 168,
          "pattern": "function_name",
          "content": "name=\"Malware Domain List\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Phishing Database",
          "file": "threat_intelligence_system.py",
          "line": 177,
          "pattern": "function_name",
          "content": "name=\"Phishing Database\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Spamhaus DROP List",
          "file": "threat_intelligence_system.py",
          "line": 186,
          "pattern": "function_name",
          "content": "name=\"Spamhaus DROP List\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "CINS Score",
          "file": "threat_intelligence_system.py",
          "line": 195,
          "pattern": "function_name",
          "content": "name=\"CINS Score\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "MonitoringAPIServer",
          "file": "monitoring_api_server.py",
          "line": 16,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"MonitoringAPIServer\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "RussianAPIsServer",
          "file": "russian_apis_server.py",
          "line": 16,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"RussianAPIsServer\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "simple_architecture_visualizer.py",
          "line": 23,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ExportManager",
          "file": "export_manager.py",
          "line": 46,
          "pattern": "function_name",
          "content": "self.service_name = \"ExportManager\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Courier",
          "file": "export_manager.py",
          "line": 245,
          "pattern": "function_name",
          "content": "story.append(Paragraph(f\"<b>Метаданные:</b><br/><font name='Courier' size='8'>{metadata_str}</font>\", styles['Normal']))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_persistence}\")",
          "file": "test_sfm_persistence_final.py",
          "line": 48,
          "pattern": "enable_function",
          "content": "print(f\"   Персистентность включена: {sfm.enable_persistence}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Test Persistence Function",
          "file": "test_sfm_persistence_final.py",
          "line": 58,
          "pattern": "function_name",
          "content": "name=\"Test Persistence Function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "enhanced_architecture_visualizer.py",
          "line": 652,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_usage",
          "file": "enhanced_dashboard_v2.py",
          "line": 413,
          "pattern": "function_name",
          "content": "metric_name=\"cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "memory_usage",
          "file": "enhanced_dashboard_v2.py",
          "line": 425,
          "pattern": "function_name",
          "content": "metric_name=\"memory_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "enhanced_dashboard_v2.py",
          "line": 511,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_api_manager",
          "file": "enhanced_dashboard_v2.py",
          "line": 736,
          "pattern": "id\":",
          "content": "\"id\": \"russian_api_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_banking_integration",
          "file": "enhanced_dashboard_v2.py",
          "line": 744,
          "pattern": "id\":",
          "content": "\"id\": \"russian_banking_integration\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_high",
          "file": "enhanced_dashboard_v2.py",
          "line": 925,
          "pattern": "id\":",
          "content": "\"id\": \"cpu_high\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "memory_high",
          "file": "enhanced_dashboard_v2.py",
          "line": 932,
          "pattern": "id\":",
          "content": "\"id\": \"memory_high\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "daily_report",
          "file": "enhanced_dashboard_v2.py",
          "line": 971,
          "pattern": "id\":",
          "content": "\"id\": \"daily_report\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "weekly_report",
          "file": "enhanced_dashboard_v2.py",
          "line": 977,
          "pattern": "id\":",
          "content": "\"id\": \"weekly_report\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems():",
          "file": "wake_up_systems.py",
          "line": 7,
          "pattern": "wake_function",
          "content": "def wake_up_systems():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config = {",
          "file": "wake_up_systems.py",
          "line": 11,
          "pattern": "wake_function",
          "content": "wake_up_config = {",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\": time.time()",
          "file": "wake_up_systems.py",
          "line": 16,
          "pattern": "wake_function",
          "content": "\"wake_up_time\": time.time()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
          "file": "wake_up_systems.py",
          "line": 33,
          "pattern": "wake_function",
          "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
          "file": "wake_up_systems.py",
          "line": 34,
          "pattern": "wake_function",
          "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems()",
          "file": "wake_up_systems.py",
          "line": 40,
          "pattern": "wake_function",
          "content": "wake_up_systems()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "external_integrations_system",
          "file": "register_sfm_components.py",
          "line": 74,
          "pattern": "function_id",
          "content": "function_id = \"external_integrations_system\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "threat_intelligence_system",
          "file": "register_sfm_components.py",
          "line": 136,
          "pattern": "function_id",
          "content": "function_id = \"threat_intelligence_system\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "automated_audit_system",
          "file": "register_sfm_components.py",
          "line": 220,
          "pattern": "function_id",
          "content": "function_id = \"automated_audit_system\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enhanced_dashboard_v2",
          "file": "register_sfm_components.py",
          "line": 298,
          "pattern": "function_id",
          "content": "function_id = \"enhanced_dashboard_v2\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "audit_scheduler",
          "file": "register_sfm_components.py",
          "line": 354,
          "pattern": "function_id",
          "content": "function_id = \"audit_scheduler\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "compliance_monitor",
          "file": "register_sfm_components.py",
          "line": 411,
          "pattern": "function_id",
          "content": "function_id = \"compliance_monitor\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "audit_dashboard_integration",
          "file": "register_sfm_components.py",
          "line": 472,
          "pattern": "function_id",
          "content": "function_id = \"audit_dashboard_integration\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "external_integrations_dashboard",
          "file": "register_sfm_components.py",
          "line": 518,
          "pattern": "function_id",
          "content": "function_id = \"external_integrations_dashboard\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "simple_api_docs.py",
          "line": 24,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Test Service",
          "file": "test_service_mesh_manager_etap8.py",
          "line": 189,
          "pattern": "function_name",
          "content": "name=\"Test Service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "API Service",
          "file": "test_service_mesh_manager_etap8.py",
          "line": 348,
          "pattern": "function_name",
          "content": "name=\"API Service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ElasticsearchSimulator",
          "file": "elasticsearch_simulator.py",
          "line": 49,
          "pattern": "function_name",
          "content": "self.service_name = \"ElasticsearchSimulator\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "enhanced_api_docs.py",
          "line": 953,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мама",
          "file": "backup_old_components_20250905_235049/emergency_response_interface.py",
          "line": 1665,
          "pattern": "function_name",
          "content": "name=\"Мама\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Папа",
          "file": "backup_old_components_20250905_235049/emergency_response_interface.py",
          "line": 1673,
          "pattern": "function_name",
          "content": "name=\"Папа\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Уведомление о безопасности",
          "file": "backup_old_components_20250905_235049/notification_bot.py",
          "line": 938,
          "pattern": "function_name",
          "content": "name=\"Уведомление о безопасности\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Семейное уведомление",
          "file": "backup_old_components_20250905_235049/notification_bot.py",
          "line": 950,
          "pattern": "function_name",
          "content": "name=\"Семейное уведомление\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Экстренное уведомление",
          "file": "backup_old_components_20250905_235049/notification_bot.py",
          "line": 962,
          "pattern": "function_name",
          "content": "name=\"Экстренное уведомление\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_console = config.get(",
          "file": "core/logging_module.py",
          "line": 88,
          "pattern": "enable_function",
          "content": "self.enable_console = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console\", True) if config else True",
          "file": "core/logging_module.py",
          "line": 89,
          "pattern": "enable_function",
          "content": "\"enable_console\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
          "file": "core/logging_module.py",
          "line": 90,
          "pattern": "enable_function",
          "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console:",
          "file": "core/logging_module.py",
          "line": 165,
          "pattern": "enable_function",
          "content": "if self.enable_console:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file:",
          "file": "core/logging_module.py",
          "line": 173,
          "pattern": "enable_function",
          "content": "if self.enable_file:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_destructive_operations = False",
          "file": "config/safe_config.py",
          "line": 29,
          "pattern": "enable_function",
          "content": "self.enable_destructive_operations = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file_operations = False",
          "file": "config/safe_config.py",
          "line": 30,
          "pattern": "enable_function",
          "content": "self.enable_file_operations = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_system_commands = False",
          "file": "config/safe_config.py",
          "line": 31,
          "pattern": "enable_function",
          "content": "self.enable_system_commands = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_operations = False",
          "file": "config/safe_config.py",
          "line": 32,
          "pattern": "enable_function",
          "content": "self.enable_network_operations = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_logging\": True,",
          "file": "config/safe_config.py",
          "line": 121,
          "pattern": "enable_function",
          "content": "\"enable_logging\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audit_trail\": True,",
          "file": "config/safe_config.py",
          "line": 126,
          "pattern": "enable_function",
          "content": "\"enable_audit_trail\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_database\": False,  # Отключена - может изменять данные",
          "file": "config/safe_config.py",
          "line": 132,
          "pattern": "enable_function",
          "content": "\"enable_database\": False,  # Отключена - может изменять данные",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_backups\": False,  # Отключены - могут удалять файлы",
          "file": "config/safe_config.py",
          "line": 134,
          "pattern": "enable_function",
          "content": "\"enable_backups\": False,  # Отключены - могут удалять файлы",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cleanup\": False,  # Отключена - может удалять данные",
          "file": "config/safe_config.py",
          "line": 135,
          "pattern": "enable_function",
          "content": "\"enable_cleanup\": False,  # Отключена - может удалять данные",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_migrations\": False,  # Отключены - могут изменять схему",
          "file": "config/safe_config.py",
          "line": 136,
          "pattern": "enable_function",
          "content": "\"enable_migrations\": False,  # Отключены - могут изменять схему",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network\": False,",
          "file": "config/safe_config.py",
          "line": 141,
          "pattern": "enable_function",
          "content": "\"enable_network\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_external_apis\": False,",
          "file": "config/safe_config.py",
          "line": 142,
          "pattern": "enable_function",
          "content": "\"enable_external_apis\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_webhooks\": False,",
          "file": "config/safe_config.py",
          "line": 143,
          "pattern": "enable_function",
          "content": "\"enable_webhooks\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_remote_commands\": False,",
          "file": "config/safe_config.py",
          "line": 144,
          "pattern": "enable_function",
          "content": "\"enable_remote_commands\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file_operations\": False,",
          "file": "config/safe_config.py",
          "line": 149,
          "pattern": "enable_function",
          "content": "\"enable_file_operations\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_backups\": False,",
          "file": "config/safe_config.py",
          "line": 151,
          "pattern": "enable_function",
          "content": "\"enable_backups\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cleanup\": False,",
          "file": "config/safe_config.py",
          "line": 152,
          "pattern": "enable_function",
          "content": "\"enable_cleanup\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_temp_files\": False,",
          "file": "config/safe_config.py",
          "line": 153,
          "pattern": "enable_function",
          "content": "\"enable_temp_files\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_destructive_operations\": (",
          "file": "config/safe_config.py",
          "line": 184,
          "pattern": "enable_function",
          "content": "\"enable_destructive_operations\": (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_destructive_operations",
          "file": "config/safe_config.py",
          "line": 185,
          "pattern": "enable_function",
          "content": "self.enable_destructive_operations",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file_operations\": self.enable_file_operations,",
          "file": "config/safe_config.py",
          "line": 187,
          "pattern": "enable_function",
          "content": "\"enable_file_operations\": self.enable_file_operations,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_system_commands\": self.enable_system_commands,",
          "file": "config/safe_config.py",
          "line": 188,
          "pattern": "enable_function",
          "content": "\"enable_system_commands\": self.enable_system_commands,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_operations\": self.enable_network_operations,",
          "file": "config/safe_config.py",
          "line": 189,
          "pattern": "enable_function",
          "content": "\"enable_network_operations\": self.enable_network_operations,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "your_email@gmail.com",
          "file": "config/replacement_components_config.py",
          "line": 20,
          "pattern": "function_name",
          "content": "EMAIL_USERNAME = \"your_email@gmail.com\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
          "file": "sfm_tools_backup/sfm_analyzer.py",
          "line": 67,
          "pattern": "enable_function",
          "content": "auto_enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions': auto_enable_count,",
          "file": "sfm_tools_backup/sfm_analyzer.py",
          "line": 91,
          "pattern": "enable_function",
          "content": "'auto_enable_functions': auto_enable_count,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
          "file": "sfm_tools_backup/sfm_analyzer.py",
          "line": 147,
          "pattern": "enable_function",
          "content": "print(f\"🔄 Автоматически включаемые: {stats['auto_enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
          "file": "sfm_tools_backup/sfm_analyzer.py",
          "line": 229,
          "pattern": "enable_function",
          "content": "writer.writerow(['Автоматически включаемые', stats['auto_enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_docker_monitoring\": True,",
          "file": "architecture/real_time_visualizer.py",
          "line": 81,
          "pattern": "enable_function",
          "content": "\"enable_docker_monitoring\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_process_monitoring\": True,",
          "file": "architecture/real_time_visualizer.py",
          "line": 82,
          "pattern": "enable_function",
          "content": "\"enable_process_monitoring\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_monitoring\": True",
          "file": "architecture/real_time_visualizer.py",
          "line": 83,
          "pattern": "enable_function",
          "content": "\"enable_network_monitoring\": True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "ALADDIN-Security-System",
          "file": "cloud/cloud_migration_manager.py",
          "line": 167,
          "pattern": "function_name",
          "content": "StackName='ALADDIN-Security-System',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "static",
          "file": "api_docs/secure_api_docs.py",
          "line": 145,
          "pattern": "function_name",
          "content": "app.mount(\"/static\", StaticFiles(directory=\"api_docs/static\"), name=\"static\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_console = config.get(",
          "file": "core_backup_20250901_195742/logging_module.py",
          "line": 88,
          "pattern": "enable_function",
          "content": "self.enable_console = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console\", True) if config else True",
          "file": "core_backup_20250901_195742/logging_module.py",
          "line": 89,
          "pattern": "enable_function",
          "content": "\"enable_console\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
          "file": "core_backup_20250901_195742/logging_module.py",
          "line": 90,
          "pattern": "enable_function",
          "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console:",
          "file": "core_backup_20250901_195742/logging_module.py",
          "line": 165,
          "pattern": "enable_function",
          "content": "if self.enable_console:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file:",
          "file": "core_backup_20250901_195742/logging_module.py",
          "line": 173,
          "pattern": "enable_function",
          "content": "if self.enable_file:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console = config.get(",
          "file": "core_backup_20250901_205100_before_restart/logging_module.py",
          "line": 88,
          "pattern": "enable_function",
          "content": "self.enable_console = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console\", True) if config else True",
          "file": "core_backup_20250901_205100_before_restart/logging_module.py",
          "line": 89,
          "pattern": "enable_function",
          "content": "\"enable_console\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
          "file": "core_backup_20250901_205100_before_restart/logging_module.py",
          "line": 90,
          "pattern": "enable_function",
          "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console:",
          "file": "core_backup_20250901_205100_before_restart/logging_module.py",
          "line": 165,
          "pattern": "enable_function",
          "content": "if self.enable_console:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file:",
          "file": "core_backup_20250901_205100_before_restart/logging_module.py",
          "line": 173,
          "pattern": "enable_function",
          "content": "if self.enable_file:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        }
      ],
      "SECURITY": [
        {
          "function_id": "ComprehensiveTestManager",
          "file": "test_security_monitoring_comprehensive.py",
          "line": 97,
          "pattern": "function_name",
          "content": "name=\"ComprehensiveTestManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TestManager",
          "file": "test_security_monitoring_classes.py",
          "line": 78,
          "pattern": "function_name",
          "content": "name=\"TestManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_real_time\": True",
          "file": "test_security_analytics_comprehensive.py",
          "line": 121,
          "pattern": "enable_function",
          "content": "\"enable_real_time\": True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Test Metric",
          "file": "test_security_analytics_comprehensive.py",
          "line": 136,
          "pattern": "function_name",
          "content": "name=\"Test Metric\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_real_time\": True,",
          "file": "test_security_analytics_comprehensive.py",
          "line": 196,
          "pattern": "enable_function",
          "content": "\"enable_real_time\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "FinalTestManager",
          "file": "test_security_monitoring_final.py",
          "line": 107,
          "pattern": "function_name",
          "content": "name=\"FinalTestManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TestManager",
          "file": "test_security_monitoring_improvements.py",
          "line": 94,
          "pattern": "function_name",
          "content": "name=\"TestManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TestManager",
          "file": "test_security_monitoring_methods.py",
          "line": 89,
          "pattern": "function_name",
          "content": "name=\"TestManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_priority_queue: bool = True,",
          "file": "security/thread_pool_manager.py",
          "line": 46,
          "pattern": "enable_function",
          "content": "enable_priority_queue: bool = True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_priority_queue: Включить очередь с приоритетами",
          "file": "security/thread_pool_manager.py",
          "line": 54,
          "pattern": "enable_function",
          "content": "enable_priority_queue: Включить очередь с приоритетами",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_priority_queue = enable_priority_queue",
          "file": "security/thread_pool_manager.py",
          "line": 58,
          "pattern": "enable_function",
          "content": "self.enable_priority_queue = enable_priority_queue",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_priority_queue:",
          "file": "security/thread_pool_manager.py",
          "line": 84,
          "pattern": "enable_function",
          "content": "if enable_priority_queue:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_priority_queue,",
          "file": "security/thread_pool_manager.py",
          "line": 234,
          "pattern": "enable_function",
          "content": "\"queue_enabled\": self.enable_priority_queue,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "database_password",
          "file": "security/secrets_manager.py",
          "line": 1067,
          "pattern": "function_name",
          "content": "name=\"database_password\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SecurityReporting",
          "file": "security/security_reporting.py",
          "line": 32,
          "pattern": "function_name",
          "content": "self.name = \"SecurityReporting\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_wrappers = False",
          "file": "security/minimal_security_integration.py",
          "line": 29,
          "pattern": "enable_function",
          "content": "self.enable_wrappers = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_wrappers\": self.enable_wrappers,",
          "file": "security/minimal_security_integration.py",
          "line": 204,
          "pattern": "enable_function",
          "content": "\"enable_wrappers\": self.enable_wrappers,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Test Rule",
          "file": "security/test_smart_monitoring_methods.py",
          "line": 49,
          "pattern": "function_name",
          "content": "name=\"Test Rule\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_metric",
          "file": "security/test_smart_monitoring_methods.py",
          "line": 50,
          "pattern": "function_name",
          "content": "metric_name=\"test_metric\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SecurityMonitoring",
          "file": "security/security_monitoring.py",
          "line": 31,
          "pattern": "function_name",
          "content": "self.name = \"SecurityMonitoring\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ransomware_protection.py",
          "line": 144,
          "pattern": "function_name",
          "content": "f\"RansomwareSignature(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "WannaCry",
          "file": "security/ransomware_protection.py",
          "line": 440,
          "pattern": "function_name",
          "content": "name=\"WannaCry\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Locky",
          "file": "security/ransomware_protection.py",
          "line": 455,
          "pattern": "function_name",
          "content": "name=\"Locky\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "CryptoLocker",
          "file": "security/ransomware_protection.py",
          "line": 462,
          "pattern": "function_name",
          "content": "name=\"CryptoLocker\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Cerber",
          "file": "security/ransomware_protection.py",
          "line": 475,
          "pattern": "function_name",
          "content": "name=\"Cerber\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "GenericRansomware",
          "file": "security/ransomware_protection.py",
          "line": 482,
          "pattern": "function_name",
          "content": "name=\"GenericRansomware\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_continuous_audit = config.get(\"enable_continuous_audit\", True) if config else True",
          "file": "security/security_audit.py",
          "line": 231,
          "pattern": "enable_function",
          "content": "self.enable_continuous_audit = config.get(\"enable_continuous_audit\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_continuous_audit:",
          "file": "security/security_audit.py",
          "line": 257,
          "pattern": "enable_function",
          "content": "if self.enable_continuous_audit:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_continuous_audit = False",
          "file": "security/security_audit.py",
          "line": 768,
          "pattern": "enable_function",
          "content": "self.enable_continuous_audit = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/zero_trust_manager.py",
          "line": 193,
          "pattern": "function_name",
          "content": "f\"SecurityPolicy(id='{self.policy_id}', name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Критические ресурсы",
          "file": "security/zero_trust_manager.py",
          "line": 252,
          "pattern": "function_name",
          "content": "name=\"Критические ресурсы\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Чувствительные данные",
          "file": "security/zero_trust_manager.py",
          "line": 265,
          "pattern": "function_name",
          "content": "name=\"Чувствительные данные\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Общий доступ",
          "file": "security/zero_trust_manager.py",
          "line": 274,
          "pattern": "function_name",
          "content": "name=\"Общий доступ\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "admin",
          "file": "security/zero_trust_manager.py",
          "line": 950,
          "pattern": "function_name",
          "content": "username=\"admin\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_zero_trust\": True,",
          "file": "security/unified_security_orchestrator.py",
          "line": 58,
          "pattern": "enable_function",
          "content": "\"enable_zero_trust\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_load_balancing\": True,",
          "file": "security/unified_security_orchestrator.py",
          "line": 59,
          "pattern": "enable_function",
          "content": "\"enable_load_balancing\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_scaling\": True,",
          "file": "security/unified_security_orchestrator.py",
          "line": 60,
          "pattern": "enable_function",
          "content": "\"enable_auto_scaling\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaking\": True,",
          "file": "security/unified_security_orchestrator.py",
          "line": 61,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaking\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_service_mesh\": True,",
          "file": "security/unified_security_orchestrator.py",
          "line": 62,
          "pattern": "enable_function",
          "content": "\"enable_service_mesh\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_zero_trust\"]",
          "file": "security/unified_security_orchestrator.py",
          "line": 155,
          "pattern": "enable_function",
          "content": "self.integration_config[\"enable_zero_trust\"]",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaking\"]:",
          "file": "security/unified_security_orchestrator.py",
          "line": 171,
          "pattern": "enable_function",
          "content": "if self.integration_config[\"enable_circuit_breaking\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_load_balancing\"]:",
          "file": "security/unified_security_orchestrator.py",
          "line": 179,
          "pattern": "enable_function",
          "content": "if self.integration_config[\"enable_load_balancing\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_scaling\"]:",
          "file": "security/unified_security_orchestrator.py",
          "line": 188,
          "pattern": "enable_function",
          "content": "if self.integration_config[\"enable_auto_scaling\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_mfa(self, user_id: str, mfa_type: MFAType) -> Dict[str, Any]:",
          "file": "security/mfa_service.py",
          "line": 119,
          "pattern": "enable_function",
          "content": "def enable_mfa(self, user_id: str, mfa_type: MFAType) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_totp(user_id)",
          "file": "security/mfa_service.py",
          "line": 132,
          "pattern": "enable_function",
          "content": "return self._enable_totp(user_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sms(user_id)",
          "file": "security/mfa_service.py",
          "line": 134,
          "pattern": "enable_function",
          "content": "return self._enable_sms(user_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_email(user_id)",
          "file": "security/mfa_service.py",
          "line": 136,
          "pattern": "enable_function",
          "content": "return self._enable_email(user_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_totp(self, user_id: str) -> Dict[str, Any]:",
          "file": "security/mfa_service.py",
          "line": 148,
          "pattern": "enable_function",
          "content": "def _enable_totp(self, user_id: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sms(self, user_id: str) -> Dict[str, Any]:",
          "file": "security/mfa_service.py",
          "line": 182,
          "pattern": "enable_function",
          "content": "def _enable_sms(self, user_id: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_email(self, user_id: str) -> Dict[str, Any]:",
          "file": "security/mfa_service.py",
          "line": 198,
          "pattern": "enable_function",
          "content": "def _enable_email(self, user_id: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_mfa(self, user_id: str) -> Dict[str, Any]:",
          "file": "security/mfa_service.py",
          "line": 424,
          "pattern": "disable_function",
          "content": "def disable_mfa(self, user_id: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN Security",
          "file": "security/mfa_service.py",
          "line": 478,
          "pattern": "function_name",
          "content": "name=user_id, issuer_name=\"ALADDIN Security\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_mfa(user_id, MFAType.TOTP)",
          "file": "security/mfa_service.py",
          "line": 618,
          "pattern": "enable_function",
          "content": "result = mfa_service.enable_mfa(user_id, MFAType.TOTP)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "critical_security_threat",
          "file": "security/advanced_alerting_system.py",
          "line": 145,
          "pattern": "function_name",
          "content": "name=\"critical_security_threat\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "high_cpu_usage",
          "file": "security/advanced_alerting_system.py",
          "line": 160,
          "pattern": "function_name",
          "content": "name=\"high_cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "low_memory",
          "file": "security/advanced_alerting_system.py",
          "line": 170,
          "pattern": "function_name",
          "content": "name=\"low_memory\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "system_errors",
          "file": "security/advanced_alerting_system.py",
          "line": 180,
          "pattern": "function_name",
          "content": "name=\"system_errors\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "compliance_violation",
          "file": "security/advanced_alerting_system.py",
          "line": 194,
          "pattern": "function_name",
          "content": "name=\"compliance_violation\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "suspicious_user_activity",
          "file": "security/advanced_alerting_system.py",
          "line": 204,
          "pattern": "function_name",
          "content": "name=\"suspicious_user_activity\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "backup_failure",
          "file": "security/advanced_alerting_system.py",
          "line": 214,
          "pattern": "function_name",
          "content": "name=\"backup_failure\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "integration_failure",
          "file": "security/advanced_alerting_system.py",
          "line": 224,
          "pattern": "function_name",
          "content": "name=\"integration_failure\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SecurityMonitoring",
          "file": "security/security_monitoring_original_backup_20250930_230904.py",
          "line": 31,
          "pattern": "function_name",
          "content": "self.name = \"SecurityMonitoring\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TestSecurityFunction",
          "file": "security/test_security_function.py",
          "line": 10,
          "pattern": "function_name",
          "content": "self.name = \"TestSecurityFunction\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_update = (",
          "file": "security/threat_intelligence.py",
          "line": 159,
          "pattern": "enable_function",
          "content": "self.enable_auto_update = (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_update\", True) if config else True",
          "file": "security/threat_intelligence.py",
          "line": 160,
          "pattern": "enable_function",
          "content": "config.get(\"enable_auto_update\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_update:",
          "file": "security/threat_intelligence.py",
          "line": 195,
          "pattern": "enable_function",
          "content": "if self.enable_auto_update:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_update = False",
          "file": "security/threat_intelligence.py",
          "line": 879,
          "pattern": "enable_function",
          "content": "self.enable_auto_update = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "High CPU Usage",
          "file": "security/smart_monitoring.py",
          "line": 27,
          "pattern": "function_name",
          "content": "name=\"High CPU Usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_usage",
          "file": "security/smart_monitoring.py",
          "line": 28,
          "pattern": "function_name",
          "content": "metric_name=\"cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_debug\",",
          "file": "security/smart_monitoring.py",
          "line": 270,
          "pattern": "enable_function",
          "content": "\"enable_debug\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_validation\",",
          "file": "security/smart_monitoring.py",
          "line": 271,
          "pattern": "enable_function",
          "content": "\"enable_validation\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug: Включение отладочного режима",
          "file": "security/smart_monitoring.py",
          "line": 313,
          "pattern": "enable_function",
          "content": "enable_debug: Включение отладочного режима",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_validation: Включение валидации",
          "file": "security/smart_monitoring.py",
          "line": 314,
          "pattern": "enable_function",
          "content": "enable_validation: Включение валидации",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug: bool = False",
          "file": "security/smart_monitoring.py",
          "line": 380,
          "pattern": "enable_function",
          "content": "self.enable_debug: bool = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_validation: bool = True",
          "file": "security/smart_monitoring.py",
          "line": 383,
          "pattern": "enable_function",
          "content": "self.enable_validation: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/smart_monitoring.py",
          "line": 404,
          "pattern": "function_name",
          "content": "f\"SmartMonitoringSystem(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_debug\": self.enable_debug,",
          "file": "security/smart_monitoring.py",
          "line": 1084,
          "pattern": "enable_function",
          "content": "\"enable_debug\": self.enable_debug,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_validation\": self.enable_validation,",
          "file": "security/smart_monitoring.py",
          "line": 1085,
          "pattern": "enable_function",
          "content": "\"enable_validation\": self.enable_validation,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug or level in [\"ERROR\", \"CRITICAL\"]:",
          "file": "security/smart_monitoring.py",
          "line": 2316,
          "pattern": "enable_function",
          "content": "if self.enable_debug or level in [\"ERROR\", \"CRITICAL\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug: bool = False,",
          "file": "security/smart_monitoring.py",
          "line": 2401,
          "pattern": "enable_function",
          "content": "enable_debug: bool = False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug: Включить отладочный вывод",
          "file": "security/smart_monitoring.py",
          "line": 2410,
          "pattern": "enable_function",
          "content": "enable_debug: Включить отладочный вывод",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug = enable_debug",
          "file": "security/smart_monitoring.py",
          "line": 2431,
          "pattern": "enable_function",
          "content": "self.enable_debug = enable_debug",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug=enable_debug,",
          "file": "security/smart_monitoring.py",
          "line": 2438,
          "pattern": "enable_function",
          "content": "enable_debug=enable_debug,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_debug = settings.get(\"enable_debug\", self.enable_debug)",
          "file": "security/smart_monitoring.py",
          "line": 3167,
          "pattern": "enable_function",
          "content": "self.enable_debug = settings.get(\"enable_debug\", self.enable_debug)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_validation = settings.get(",
          "file": "security/smart_monitoring.py",
          "line": 3168,
          "pattern": "enable_function",
          "content": "self.enable_validation = settings.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_validation\", self.enable_validation",
          "file": "security/smart_monitoring.py",
          "line": 3169,
          "pattern": "enable_function",
          "content": "\"enable_validation\", self.enable_validation",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "High Memory Usage",
          "file": "security/smart_monitoring.py",
          "line": 3217,
          "pattern": "function_name",
          "content": "name=\"High Memory Usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "memory_usage",
          "file": "security/smart_monitoring.py",
          "line": 3218,
          "pattern": "function_name",
          "content": "metric_name=\"memory_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Low Disk Space",
          "file": "security/smart_monitoring.py",
          "line": 3228,
          "pattern": "function_name",
          "content": "name=\"Low Disk Space\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disk_usage",
          "file": "security/smart_monitoring.py",
          "line": 3229,
          "pattern": "function_name",
          "content": "metric_name=\"disk_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "High Error Rate",
          "file": "security/smart_monitoring.py",
          "line": 3239,
          "pattern": "function_name",
          "content": "name=\"High Error Rate\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "error_rate",
          "file": "security/smart_monitoring.py",
          "line": 3240,
          "pattern": "function_name",
          "content": "metric_name=\"error_rate\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_policy_enforcement = config.get(\"enable_policy_enforcement\", True) if config else True",
          "file": "security/security_policy.py",
          "line": 293,
          "pattern": "enable_function",
          "content": "self.enable_policy_enforcement = config.get(\"enable_policy_enforcement\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Базовая политика паролей",
          "file": "security/security_policy.py",
          "line": 410,
          "pattern": "function_name",
          "content": "name=\"Базовая политика паролей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Минимальная длина пароля",
          "file": "security/security_policy.py",
          "line": 418,
          "pattern": "function_name",
          "content": "name=\"Минимальная длина пароля\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сложность пароля",
          "file": "security/security_policy.py",
          "line": 427,
          "pattern": "function_name",
          "content": "name=\"Сложность пароля\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Базовая политика доступа",
          "file": "security/security_policy.py",
          "line": 450,
          "pattern": "function_name",
          "content": "name=\"Базовая политика доступа\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Требование аутентификации",
          "file": "security/security_policy.py",
          "line": 457,
          "pattern": "function_name",
          "content": "name=\"Требование аутентификации\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_policy_enforcement = False",
          "file": "security/security_policy.py",
          "line": 793,
          "pattern": "enable_function",
          "content": "self.enable_policy_enforcement = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/circuit_breaker.py",
          "line": 91,
          "pattern": "function_name",
          "content": "f\"SmartCircuitBreaker(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_real_time = config.get(\"enable_real_time\", True) if config else True",
          "file": "security/safe_security_monitoring.py",
          "line": 137,
          "pattern": "enable_function",
          "content": "self.enable_real_time = config.get(\"enable_real_time\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time:",
          "file": "security/safe_security_monitoring.py",
          "line": 177,
          "pattern": "enable_function",
          "content": "if self.enable_real_time:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time,",
          "file": "security/safe_security_monitoring.py",
          "line": 405,
          "pattern": "enable_function",
          "content": "\"monitoring_enabled\": self.enable_real_time,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management = config.get(\"enable_auto_management\", False) if config else False",
          "file": "security/safe_function_manager.py",
          "line": 217,
          "pattern": "enable_function",
          "content": "self.enable_auto_management = config.get(\"enable_auto_management\", False) if config else False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sleep_mode = config.get(\"enable_sleep_mode\", False) if config else False",
          "file": "security/safe_function_manager.py",
          "line": 221,
          "pattern": "enable_function",
          "content": "self.enable_sleep_mode = config.get(\"enable_sleep_mode\", False) if config else False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management:",
          "file": "security/safe_function_manager.py",
          "line": 358,
          "pattern": "enable_function",
          "content": "if self.enable_auto_management:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sleep_mode and self.auto_sleep_enabled:",
          "file": "security/safe_function_manager.py",
          "line": 362,
          "pattern": "enable_function",
          "content": "if self.enable_sleep_mode and self.auto_sleep_enabled:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\": True,",
          "file": "security/safe_function_manager.py",
          "line": 432,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaker\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_load_balancing\": True,",
          "file": "security/safe_function_manager.py",
          "line": 433,
          "pattern": "enable_function",
          "content": "\"enable_load_balancing\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_health_checks\": True,",
          "file": "security/safe_function_manager.py",
          "line": 434,
          "pattern": "enable_function",
          "content": "\"enable_health_checks\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics\": True,",
          "file": "security/safe_function_manager.py",
          "line": 435,
          "pattern": "enable_function",
          "content": "\"enable_metrics\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_caching\": True,",
          "file": "security/safe_function_manager.py",
          "line": 436,
          "pattern": "enable_function",
          "content": "\"enable_caching\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_async\": True,",
          "file": "security/safe_function_manager.py",
          "line": 437,
          "pattern": "enable_function",
          "content": "\"enable_async\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_prometheus\": True,",
          "file": "security/safe_function_manager.py",
          "line": 438,
          "pattern": "enable_function",
          "content": "\"enable_prometheus\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_redis\": self.redis_enabled,",
          "file": "security/safe_function_manager.py",
          "line": 439,
          "pattern": "enable_function",
          "content": "\"enable_redis\": self.redis_enabled,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Safe Function Manager",
          "file": "security/safe_function_manager.py",
          "line": 489,
          "pattern": "function_name",
          "content": "name=\"Safe Function Manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function(func_data[\"function_id\"])",
          "file": "security/safe_function_manager.py",
          "line": 768,
          "pattern": "enable_function",
          "content": "self.enable_function(func_data[\"function_id\"])",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function(function.function_id)",
          "file": "security/safe_function_manager.py",
          "line": 794,
          "pattern": "enable_function",
          "content": "self.enable_function(function.function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function(function_id)",
          "file": "security/safe_function_manager.py",
          "line": 878,
          "pattern": "enable_function",
          "content": "self.enable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function(function_id)",
          "file": "security/safe_function_manager.py",
          "line": 914,
          "pattern": "disable_function",
          "content": "self.disable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function(self, function_id: str) -> bool:",
          "file": "security/safe_function_manager.py",
          "line": 936,
          "pattern": "enable_function",
          "content": "def enable_function(self, function_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function(self, function_id: str) -> bool:",
          "file": "security/safe_function_manager.py",
          "line": 976,
          "pattern": "disable_function",
          "content": "def disable_function(self, function_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "sfm_critical_sleeping_count",
          "file": "security/safe_function_manager.py",
          "line": 1548,
          "pattern": "function_name",
          "content": "metric_name=\"sfm_critical_sleeping_count\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SleepManagementWorker",
          "file": "security/safe_function_manager.py",
          "line": 1763,
          "pattern": "function_name",
          "content": "target=self._sleep_management_worker, name=\"SleepManagementWorker\", daemon=True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sfm_sleeping_functions_count",
          "file": "security/safe_function_manager.py",
          "line": 1813,
          "pattern": "function_name",
          "content": "metric_name=\"sfm_sleeping_functions_count\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_sleep_mode: bool = None,",
          "file": "security/safe_function_manager.py",
          "line": 1846,
          "pattern": "enable_function",
          "content": "enable_sleep_mode: bool = None,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sleep_mode is not None:",
          "file": "security/safe_function_manager.py",
          "line": 1855,
          "pattern": "enable_function",
          "content": "if enable_sleep_mode is not None:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sleep_mode = enable_sleep_mode",
          "file": "security/safe_function_manager.py",
          "line": 1856,
          "pattern": "enable_function",
          "content": "self.enable_sleep_mode = enable_sleep_mode",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Critical Functions Sleeping",
          "file": "security/safe_function_manager.py",
          "line": 1939,
          "pattern": "function_name",
          "content": "name=\"Critical Functions Sleeping\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "High Sleeping Functions Count",
          "file": "security/safe_function_manager.py",
          "line": 1951,
          "pattern": "function_name",
          "content": "name=\"High Sleeping Functions Count\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Sleep Management Errors",
          "file": "security/safe_function_manager.py",
          "line": 1963,
          "pattern": "function_name",
          "content": "name=\"Sleep Management Errors\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sfm_sleep_errors_count",
          "file": "security/safe_function_manager.py",
          "line": 1964,
          "pattern": "function_name",
          "content": "metric_name=\"sfm_sleep_errors_count\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Critical Functions Sleeping Security Alert",
          "file": "security/safe_function_manager.py",
          "line": 2327,
          "pattern": "function_name",
          "content": "name=\"Critical Functions Sleeping Security Alert\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Mass Sleep Transition Security Alert",
          "file": "security/safe_function_manager.py",
          "line": 2341,
          "pattern": "function_name",
          "content": "name=\"Mass Sleep Transition Security Alert\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Sleep Management Errors Security Alert",
          "file": "security/safe_function_manager.py",
          "line": 2355,
          "pattern": "function_name",
          "content": "name=\"Sleep Management Errors Security Alert\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SFM Performance Security Alert",
          "file": "security/safe_function_manager.py",
          "line": 2369,
          "pattern": "function_name",
          "content": "name=\"SFM Performance Security Alert\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_service_mesh(self) -> bool:",
          "file": "security/safe_function_manager.py",
          "line": 3217,
          "pattern": "enable_function",
          "content": "def enable_service_mesh(self) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_service_mesh(self) -> bool:",
          "file": "security/safe_function_manager.py",
          "line": 3238,
          "pattern": "disable_function",
          "content": "def disable_service_mesh(self) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "Масштабирование по активным функциям",
          "file": "security/safe_function_manager.py",
          "line": 3440,
          "pattern": "function_name",
          "content": "name=\"Масштабирование по активным функциям\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_usage",
          "file": "security/safe_function_manager.py",
          "line": 3442,
          "pattern": "function_name",
          "content": "metric_name=\"cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Масштабирование по ошибкам",
          "file": "security/safe_function_manager.py",
          "line": 3455,
          "pattern": "function_name",
          "content": "name=\"Масштабирование по ошибкам\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "error_rate",
          "file": "security/safe_function_manager.py",
          "line": 3457,
          "pattern": "function_name",
          "content": "metric_name=\"error_rate\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Подозрительный исполняемый файл",
          "file": "security/threat_detection.py",
          "line": 269,
          "pattern": "function_name",
          "content": "name=\"Подозрительный исполняемый файл\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Подозрительная ссылка",
          "file": "security/threat_detection.py",
          "line": 279,
          "pattern": "function_name",
          "content": "name=\"Подозрительная ссылка\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Аномальный трафик",
          "file": "security/threat_detection.py",
          "line": 289,
          "pattern": "function_name",
          "content": "name=\"Аномальный трафик\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "RussianAPIManager",
          "file": "security/russian_api_manager.py",
          "line": 79,
          "pattern": "function_name",
          "content": "self.logger = LoggingManager(name=\"RussianAPIManager\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_compression = config.get(\"enable_compression\", True) if config else True",
          "file": "security/smart_data_manager.py",
          "line": 60,
          "pattern": "enable_function",
          "content": "self.enable_compression = config.get(\"enable_compression\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_archiving = config.get(\"enable_archiving\", True) if config else True",
          "file": "security/smart_data_manager.py",
          "line": 61,
          "pattern": "enable_function",
          "content": "self.enable_archiving = config.get(\"enable_archiving\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_archiving:",
          "file": "security/smart_data_manager.py",
          "line": 298,
          "pattern": "enable_function",
          "content": "if not self.enable_archiving:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_compression\": self.enable_compression,",
          "file": "security/smart_data_manager.py",
          "line": 404,
          "pattern": "enable_function",
          "content": "\"enable_compression\": self.enable_compression,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_archiving\": self.enable_archiving,",
          "file": "security/smart_data_manager.py",
          "line": 405,
          "pattern": "enable_function",
          "content": "\"enable_archiving\": self.enable_archiving,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management = config.get(",
          "file": "security/safe_function_manager_fixed.py",
          "line": 94,
          "pattern": "enable_function",
          "content": "self.enable_auto_management = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management\", True) if config else True",
          "file": "security/safe_function_manager_fixed.py",
          "line": 95,
          "pattern": "enable_function",
          "content": "\"enable_auto_management\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management:",
          "file": "security/safe_function_manager_fixed.py",
          "line": 132,
          "pattern": "enable_function",
          "content": "if self.enable_auto_management:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function(function.function_id)",
          "file": "security/safe_function_manager_fixed.py",
          "line": 252,
          "pattern": "enable_function",
          "content": "self.enable_function(function.function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function(function_id)",
          "file": "security/safe_function_manager_fixed.py",
          "line": 307,
          "pattern": "enable_function",
          "content": "self.enable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function(function_id)",
          "file": "security/safe_function_manager_fixed.py",
          "line": 342,
          "pattern": "disable_function",
          "content": "self.disable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function(self, function_id: str) -> bool:",
          "file": "security/safe_function_manager_fixed.py",
          "line": 363,
          "pattern": "enable_function",
          "content": "def enable_function(self, function_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function(self, function_id: str) -> bool:",
          "file": "security/safe_function_manager_fixed.py",
          "line": 403,
          "pattern": "disable_function",
          "content": "def disable_function(self, function_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "test_function",
          "file": "security/ai_optimization_engine.py",
          "line": 427,
          "pattern": "function_id",
          "content": "function_id=\"test_function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SecurityMonitoring",
          "file": "security/security_monitoring_backup_before_enhancement_20250930_231914.py",
          "line": 31,
          "pattern": "function_name",
          "content": "self.name = \"SecurityMonitoring\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
          "file": "security/security_integration.py",
          "line": 39,
          "pattern": "enable_function",
          "content": "self.enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_wrappers:",
          "file": "security/security_integration.py",
          "line": 56,
          "pattern": "enable_function",
          "content": "if self.enable_wrappers:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_wrappers else \"direct\"),",
          "file": "security/security_integration.py",
          "line": 148,
          "pattern": "enable_function",
          "content": "\"integration_method\": (\"secure_wrapper\" if self.enable_wrappers else \"direct\"),",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_wrappers\": self.enable_wrappers,",
          "file": "security/security_integration.py",
          "line": 342,
          "pattern": "enable_function",
          "content": "\"enable_wrappers\": self.enable_wrappers,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "test_api_key",
          "file": "security/secrets_api.py",
          "line": 893,
          "pattern": "function_name",
          "content": "name=\"test_api_key\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мобильная безопасность",
          "file": "security/device_security_original_backup_20250103.py",
          "line": 318,
          "pattern": "function_name",
          "content": "name=\"Мобильная безопасность\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Безопасность рабочего стола",
          "file": "security/device_security_original_backup_20250103.py",
          "line": 335,
          "pattern": "function_name",
          "content": "name=\"Безопасность рабочего стола\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "AdvancedMonitoringManager",
          "file": "security/advanced_monitoring_manager.py",
          "line": 133,
          "pattern": "function_name",
          "content": "self.logger = LoggingManager(name=\"AdvancedMonitoringManager\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Высокая загрузка CPU",
          "file": "security/advanced_monitoring_manager.py",
          "line": 194,
          "pattern": "function_name",
          "content": "name=\"Высокая загрузка CPU\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "system.cpu_percent",
          "file": "security/advanced_monitoring_manager.py",
          "line": 195,
          "pattern": "function_name",
          "content": "metric_name=\"system.cpu_percent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Высокое использование памяти",
          "file": "security/advanced_monitoring_manager.py",
          "line": 202,
          "pattern": "function_name",
          "content": "name=\"Высокое использование памяти\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "system.memory_percent",
          "file": "security/advanced_monitoring_manager.py",
          "line": 203,
          "pattern": "function_name",
          "content": "metric_name=\"system.memory_percent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мало места на диске",
          "file": "security/advanced_monitoring_manager.py",
          "line": 210,
          "pattern": "function_name",
          "content": "name=\"Мало места на диске\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "system.disk_percent",
          "file": "security/advanced_monitoring_manager.py",
          "line": 211,
          "pattern": "function_name",
          "content": "metric_name=\"system.disk_percent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Много неудачных входов",
          "file": "security/advanced_monitoring_manager.py",
          "line": 219,
          "pattern": "function_name",
          "content": "name=\"Много неудачных входов\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "security.failed_logins",
          "file": "security/advanced_monitoring_manager.py",
          "line": 220,
          "pattern": "function_name",
          "content": "metric_name=\"security.failed_logins\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Подозрительная активность",
          "file": "security/advanced_monitoring_manager.py",
          "line": 227,
          "pattern": "function_name",
          "content": "name=\"Подозрительная активность\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "security.suspicious_events",
          "file": "security/advanced_monitoring_manager.py",
          "line": 228,
          "pattern": "function_name",
          "content": "metric_name=\"security.suspicious_events\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Высокое время отклика",
          "file": "security/advanced_monitoring_manager.py",
          "line": 236,
          "pattern": "function_name",
          "content": "name=\"Высокое время отклика\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "performance.response_time",
          "file": "security/advanced_monitoring_manager.py",
          "line": 237,
          "pattern": "function_name",
          "content": "metric_name=\"performance.response_time\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ошибки API",
          "file": "security/advanced_monitoring_manager.py",
          "line": 244,
          "pattern": "function_name",
          "content": "name=\"Ошибки API\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "api.error_rate",
          "file": "security/advanced_monitoring_manager.py",
          "line": 245,
          "pattern": "function_name",
          "content": "metric_name=\"api.error_rate\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/advanced_monitoring_manager.py",
          "line": 1329,
          "pattern": "function_name",
          "content": "f\"AdvancedMonitoringManager(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_debug=True)",
          "file": "security/test_enhanced_features.py",
          "line": 141,
          "pattern": "enable_function",
          "content": "result = system.set_logging_config(\"DEBUG\", enable_debug=True)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_protection = config.get(\"enable_real_time_protection\", True) if config else True",
          "file": "security/security_layer.py",
          "line": 85,
          "pattern": "enable_function",
          "content": "self.enable_real_time_protection = config.get(\"enable_real_time_protection\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_protection:",
          "file": "security/security_layer.py",
          "line": 128,
          "pattern": "enable_function",
          "content": "if self.enable_real_time_protection:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_protection,",
          "file": "security/security_layer.py",
          "line": 478,
          "pattern": "enable_function",
          "content": "\"real_time_protection\": self.enable_real_time_protection,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "EnhancedAlertingSystem",
          "file": "security/enhanced_alerting.py",
          "line": 82,
          "pattern": "function_name",
          "content": "self.service_name = \"EnhancedAlertingSystem\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Высокая нагрузка на CPU",
          "file": "security/enhanced_alerting.py",
          "line": 144,
          "pattern": "function_name",
          "content": "name=\"Высокая нагрузка на CPU\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Высокая нагрузка на память",
          "file": "security/enhanced_alerting.py",
          "line": 153,
          "pattern": "function_name",
          "content": "name=\"Высокая нагрузка на память\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Обнаружена угроза безопасности",
          "file": "security/enhanced_alerting.py",
          "line": 166,
          "pattern": "function_name",
          "content": "name=\"Обнаружена угроза безопасности\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Системная ошибка",
          "file": "security/enhanced_alerting.py",
          "line": 179,
          "pattern": "function_name",
          "content": "name=\"Системная ошибка\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мало места на диске",
          "file": "security/enhanced_alerting.py",
          "line": 192,
          "pattern": "function_name",
          "content": "name=\"Мало места на диске\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "lesson_001",
          "file": "security/anonymous_data_manager.py",
          "line": 271,
          "pattern": "id\":",
          "content": "\"id\": \"lesson_001\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "lesson_002",
          "file": "security/anonymous_data_manager.py",
          "line": 278,
          "pattern": "id\":",
          "content": "\"id\": \"lesson_002\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "lesson_003",
          "file": "security/anonymous_data_manager.py",
          "line": 291,
          "pattern": "id\":",
          "content": "\"id\": \"lesson_003\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_001",
          "file": "security/anonymous_data_manager.py",
          "line": 351,
          "pattern": "id\":",
          "content": "\"id\": \"rec_001\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_002",
          "file": "security/anonymous_data_manager.py",
          "line": 358,
          "pattern": "id\":",
          "content": "\"id\": \"rec_002\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_003",
          "file": "security/anonymous_data_manager.py",
          "line": 365,
          "pattern": "id\":",
          "content": "\"id\": \"rec_003\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_004",
          "file": "security/anonymous_data_manager.py",
          "line": 380,
          "pattern": "id\":",
          "content": "\"id\": \"rec_004\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_005",
          "file": "security/anonymous_data_manager.py",
          "line": 391,
          "pattern": "id\":",
          "content": "\"id\": \"rec_005\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/security_monitoring_a_plus.py",
          "line": 633,
          "pattern": "function_name",
          "content": "f\"SecurityMonitoringManager(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
          "file": "security/simple_security_integration.py",
          "line": 42,
          "pattern": "enable_function",
          "content": "self.enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_wrappers:",
          "file": "security/simple_security_integration.py",
          "line": 59,
          "pattern": "enable_function",
          "content": "if self.enable_wrappers:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_protection\": False})",
          "file": "security/simple_security_integration.py",
          "line": 79,
          "pattern": "enable_function",
          "content": "self.security_layer = SecurityLayer(config={\"enable_real_time_protection\": False})",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_audit\": False})",
          "file": "security/simple_security_integration.py",
          "line": 80,
          "pattern": "enable_function",
          "content": "self.audit_system = AuditSystem(config={\"enable_real_time_audit\": False})",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ip_whitelist\": False})",
          "file": "security/simple_security_integration.py",
          "line": 81,
          "pattern": "enable_function",
          "content": "self.access_control = AccessControl(config={\"enable_ip_whitelist\": False})",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_wrappers\": self.enable_wrappers,",
          "file": "security/simple_security_integration.py",
          "line": 257,
          "pattern": "enable_function",
          "content": "\"enable_wrappers\": self.enable_wrappers,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function_with_persistence(self, function_id: str) -> bool:",
          "file": "security/persistence_integrator.py",
          "line": 198,
          "pattern": "enable_function",
          "content": "def enable_function_with_persistence(self, function_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function(function_id)",
          "file": "security/persistence_integrator.py",
          "line": 201,
          "pattern": "enable_function",
          "content": "success = self.sfm.enable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function_with_persistence(self, function_id: str) -> bool:",
          "file": "security/persistence_integrator.py",
          "line": 213,
          "pattern": "disable_function",
          "content": "def disable_function_with_persistence(self, function_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_function(function_id)",
          "file": "security/persistence_integrator.py",
          "line": 216,
          "pattern": "disable_function",
          "content": "success = self.sfm.disable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_mfa (bool): Включение многофакторной аутентификации",
          "file": "security/access_control.py",
          "line": 193,
          "pattern": "enable_function",
          "content": "enable_mfa (bool): Включение многофакторной аутентификации",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ip_whitelist (bool): Включение белого списка IP",
          "file": "security/access_control.py",
          "line": 194,
          "pattern": "enable_function",
          "content": "enable_ip_whitelist (bool): Включение белого списка IP",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ip_whitelist = (",
          "file": "security/access_control.py",
          "line": 228,
          "pattern": "enable_function",
          "content": "self.enable_ip_whitelist = (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ip_whitelist\", True) if config else True",
          "file": "security/access_control.py",
          "line": 229,
          "pattern": "enable_function",
          "content": "config.get(\"enable_ip_whitelist\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_mfa = config.get(\"enable_mfa\", False) if config else False",
          "file": "security/access_control.py",
          "line": 231,
          "pattern": "enable_function",
          "content": "self.enable_mfa = config.get(\"enable_mfa\", False) if config else False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ip_whitelist:",
          "file": "security/access_control.py",
          "line": 444,
          "pattern": "enable_function",
          "content": "if ip_address and self.enable_ip_whitelist:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ip_whitelist\": self.enable_ip_whitelist,",
          "file": "security/access_control.py",
          "line": 886,
          "pattern": "enable_function",
          "content": "\"enable_ip_whitelist\": self.enable_ip_whitelist,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_mfa\": self.enable_mfa,",
          "file": "security/access_control.py",
          "line": 887,
          "pattern": "enable_function",
          "content": "\"enable_mfa\": self.enable_mfa,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "SecurityMonitoring",
          "file": "security/security_monitoring_backup.py",
          "line": 34,
          "pattern": "function_name",
          "content": "self.name = \"SecurityMonitoring\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_real_time_audit = config.get(\"enable_real_time_audit\", True) if config else True",
          "file": "security/audit_system.py",
          "line": 83,
          "pattern": "enable_function",
          "content": "self.enable_real_time_audit = config.get(\"enable_real_time_audit\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_audit:",
          "file": "security/audit_system.py",
          "line": 121,
          "pattern": "enable_function",
          "content": "if self.enable_real_time_audit:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_real_time_audit,",
          "file": "security/audit_system.py",
          "line": 513,
          "pattern": "enable_function",
          "content": "\"real_time_audit\": self.enable_real_time_audit,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption = (",
          "file": "security/data_protection_manager.py",
          "line": 101,
          "pattern": "enable_function",
          "content": "self.enable_encryption = (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption\", True) if config else True",
          "file": "security/data_protection_manager.py",
          "line": 102,
          "pattern": "enable_function",
          "content": "config.get(\"enable_encryption\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Политика персональных данных",
          "file": "security/data_protection_manager.py",
          "line": 157,
          "pattern": "function_name",
          "content": "name=\"Политика персональных данных\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Политика финансовых данных",
          "file": "security/data_protection_manager.py",
          "line": 169,
          "pattern": "function_name",
          "content": "name=\"Политика финансовых данных\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_encryption:",
          "file": "security/data_protection_manager.py",
          "line": 180,
          "pattern": "enable_function",
          "content": "if not self.enable_encryption:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption",
          "file": "security/data_protection_manager.py",
          "line": 239,
          "pattern": "enable_function",
          "content": "if self.enable_encryption",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption,",
          "file": "security/data_protection_manager.py",
          "line": 251,
          "pattern": "enable_function",
          "content": "is_encrypted=self.enable_encryption,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management = config\\.get\\(\\'enable_auto_management\\', True\\) \"",
          "file": "security/safe_function_manager_patch.py",
          "line": 19,
          "pattern": "enable_function",
          "content": "r\"(self\\.enable_auto_management = config\\.get\\(\\'enable_auto_management\\', True\\) \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence = config.get(\"enable_persistence\", True) '",
          "file": "security/safe_function_manager_patch.py",
          "line": 24,
          "pattern": "enable_function",
          "content": "r'self.enable_persistence = config.get(\"enable_persistence\", True) '",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence:\\n            self.load_functions()\",",
          "file": "security/safe_function_manager_patch.py",
          "line": 33,
          "pattern": "enable_function",
          "content": "r\"if self.enable_persistence:\\n            self.load_functions()\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function\\(function_id\\))\",",
          "file": "security/safe_function_manager_patch.py",
          "line": 39,
          "pattern": "enable_function",
          "content": "r\"(\\s+# Автоматическое включение если требуется\\s+if auto_enable:\\s+self\\.enable_function\\(function_id\\))\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence:",
          "file": "security/safe_function_manager_patch.py",
          "line": 47,
          "pattern": "enable_function",
          "content": "if self.enable_persistence:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function\\(function\\.function_id\\))\",",
          "file": "security/safe_function_manager_patch.py",
          "line": 56,
          "pattern": "enable_function",
          "content": "r\"self\\.enable_function\\(function\\.function_id\\))\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "CIPipelineManager",
          "file": "security/ci_cd/ci_pipeline_manager.py",
          "line": 221,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"CIPipelineManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Matrix AI",
          "file": "security/config/color_scheme.py",
          "line": 58,
          "pattern": "function_name",
          "content": "name=\"Matrix AI\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Dark Matrix",
          "file": "security/config/color_scheme.py",
          "line": 70,
          "pattern": "function_name",
          "content": "name=\"Dark Matrix\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Light Matrix",
          "file": "security/config/color_scheme.py",
          "line": 82,
          "pattern": "function_name",
          "content": "name=\"Light Matrix\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Elderly Friendly",
          "file": "security/config/color_scheme.py",
          "line": 94,
          "pattern": "function_name",
          "content": "name=\"Elderly Friendly\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Child Friendly",
          "file": "security/config/color_scheme.py",
          "line": 106,
          "pattern": "function_name",
          "content": "name=\"Child Friendly\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SecurityAnalytics",
          "file": "security/reactive/security_analytics.py",
          "line": 117,
          "pattern": "function_name",
          "content": "self.service_name = \"SecurityAnalytics\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ForensicsService",
          "file": "security/reactive/forensics_service.py",
          "line": 133,
          "pattern": "function_name",
          "content": "self.service_name = \"ForensicsService\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/reactive/recovery_service.py",
          "line": 1099,
          "pattern": "function_name",
          "content": "return f\"RecoveryService(name='{self.name}', config={self.config})\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ThreatIntelligence",
          "file": "security/reactive/threat_intelligence.py",
          "line": 122,
          "pattern": "function_name",
          "content": "self.service_name = \"ThreatIntelligence\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_optimization\": True,",
          "file": "security/reactive/performance_optimizer.py",
          "line": 114,
          "pattern": "enable_function",
          "content": "\"enable_auto_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_async_optimization\": True,",
          "file": "security/reactive/performance_optimizer.py",
          "line": 115,
          "pattern": "enable_function",
          "content": "\"enable_async_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_optimization\"]:",
          "file": "security/reactive/performance_optimizer.py",
          "line": 156,
          "pattern": "enable_function",
          "content": "if self.optimization_config[\"enable_auto_optimization\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cpu_affinity()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 466,
          "pattern": "enable_function",
          "content": "self._enable_cpu_affinity()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_memory_compression()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 494,
          "pattern": "enable_function",
          "content": "self._enable_memory_compression()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_disk_compression()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 522,
          "pattern": "enable_function",
          "content": "self._enable_disk_compression()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_compression()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 545,
          "pattern": "enable_function",
          "content": "self._enable_network_compression()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_caching()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 556,
          "pattern": "enable_function",
          "content": "self._enable_network_caching()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_database_caching()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 578,
          "pattern": "enable_function",
          "content": "self._enable_database_caching()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cache_compression()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 606,
          "pattern": "enable_function",
          "content": "self._enable_cache_compression()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_query_parallelization()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 634,
          "pattern": "enable_function",
          "content": "self._enable_query_parallelization()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_connection_reuse()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 657,
          "pattern": "enable_function",
          "content": "self._enable_connection_reuse()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_connection_compression()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 662,
          "pattern": "enable_function",
          "content": "self._enable_connection_compression()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_connection_pooling()",
          "file": "security/reactive/performance_optimizer.py",
          "line": 668,
          "pattern": "enable_function",
          "content": "self._enable_connection_pooling()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cpu_affinity(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 690,
          "pattern": "enable_function",
          "content": "def _enable_cpu_affinity(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_memory_compression(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 710,
          "pattern": "enable_function",
          "content": "def _enable_memory_compression(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_disk_compression(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 730,
          "pattern": "enable_function",
          "content": "def _enable_disk_compression(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_compression(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 745,
          "pattern": "enable_function",
          "content": "def _enable_network_compression(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_caching(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 755,
          "pattern": "enable_function",
          "content": "def _enable_network_caching(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_database_caching(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 770,
          "pattern": "enable_function",
          "content": "def _enable_database_caching(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cache_compression(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 790,
          "pattern": "enable_function",
          "content": "def _enable_cache_compression(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_query_parallelization(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 810,
          "pattern": "enable_function",
          "content": "def _enable_query_parallelization(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_connection_reuse(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 820,
          "pattern": "enable_function",
          "content": "def _enable_connection_reuse(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_connection_compression(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 825,
          "pattern": "enable_function",
          "content": "def _enable_connection_compression(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_connection_pooling(self):",
          "file": "security/reactive/performance_optimizer.py",
          "line": 830,
          "pattern": "enable_function",
          "content": "def _enable_connection_pooling(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Russian Banking Integration",
          "file": "security/integrations/russian_banking_integration.py",
          "line": 75,
          "pattern": "function_name",
          "content": "self.name = \"Russian Banking Integration\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/scaling/auto_scaling_engine.py",
          "line": 281,
          "pattern": "function_name",
          "content": "f\"AutoScalingEngine(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "CPU Scale Up",
          "file": "security/scaling/auto_scaling_engine.py",
          "line": 642,
          "pattern": "function_name",
          "content": "name=\"CPU Scale Up\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_usage",
          "file": "security/scaling/auto_scaling_engine.py",
          "line": 644,
          "pattern": "function_name",
          "content": "metric_name=\"cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "CPU Scale Down",
          "file": "security/scaling/auto_scaling_engine.py",
          "line": 654,
          "pattern": "function_name",
          "content": "name=\"CPU Scale Down\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Memory Scale Up",
          "file": "security/scaling/auto_scaling_engine.py",
          "line": 666,
          "pattern": "function_name",
          "content": "name=\"Memory Scale Up\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "memory_usage",
          "file": "security/scaling/auto_scaling_engine.py",
          "line": 668,
          "pattern": "function_name",
          "content": "metric_name=\"memory_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai/super_ai_support_assistant_improved.py",
          "line": 123,
          "pattern": "function_name",
          "content": "return f\"UserProfile(user_id='{self.user_id}', name='{self.name}', age={self.age})\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SuperAISupportAssistant",
          "file": "security/ai/super_ai_support_assistant_improved.py",
          "line": 478,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"SuperAISupportAssistant\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тестовый Пользователь",
          "file": "security/ai/super_ai_support_assistant_improved.py",
          "line": 1484,
          "pattern": "function_name",
          "content": "name=\"Тестовый Пользователь\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai/super_ai_support_assistant.py",
          "line": 139,
          "pattern": "function_name",
          "content": "f\"UserProfile(user_id='{self.user_id}', name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SuperAISupportAssistant",
          "file": "security/ai/super_ai_support_assistant.py",
          "line": 534,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"SuperAISupportAssistant\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тестовый Пользователь",
          "file": "security/ai/super_ai_support_assistant.py",
          "line": 1547,
          "pattern": "function_name",
          "content": "name=\"Тестовый Пользователь\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/preliminary/context_aware_access.py",
          "line": 192,
          "pattern": "function_name",
          "content": "f\"ContextAwareAccess(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Полный доступ в домашней сети",
          "file": "security/preliminary/context_aware_access.py",
          "line": 270,
          "pattern": "function_name",
          "content": "name=\"Полный доступ в домашней сети\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ограниченный доступ в публичной сети",
          "file": "security/preliminary/context_aware_access.py",
          "line": 287,
          "pattern": "function_name",
          "content": "name=\"Ограниченный доступ в публичной сети\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ограничения в ночные часы",
          "file": "security/preliminary/context_aware_access.py",
          "line": 298,
          "pattern": "function_name",
          "content": "name=\"Ограничения в ночные часы\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка в школьные часы",
          "file": "security/preliminary/context_aware_access.py",
          "line": 312,
          "pattern": "function_name",
          "content": "name=\"Блокировка в школьные часы\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Запрет при высоком риске",
          "file": "security/preliminary/context_aware_access.py",
          "line": 328,
          "pattern": "function_name",
          "content": "name=\"Запрет при высоком риске\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Дополнительная аутентификация при низком доверии",
          "file": "security/preliminary/context_aware_access.py",
          "line": 339,
          "pattern": "function_name",
          "content": "name=\"Дополнительная аутентификация при низком доверии\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_caching = True",
          "file": "security/preliminary/policy_engine.py",
          "line": 172,
          "pattern": "enable_function",
          "content": "self.enable_caching = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_caching,",
          "file": "security/preliminary/policy_engine.py",
          "line": 936,
          "pattern": "enable_function",
          "content": "\"cache_enabled\": self.enable_caching,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Домашняя сеть",
          "file": "security/preliminary/zero_trust_service.py",
          "line": 160,
          "pattern": "function_name",
          "content": "name=\"Домашняя сеть\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Публичная сеть",
          "file": "security/preliminary/zero_trust_service.py",
          "line": 177,
          "pattern": "function_name",
          "content": "name=\"Публичная сеть\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "IoT устройства",
          "file": "security/preliminary/zero_trust_service.py",
          "line": 194,
          "pattern": "function_name",
          "content": "name=\"IoT устройства\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_scaling\": True,",
          "file": "security/orchestration/kubernetes_orchestrator.py",
          "line": 216,
          "pattern": "enable_function",
          "content": "\"enable_auto_scaling\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_health_checks\": True,",
          "file": "security/orchestration/kubernetes_orchestrator.py",
          "line": 217,
          "pattern": "enable_function",
          "content": "\"enable_health_checks\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_resource_monitoring\": True,",
          "file": "security/orchestration/kubernetes_orchestrator.py",
          "line": 218,
          "pattern": "enable_function",
          "content": "\"enable_resource_monitoring\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Реагирование на вредоносное ПО",
          "file": "security/active/incident_response.py",
          "line": 194,
          "pattern": "function_name",
          "content": "name=\"Реагирование на вредоносное ПО\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на вторжение",
          "file": "security/active/incident_response.py",
          "line": 204,
          "pattern": "function_name",
          "content": "name=\"Реагирование на вторжение\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на эксплуатацию детей",
          "file": "security/active/incident_response.py",
          "line": 214,
          "pattern": "function_name",
          "content": "name=\"Реагирование на эксплуатацию детей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на мошенничество с пожилыми",
          "file": "security/active/incident_response.py",
          "line": 225,
          "pattern": "function_name",
          "content": "name=\"Реагирование на мошенничество с пожилыми\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на фишинг",
          "file": "security/active/incident_response.py",
          "line": 236,
          "pattern": "function_name",
          "content": "name=\"Реагирование на фишинг\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на утечку данных",
          "file": "security/active/incident_response.py",
          "line": 246,
          "pattern": "function_name",
          "content": "name=\"Реагирование на утечку данных\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на сетевые атаки",
          "file": "security/active/incident_response.py",
          "line": 256,
          "pattern": "function_name",
          "content": "name=\"Реагирование на сетевые атаки\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Реагирование на компрометацию устройства",
          "file": "security/active/incident_response.py",
          "line": 266,
          "pattern": "function_name",
          "content": "name=\"Реагирование на компрометацию устройства\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_async = (",
          "file": "security/active/malware_protection.py",
          "line": 177,
          "pattern": "enable_function",
          "content": "self.enable_async = (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_async\", True) if config else True",
          "file": "security/active/malware_protection.py",
          "line": 178,
          "pattern": "enable_function",
          "content": "config.get(\"enable_async\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Универсальный вирус",
          "file": "security/active/malware_protection.py",
          "line": 191,
          "pattern": "function_name",
          "content": "name=\"Универсальный вирус\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Крипто-вымогатель",
          "file": "security/active/malware_protection.py",
          "line": 201,
          "pattern": "function_name",
          "content": "name=\"Крипто-вымогатель\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Шпионское ПО и кейлоггеры",
          "file": "security/active/malware_protection.py",
          "line": 211,
          "pattern": "function_name",
          "content": "name=\"Шпионское ПО и кейлоггеры\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Рекламное ПО",
          "file": "security/active/malware_protection.py",
          "line": 221,
          "pattern": "function_name",
          "content": "name=\"Рекламное ПО\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Фишинговые сайты",
          "file": "security/active/malware_protection.py",
          "line": 231,
          "pattern": "function_name",
          "content": "name=\"Фишинговые сайты\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Эксплуатация детей",
          "file": "security/active/malware_protection.py",
          "line": 241,
          "pattern": "function_name",
          "content": "name=\"Эксплуатация детей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мошенничество с пожилыми",
          "file": "security/active/malware_protection.py",
          "line": 252,
          "pattern": "function_name",
          "content": "name=\"Мошенничество с пожилыми\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Руткит",
          "file": "security/active/malware_protection.py",
          "line": 262,
          "pattern": "function_name",
          "content": "name=\"Руткит\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Карантин вирусов",
          "file": "security/active/malware_protection.py",
          "line": 282,
          "pattern": "function_name",
          "content": "name=\"Карантин вирусов\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка вымогателей",
          "file": "security/active/malware_protection.py",
          "line": 295,
          "pattern": "function_name",
          "content": "name=\"Блокировка вымогателей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Удаление шпионского ПО",
          "file": "security/active/malware_protection.py",
          "line": 309,
          "pattern": "function_name",
          "content": "name=\"Удаление шпионского ПО\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка рекламного ПО",
          "file": "security/active/malware_protection.py",
          "line": 319,
          "pattern": "function_name",
          "content": "name=\"Блокировка рекламного ПО\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Защита детей",
          "file": "security/active/malware_protection.py",
          "line": 332,
          "pattern": "function_name",
          "content": "name=\"Защита детей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Защита пожилых",
          "file": "security/active/malware_protection.py",
          "line": 350,
          "pattern": "function_name",
          "content": "name=\"Защита пожилых\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сканирование системы",
          "file": "security/active/malware_protection.py",
          "line": 365,
          "pattern": "function_name",
          "content": "name=\"Сканирование системы\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_async\" in new_config:",
          "file": "security/active/malware_protection.py",
          "line": 1319,
          "pattern": "enable_function",
          "content": "if \"enable_async\" in new_config:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_async = new_config[\"enable_async\"]",
          "file": "security/active/malware_protection.py",
          "line": 1320,
          "pattern": "enable_function",
          "content": "self.enable_async = new_config[\"enable_async\"]",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_notifications: bool = True",
          "file": "security/active/intrusion_prevention.py",
          "line": 73,
          "pattern": "enable_function",
          "content": "enable_notifications: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_api_integration: bool = True",
          "file": "security/active/intrusion_prevention.py",
          "line": 78,
          "pattern": "enable_function",
          "content": "enable_api_integration: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_webhook_notifications: bool = False",
          "file": "security/active/intrusion_prevention.py",
          "line": 80,
          "pattern": "enable_function",
          "content": "enable_webhook_notifications: bool = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Брутфорс атака на вход",
          "file": "security/active/intrusion_prevention.py",
          "line": 2173,
          "pattern": "function_name",
          "content": "name=\"Брутфорс атака на вход\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "DDoS атака",
          "file": "security/active/intrusion_prevention.py",
          "line": 2186,
          "pattern": "function_name",
          "content": "name=\"DDoS атака\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сканирование портов",
          "file": "security/active/intrusion_prevention.py",
          "line": 2199,
          "pattern": "function_name",
          "content": "name=\"Сканирование портов\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SQL инъекция",
          "file": "security/active/intrusion_prevention.py",
          "line": 2212,
          "pattern": "function_name",
          "content": "name=\"SQL инъекция\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "XSS атака",
          "file": "security/active/intrusion_prevention.py",
          "line": 2225,
          "pattern": "function_name",
          "content": "name=\"XSS атака\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Несанкционированный доступ",
          "file": "security/active/intrusion_prevention.py",
          "line": 2238,
          "pattern": "function_name",
          "content": "name=\"Несанкционированный доступ\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Эксплуатация детей",
          "file": "security/active/intrusion_prevention.py",
          "line": 2251,
          "pattern": "function_name",
          "content": "name=\"Эксплуатация детей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мошенничество с пожилыми",
          "file": "security/active/intrusion_prevention.py",
          "line": 2264,
          "pattern": "function_name",
          "content": "name=\"Мошенничество с пожилыми\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка брутфорс атак",
          "file": "security/active/intrusion_prevention.py",
          "line": 2287,
          "pattern": "function_name",
          "content": "name=\"Блокировка брутфорс атак\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ограничение DDoS атак",
          "file": "security/active/intrusion_prevention.py",
          "line": 2300,
          "pattern": "function_name",
          "content": "name=\"Ограничение DDoS атак\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка сканирования портов",
          "file": "security/active/intrusion_prevention.py",
          "line": 2316,
          "pattern": "function_name",
          "content": "name=\"Блокировка сканирования портов\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Предотвращение SQL инъекций",
          "file": "security/active/intrusion_prevention.py",
          "line": 2329,
          "pattern": "function_name",
          "content": "name=\"Предотвращение SQL инъекций\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Предотвращение XSS атак",
          "file": "security/active/intrusion_prevention.py",
          "line": 2342,
          "pattern": "function_name",
          "content": "name=\"Предотвращение XSS атак\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Защита детей",
          "file": "security/active/intrusion_prevention.py",
          "line": 2355,
          "pattern": "function_name",
          "content": "name=\"Защита детей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Защита пожилых",
          "file": "security/active/intrusion_prevention.py",
          "line": 2373,
          "pattern": "function_name",
          "content": "name=\"Защита пожилых\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ML Prediction",
          "file": "security/active/intrusion_prevention.py",
          "line": 3391,
          "pattern": "function_name",
          "content": "name=\"ML Prediction\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/active/intrusion_prevention.py",
          "line": 3417,
          "pattern": "function_name",
          "content": "f\"IntrusionPreventionService(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_notifications:",
          "file": "security/active/intrusion_prevention.py",
          "line": 4651,
          "pattern": "enable_function",
          "content": "if not config.enable_notifications:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Сканирование на вредоносное ПО",
          "file": "security/active/device_security.py",
          "line": 595,
          "pattern": "function_name",
          "content": "name=\"Сканирование на вредоносное ПО\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Обновление программного обеспечения",
          "file": "security/active/device_security.py",
          "line": 605,
          "pattern": "function_name",
          "content": "name=\"Обновление программного обеспечения\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Контроль детских устройств",
          "file": "security/active/device_security.py",
          "line": 615,
          "pattern": "function_name",
          "content": "name=\"Контроль детских устройств\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Защита устройств пожилых",
          "file": "security/active/device_security.py",
          "line": 632,
          "pattern": "function_name",
          "content": "name=\"Защита устройств пожилых\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Безопасность IoT устройств",
          "file": "security/active/device_security.py",
          "line": 649,
          "pattern": "function_name",
          "content": "name=\"Безопасность IoT устройств\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мониторинг сетевых устройств",
          "file": "security/active/device_security.py",
          "line": 665,
          "pattern": "function_name",
          "content": "name=\"Мониторинг сетевых устройств\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Безопасность мобильных устройств",
          "file": "security/active/device_security.py",
          "line": 682,
          "pattern": "function_name",
          "content": "name=\"Безопасность мобильных устройств\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Критические уязвимости",
          "file": "security/active/device_security.py",
          "line": 695,
          "pattern": "function_name",
          "content": "name=\"Критические уязвимости\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка вредоносных IP",
          "file": "security/active/network_monitoring.py",
          "line": 876,
          "pattern": "function_name",
          "content": "name=\"Блокировка вредоносных IP\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мониторинг игрового трафика детей",
          "file": "security/active/network_monitoring.py",
          "line": 884,
          "pattern": "function_name",
          "content": "name=\"Мониторинг игрового трафика детей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мониторинг финансового трафика пожилых",
          "file": "security/active/network_monitoring.py",
          "line": 899,
          "pattern": "function_name",
          "content": "name=\"Мониторинг финансового трафика пожилых\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Блокировка неподходящего контента",
          "file": "security/active/network_monitoring.py",
          "line": 914,
          "pattern": "function_name",
          "content": "name=\"Блокировка неподходящего контента\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ограничение высокой пропускной способности",
          "file": "security/active/network_monitoring.py",
          "line": 925,
          "pattern": "function_name",
          "content": "name=\"Ограничение высокой пропускной способности\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мониторинг социальных сетей",
          "file": "security/active/network_monitoring.py",
          "line": 936,
          "pattern": "function_name",
          "content": "name=\"Мониторинг социальных сетей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Обнаружение утечки данных",
          "file": "security/active/network_monitoring.py",
          "line": 947,
          "pattern": "function_name",
          "content": "name=\"Обнаружение утечки данных\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мониторинг использования VPN",
          "file": "security/active/network_monitoring.py",
          "line": 959,
          "pattern": "function_name",
          "content": "name=\"Мониторинг использования VPN\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_child_monitoring(self, user_id: str) -> bool:",
          "file": "security/active/network_monitoring.py",
          "line": 1624,
          "pattern": "enable_function",
          "content": "def enable_child_monitoring(self, user_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_child_monitoring(self, user_id: str) -> bool:",
          "file": "security/active/network_monitoring.py",
          "line": 1636,
          "pattern": "disable_function",
          "content": "def disable_child_monitoring(self, user_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_elderly_monitoring(self, user_id: str) -> bool:",
          "file": "security/active/network_monitoring.py",
          "line": 1648,
          "pattern": "enable_function",
          "content": "def enable_elderly_monitoring(self, user_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_elderly_monitoring(self, user_id: str) -> bool:",
          "file": "security/active/network_monitoring.py",
          "line": 1660,
          "pattern": "disable_function",
          "content": "def disable_elderly_monitoring(self, user_id: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        }
      ],
      "FAMILY": [
        {
          "function_id": "Родитель",
          "file": "backup_old_components_20250905_235049/family_communication_hub.py",
          "line": 1646,
          "pattern": "function_name",
          "content": "name=\"Родитель\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ребенок",
          "file": "backup_old_components_20250905_235049/family_communication_hub.py",
          "line": 1654,
          "pattern": "function_name",
          "content": "name=\"Ребенок\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_001",
          "file": "security/anonymous_family_profiles.py",
          "line": 295,
          "pattern": "id\":",
          "content": "\"id\": \"rec_001\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_002",
          "file": "security/anonymous_family_profiles.py",
          "line": 303,
          "pattern": "id\":",
          "content": "\"id\": \"rec_002\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_003",
          "file": "security/anonymous_family_profiles.py",
          "line": 311,
          "pattern": "id\":",
          "content": "\"id\": \"rec_003\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rec_004",
          "file": "security/anonymous_family_profiles.py",
          "line": 328,
          "pattern": "id\":",
          "content": "\"id\": \"rec_004\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function('family_registration_system')\")",
          "file": "security/family/check_family_system_status.py",
          "line": 104,
          "pattern": "enable_function",
          "content": "print(\"   sfm.enable_function('family_registration_system')\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function('family_notification_system')\")",
          "file": "security/family/check_family_system_status.py",
          "line": 105,
          "pattern": "enable_function",
          "content": "print(\"   sfm.enable_function('family_notification_system')\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audit_logging = config.get(",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 191,
          "pattern": "enable_function",
          "content": "self.enable_audit_logging = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audit_logging\", True",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 192,
          "pattern": "enable_function",
          "content": "\"enable_audit_logging\", True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis = config.get(",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 194,
          "pattern": "enable_function",
          "content": "self.enable_ai_analysis = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis\", True",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 195,
          "pattern": "enable_function",
          "content": "\"enable_ai_analysis\", True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audit_logging = True",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 200,
          "pattern": "enable_function",
          "content": "self.enable_audit_logging = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis = True",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 201,
          "pattern": "enable_function",
          "content": "self.enable_ai_analysis = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis:",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 216,
          "pattern": "enable_function",
          "content": "if self.enable_ai_analysis:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis and self.is_ml_initialized:",
          "file": "security/family/family_profile_manager_enhanced_fixed.py",
          "line": 485,
          "pattern": "enable_function",
          "content": "if self.enable_ai_analysis and self.is_ml_initialized:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "family_registration_system",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 51,
          "pattern": "function_id",
          "content": "function_id=\"family_registration_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система анонимной регистрации семей",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 52,
          "pattern": "function_name",
          "content": "name=\"Система анонимной регистрации семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_notification_system",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 84,
          "pattern": "function_id",
          "content": "function_id=\"family_notification_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система анонимных уведомлений семей",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 85,
          "pattern": "function_name",
          "content": "name=\"Система анонимных уведомлений семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_testing_system",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 117,
          "pattern": "function_id",
          "content": "function_id=\"family_testing_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система тестирования семей",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 118,
          "pattern": "function_name",
          "content": "name=\"Система тестирования семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_152_fz_compliance",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 151,
          "pattern": "function_id",
          "content": "function_id=\"family_152_fz_compliance\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система соответствия 152-ФЗ для семей",
          "file": "security/family/register_family_system_in_sfm_correct.py",
          "line": 152,
          "pattern": "function_name",
          "content": "name=\"Система соответствия 152-ФЗ для семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Emergency Messages",
          "file": "security/family/family_communication_hub_enhanced.py",
          "line": 370,
          "pattern": "function_name",
          "content": "name=\"Emergency Messages\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Normal Messages",
          "file": "security/family/family_communication_hub_enhanced.py",
          "line": 398,
          "pattern": "function_name",
          "content": "name=\"Normal Messages\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Иван Иванов",
          "file": "security/family/family_communication_hub_enhanced.py",
          "line": 723,
          "pattern": "function_name",
          "content": "name=\"Иван Иванов\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Анна Иванова",
          "file": "security/family/family_communication_hub_enhanced.py",
          "line": 731,
          "pattern": "function_name",
          "content": "name=\"Анна Иванова\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_audit_logging = config.get(",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 340,
          "pattern": "enable_function",
          "content": "self.enable_audit_logging = config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audit_logging\", True",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 341,
          "pattern": "enable_function",
          "content": "\"enable_audit_logging\", True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis = config.get(\"enable_ai_analysis\", True)",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 343,
          "pattern": "enable_function",
          "content": "self.enable_ai_analysis = config.get(\"enable_ai_analysis\", True)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audit_logging = True",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 347,
          "pattern": "enable_function",
          "content": "self.enable_audit_logging = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis = True",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 348,
          "pattern": "enable_function",
          "content": "self.enable_ai_analysis = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis:",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 361,
          "pattern": "enable_function",
          "content": "if self.enable_ai_analysis:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_analysis and self.is_ml_initialized:",
          "file": "security/family/family_profile_manager_enhanced.py",
          "line": 653,
          "pattern": "enable_function",
          "content": "if self.enable_ai_analysis and self.is_ml_initialized:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "viewport",
          "file": "security/family/parent_child_elderly_web_interface.py",
          "line": 155,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_registration_system",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 51,
          "pattern": "function_id",
          "content": "function_id=\"family_registration_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система анонимной регистрации семей",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 52,
          "pattern": "function_name",
          "content": "name=\"Система анонимной регистрации семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_notification_system",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 84,
          "pattern": "function_id",
          "content": "function_id=\"family_notification_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система анонимных уведомлений семей",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 85,
          "pattern": "function_name",
          "content": "name=\"Система анонимных уведомлений семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_testing_system",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 117,
          "pattern": "function_id",
          "content": "function_id=\"family_testing_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система тестирования семей",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 118,
          "pattern": "function_name",
          "content": "name=\"Система тестирования семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_152_fz_compliance",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 150,
          "pattern": "function_id",
          "content": "function_id=\"family_152_fz_compliance\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Система соответствия 152-ФЗ для семей",
          "file": "security/family/register_family_system_in_sfm.py",
          "line": 151,
          "pattern": "function_name",
          "content": "name=\"Система соответствия 152-ФЗ для семей\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/family_communication_replacement.py",
          "line": 90,
          "pattern": "function_name",
          "content": "return f\"FamilyMember(name='{self.name}', role={self.role.value})\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Иван Иванов",
          "file": "security/ai_agents/family_communication_replacement.py",
          "line": 811,
          "pattern": "function_name",
          "content": "name=\"Иван Иванов\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Анна Иванова",
          "file": "security/ai_agents/family_communication_replacement.py",
          "line": 821,
          "pattern": "function_name",
          "content": "name=\"Анна Иванова\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_family_communication_to_sleep",
          "file": "scripts/put_family_communication_to_sleep.py",
          "line": 14,
          "pattern": "sleep_function",
          "content": "def put_family_communication_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "family_communication_hub",
          "file": "scripts/put_family_communication_to_sleep.py",
          "line": 26,
          "pattern": "function_id",
          "content": "function_id = \"family_communication_hub\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "FamilyCommunicationHub",
          "file": "scripts/put_family_communication_to_sleep.py",
          "line": 29,
          "pattern": "function_name",
          "content": "name=\"FamilyCommunicationHub\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_function(function_id)",
          "file": "scripts/put_family_communication_to_sleep.py",
          "line": 39,
          "pattern": "disable_function",
          "content": "sleep_success = manager.disable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "family_profile_manager",
          "file": "scripts/integrate_family_functions.py",
          "line": 31,
          "pattern": "function_id",
          "content": "function_id=\"family_profile_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "FamilyProfileManager",
          "file": "scripts/integrate_family_functions.py",
          "line": 32,
          "pattern": "function_name",
          "content": "name=\"FamilyProfileManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "child_protection",
          "file": "scripts/integrate_family_functions.py",
          "line": 44,
          "pattern": "function_id",
          "content": "function_id=\"child_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ChildProtection",
          "file": "scripts/integrate_family_functions.py",
          "line": 45,
          "pattern": "function_name",
          "content": "name=\"ChildProtection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "elderly_protection",
          "file": "scripts/integrate_family_functions.py",
          "line": 57,
          "pattern": "function_id",
          "content": "function_id=\"elderly_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ElderlyProtection",
          "file": "scripts/integrate_family_functions.py",
          "line": 58,
          "pattern": "function_name",
          "content": "name=\"ElderlyProtection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тестовая семья с современными функциями",
          "file": "scripts/test_family_modern_integration.py",
          "line": 48,
          "pattern": "function_name",
          "content": "family_name=\"Тестовая семья с современными функциями\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Анна (тест)",
          "file": "scripts/test_family_modern_integration.py",
          "line": 55,
          "pattern": "function_name",
          "content": "name=\"Анна (тест)\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Мама (тест)",
          "file": "scripts/test_family_modern_integration.py",
          "line": 65,
          "pattern": "function_name",
          "content": "name=\"Мама (тест)\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "COMPLIANCE": [
        {
          "function_id": "enable_reporting = (",
          "file": "security/compliance_manager.py",
          "line": 230,
          "pattern": "enable_function",
          "content": "self.enable_reporting = (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_reporting\", True) if config else True",
          "file": "security/compliance_manager.py",
          "line": 231,
          "pattern": "enable_function",
          "content": "config.get(\"enable_reporting\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_reporting:",
          "file": "security/compliance_manager.py",
          "line": 266,
          "pattern": "enable_function",
          "content": "if self.enable_reporting:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/compliance_manager.py",
          "line": 1057,
          "pattern": "function_name",
          "content": "f\"ComplianceManager(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_compliance_to_sleep",
          "file": "scripts/put_compliance_to_sleep_final.py",
          "line": 15,
          "pattern": "sleep_function",
          "content": "def put_compliance_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_compliance_to_sleep",
          "file": "scripts/test_compliance_quality.py",
          "line": 201,
          "pattern": "sleep_function",
          "content": "\"Спящий режим\": os.path.exists(\"scripts/put_compliance_to_sleep.py\"),",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "MICROSERVICES": [
        {
          "function_id": "wake_up_threshold\": 0.8,",
          "file": "security/microservices/simple_sleep.py",
          "line": 39,
          "pattern": "wake_function",
          "content": "\"wake_up_threshold\": 0.8,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_enabled\": True,",
          "file": "security/microservices/simple_sleep.py",
          "line": 79,
          "pattern": "wake_function",
          "content": "\"auto_wake_up_enabled\": True,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_triggers\": [",
          "file": "security/microservices/simple_sleep.py",
          "line": 80,
          "pattern": "wake_function",
          "content": "\"wake_up_triggers\": [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config():",
          "file": "security/microservices/simple_sleep.py",
          "line": 98,
          "pattern": "wake_function",
          "content": "def create_wake_up_config():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config = {",
          "file": "security/microservices/simple_sleep.py",
          "line": 102,
          "pattern": "wake_function",
          "content": "wake_up_config = {",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_threshold\": 0.5,",
          "file": "security/microservices/simple_sleep.py",
          "line": 112,
          "pattern": "wake_function",
          "content": "\"wake_up_threshold\": 0.5,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\": time.time(),",
          "file": "security/microservices/simple_sleep.py",
          "line": 116,
          "pattern": "wake_function",
          "content": "\"wake_up_time\": time.time(),",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config",
          "file": "security/microservices/simple_sleep.py",
          "line": 164,
          "pattern": "wake_function",
          "content": "return wake_up_config",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_systems_to_sleep",
          "file": "security/microservices/simple_sleep.py",
          "line": 167,
          "pattern": "sleep_function",
          "content": "def put_systems_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_script = \"\"\"#!/usr/bin/env python3",
          "file": "security/microservices/simple_sleep.py",
          "line": 215,
          "pattern": "wake_function",
          "content": "wake_up_script = \"\"\"#!/usr/bin/env python3",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems():",
          "file": "security/microservices/simple_sleep.py",
          "line": 221,
          "pattern": "wake_function",
          "content": "def wake_up_systems():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\": time.time()",
          "file": "security/microservices/simple_sleep.py",
          "line": 230,
          "pattern": "wake_function",
          "content": "\"wake_up_time\": time.time()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
          "file": "security/microservices/simple_sleep.py",
          "line": 247,
          "pattern": "wake_function",
          "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
          "file": "security/microservices/simple_sleep.py",
          "line": 248,
          "pattern": "wake_function",
          "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems()",
          "file": "security/microservices/simple_sleep.py",
          "line": 254,
          "pattern": "wake_function",
          "content": "wake_up_systems()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py\", \"w\", encoding=\"utf-8\") as f:",
          "file": "security/microservices/simple_sleep.py",
          "line": 257,
          "pattern": "wake_function",
          "content": "with open(\"wake_up_systems.py\", \"w\", encoding=\"utf-8\") as f:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_script)",
          "file": "security/microservices/simple_sleep.py",
          "line": 258,
          "pattern": "wake_function",
          "content": "f.write(wake_up_script)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py\")",
          "file": "security/microservices/simple_sleep.py",
          "line": 260,
          "pattern": "wake_function",
          "content": "logger.info(\"🔧 Скрипт пробуждения создан: wake_up_systems.py\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py\"",
          "file": "security/microservices/simple_sleep.py",
          "line": 267,
          "pattern": "wake_function",
          "content": "\"🔧 Для ручного пробуждения используйте: python3 wake_up_systems.py\"",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py - скрипт пробуждения\")",
          "file": "security/microservices/simple_sleep.py",
          "line": 308,
          "pattern": "wake_function",
          "content": "print(\"   - wake_up_systems.py - скрипт пробуждения\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_rate_limiter\": True,",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 104,
          "pattern": "enable_function",
          "content": "\"enable_rate_limiter\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\": True,",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 105,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaker\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_user_interface_manager\": True,",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 106,
          "pattern": "enable_function",
          "content": "\"enable_user_interface_manager\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_monitoring\": True,",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 110,
          "pattern": "enable_function",
          "content": "\"enable_monitoring\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_logging\": True,",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 111,
          "pattern": "enable_function",
          "content": "\"enable_logging\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_monitoring\"]:",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 176,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_monitoring\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_rate_limiter\"]:",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 224,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_rate_limiter\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\"]:",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 229,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_circuit_breaker\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_user_interface_manager\"]:",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 236,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_user_interface_manager\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_rate_limiter\": self.config[\"enable_rate_limiter\"],",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 591,
          "pattern": "enable_function",
          "content": "\"enable_rate_limiter\": self.config[\"enable_rate_limiter\"],",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\": self.config[",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 592,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaker\": self.config[",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\"",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 593,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaker\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_user_interface_manager\": self.config[",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 595,
          "pattern": "enable_function",
          "content": "\"enable_user_interface_manager\": self.config[",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_user_interface_manager\"",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 596,
          "pattern": "enable_function",
          "content": "\"enable_user_interface_manager\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "test_service",
          "file": "security/microservices/safe_function_manager_integration.py",
          "line": 636,
          "pattern": "function_name",
          "content": "service_name=\"test_service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_caching\": True,",
          "file": "security/microservices/user_interface_manager.py",
          "line": 617,
          "pattern": "enable_function",
          "content": "\"enable_caching\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_caching\"]:",
          "file": "security/microservices/user_interface_manager.py",
          "line": 1085,
          "pattern": "enable_function",
          "content": "if self.redis_client and self.config[\"enable_caching\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_caching\", False),",
          "file": "security/microservices/user_interface_manager.py",
          "line": 1769,
          "pattern": "enable_function",
          "content": "\"caching_enabled\": self.config.get(\"enable_caching\", False),",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\": True,",
          "file": "security/microservices/rate_limiter.py",
          "line": 414,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaker\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\"]:",
          "file": "security/microservices/rate_limiter.py",
          "line": 599,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_circuit_breaker\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_compression\": True,",
          "file": "security/microservices/redis_cache_manager.py",
          "line": 127,
          "pattern": "enable_function",
          "content": "\"enable_compression\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption\": False,",
          "file": "security/microservices/redis_cache_manager.py",
          "line": 128,
          "pattern": "enable_function",
          "content": "\"enable_encryption\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence\": True,",
          "file": "security/microservices/redis_cache_manager.py",
          "line": 129,
          "pattern": "enable_function",
          "content": "\"enable_persistence\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clustering\": False,",
          "file": "security/microservices/redis_cache_manager.py",
          "line": 130,
          "pattern": "enable_function",
          "content": "\"enable_clustering\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_monitoring\": True,",
          "file": "security/microservices/redis_cache_manager.py",
          "line": 131,
          "pattern": "enable_function",
          "content": "\"enable_monitoring\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence\"]:",
          "file": "security/microservices/redis_cache_manager.py",
          "line": 179,
          "pattern": "enable_function",
          "content": "if self.cache_config[\"enable_persistence\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_service_discovery\": True,",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 191,
          "pattern": "enable_function",
          "content": "\"enable_service_discovery\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_health_checks\": True,",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 192,
          "pattern": "enable_function",
          "content": "\"enable_health_checks\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_load_balancing\": True,",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 193,
          "pattern": "enable_function",
          "content": "\"enable_load_balancing\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\": True,",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 194,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaker\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics\": True,",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 195,
          "pattern": "enable_function",
          "content": "\"enable_metrics\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_tracing\": True,",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 196,
          "pattern": "enable_function",
          "content": "\"enable_tracing\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_service_discovery\"]:",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 247,
          "pattern": "enable_function",
          "content": "if self.mesh_config[\"enable_service_discovery\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_load_balancing\"]:",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 351,
          "pattern": "enable_function",
          "content": "if self.mesh_config[\"enable_load_balancing\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaker\"]:",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 355,
          "pattern": "enable_function",
          "content": "if self.mesh_config[\"enable_circuit_breaker\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_health_checks\"]:",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 463,
          "pattern": "enable_function",
          "content": "if self.mesh_config[\"enable_health_checks\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics\"]:",
          "file": "security/microservices/service_mesh_manager.py",
          "line": 467,
          "pattern": "enable_function",
          "content": "if self.mesh_config[\"enable_metrics\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_systems_to_sleep",
          "file": "security/microservices/put_to_sleep_enhanced.py",
          "line": 32,
          "pattern": "sleep_function",
          "content": "async def put_systems_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_threshold\": 0.8,  # Порог для пробуждения",
          "file": "security/microservices/put_to_sleep_enhanced.py",
          "line": 49,
          "pattern": "wake_function",
          "content": "\"wake_up_threshold\": 0.8,  # Порог для пробуждения",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py\"",
          "file": "security/microservices/put_to_sleep_enhanced.py",
          "line": 136,
          "pattern": "wake_function",
          "content": "\"🔧 Для ручного пробуждения используйте: python3 wake_up_systems.py\"",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_ml_analysis: bool = True",
          "file": "security/microservices/emergency_base_models.py",
          "line": 114,
          "pattern": "enable_function",
          "content": "enable_ml_analysis: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_risk_analysis: bool = True",
          "file": "security/microservices/emergency_base_models.py",
          "line": 115,
          "pattern": "enable_function",
          "content": "enable_risk_analysis: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_systems():",
          "file": "security/microservices/wake_up_systems.py",
          "line": 11,
          "pattern": "wake_function",
          "content": "def wake_up_systems():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config = {",
          "file": "security/microservices/wake_up_systems.py",
          "line": 15,
          "pattern": "wake_function",
          "content": "wake_up_config = {",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\": time.time()",
          "file": "security/microservices/wake_up_systems.py",
          "line": 20,
          "pattern": "wake_function",
          "content": "\"wake_up_time\": time.time()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
          "file": "security/microservices/wake_up_systems.py",
          "line": 37,
          "pattern": "wake_function",
          "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
          "file": "security/microservices/wake_up_systems.py",
          "line": 38,
          "pattern": "wake_function",
          "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems()",
          "file": "security/microservices/wake_up_systems.py",
          "line": 44,
          "pattern": "wake_function",
          "content": "wake_up_systems()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "BOTS": [
        {
          "function_id": "msg_123",
          "file": "security/bots/messenger_bots_integration_test.py",
          "line": 152,
          "pattern": "id\":",
          "content": "\"id\": \"msg_123\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "post_123",
          "file": "security/bots/messenger_bots_integration_test.py",
          "line": 204,
          "pattern": "id\":",
          "content": "\"id\": \"post_123\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "user123",
          "file": "security/bots/messenger_bots_integration_test.py",
          "line": 210,
          "pattern": "id\":",
          "content": "\"id\": \"user123\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "-1001234567890",
          "file": "security/bots/messenger_bots_integration_test.py",
          "line": 237,
          "pattern": "id\":",
          "content": "\"chat\": {\"id\": \"-1001234567890\", \"type\": \"group\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "123456789",
          "file": "security/bots/messenger_bots_integration_test.py",
          "line": 239,
          "pattern": "id\":",
          "content": "\"id\": \"123456789\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_results = {}",
          "file": "security/bots/integration_test_suite.py",
          "line": 565,
          "pattern": "wake_function",
          "content": "wake_up_results = {}",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_results[name] = {",
          "file": "security/bots/integration_test_suite.py",
          "line": 571,
          "pattern": "wake_function",
          "content": "wake_up_results[name] = {",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_results.values()",
          "file": "security/bots/integration_test_suite.py",
          "line": 584,
          "pattern": "wake_function",
          "content": "result[\"success\"] for result in wake_up_results.values()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_results,",
          "file": "security/bots/integration_test_suite.py",
          "line": 586,
          "pattern": "wake_function",
          "content": "\"bot_results\": wake_up_results,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_rate_limiting\": True,",
          "file": "security/bots/network_security_bot.py",
          "line": 176,
          "pattern": "enable_function",
          "content": "\"enable_rate_limiting\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Telegram",
          "file": "security/bots/messenger_integration.py",
          "line": 167,
          "pattern": "function_name",
          "content": "name=\"Telegram\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN_Security_Bot",
          "file": "security/bots/messenger_integration.py",
          "line": 172,
          "pattern": "function_name",
          "content": "bot_username=\"ALADDIN_Security_Bot\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "WhatsApp",
          "file": "security/bots/messenger_integration.py",
          "line": 178,
          "pattern": "function_name",
          "content": "name=\"WhatsApp\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN Security",
          "file": "security/bots/messenger_integration.py",
          "line": 183,
          "pattern": "function_name",
          "content": "bot_username=\"ALADDIN Security\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Viber",
          "file": "security/bots/messenger_integration.py",
          "line": 189,
          "pattern": "function_name",
          "content": "name=\"Viber\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Discord",
          "file": "security/bots/messenger_integration.py",
          "line": 200,
          "pattern": "function_name",
          "content": "name=\"Discord\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Slack",
          "file": "security/bots/messenger_integration.py",
          "line": 211,
          "pattern": "function_name",
          "content": "name=\"Slack\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "VK",
          "file": "security/bots/messenger_integration.py",
          "line": 222,
          "pattern": "function_name",
          "content": "name=\"VK\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Яндекс.Мессенджер",
          "file": "security/bots/messenger_integration.py",
          "line": 233,
          "pattern": "function_name",
          "content": "name=\"Яндекс.Мессенджер\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Российские мессенджеры",
          "file": "security/bots/messenger_integration.py",
          "line": 246,
          "pattern": "function_name",
          "content": "name=\"Российские мессенджеры\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "-1001234567890",
          "file": "security/bots/max_messenger_security_bot.py",
          "line": 1239,
          "pattern": "id\":",
          "content": "\"chat\": {\"id\": \"-1001234567890\", \"type\": \"group\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "123456789",
          "file": "security/bots/max_messenger_security_bot.py",
          "line": 1241,
          "pattern": "id\":",
          "content": "\"id\": \"123456789\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_geofencing\": True,",
          "file": "security/bots/emergency_response_bot.py",
          "line": 281,
          "pattern": "enable_function",
          "content": "\"enable_geofencing\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_voice_recognition\": True,",
          "file": "security/bots/emergency_response_bot.py",
          "line": 282,
          "pattern": "enable_function",
          "content": "\"enable_voice_recognition\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/bots/emergency_response_bot.py",
          "line": 1339,
          "pattern": "function_name",
          "content": "f\"EmergencyResponseBot(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Test Contact",
          "file": "security/bots/emergency_response_bot.py",
          "line": 2602,
          "pattern": "function_name",
          "content": "name=\"Test Contact\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "DISABLE_EXTENSIONS = \"disable_extensions\"",
          "file": "security/bots/incognito_protection_bot.py",
          "line": 45,
          "pattern": "disable_function",
          "content": "DISABLE_EXTENSIONS = \"disable_extensions\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/bots/gaming_security_bot.py",
          "line": 1446,
          "pattern": "function_name",
          "content": "return f\"GamingSecurityBot(name='{self.name}', status='{status}')\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_console=self.config.logging.enable_console,",
          "file": "security/bots/parental_control_bot.py",
          "line": 656,
          "pattern": "enable_function",
          "content": "enable_console=self.config.logging.enable_console,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file=self.config.logging.enable_file,",
          "file": "security/bots/parental_control_bot.py",
          "line": 657,
          "pattern": "enable_function",
          "content": "enable_file=self.config.logging.enable_file,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics=self.config.logging.enable_metrics,",
          "file": "security/bots/parental_control_bot.py",
          "line": 658,
          "pattern": "enable_function",
          "content": "enable_metrics=self.config.logging.enable_metrics,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/bots/notification_bot.py",
          "line": 1572,
          "pattern": "function_name",
          "content": "f\"NotificationBot(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "123456789",
          "file": "security/bots/instagram_security_bot.py",
          "line": 1216,
          "pattern": "id\":",
          "content": "\"id\": \"123456789\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "post_12345",
          "file": "security/bots/instagram_security_bot.py",
          "line": 1232,
          "pattern": "id\":",
          "content": "\"id\": \"post_12345\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_firewall\": True,",
          "file": "security/bots/device_security_bot.py",
          "line": 165,
          "pattern": "enable_function",
          "content": "\"enable_firewall\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "unknown",
          "file": "security/bots/device_security_bot.py",
          "line": 630,
          "pattern": "function_name",
          "content": "os_name=\"unknown\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_location_tracking\": True,",
          "file": "security/bots/browser_security_bot.py",
          "line": 145,
          "pattern": "disable_function",
          "content": "\"disable_location_tracking\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_camera_mic\": True,",
          "file": "security/bots/browser_security_bot.py",
          "line": 146,
          "pattern": "disable_function",
          "content": "\"disable_camera_mic\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_compression\": True,",
          "file": "security/bots/browser_security_bot.py",
          "line": 151,
          "pattern": "enable_function",
          "content": "\"enable_compression\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "test_msg_123",
          "file": "security/bots/whatsapp_security_bot.py",
          "line": 1016,
          "pattern": "id\":",
          "content": "\"id\": \"test_msg_123\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_console: bool = True",
          "file": "security/bots/components/config_manager.py",
          "line": 115,
          "pattern": "enable_function",
          "content": "enable_console: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file: bool = True",
          "file": "security/bots/components/config_manager.py",
          "line": 116,
          "pattern": "enable_function",
          "content": "enable_file: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics: bool = True",
          "file": "security/bots/components/config_manager.py",
          "line": 117,
          "pattern": "enable_function",
          "content": "enable_metrics: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console\": self.logging.enable_console,",
          "file": "security/bots/components/config_manager.py",
          "line": 225,
          "pattern": "enable_function",
          "content": "\"enable_console\": self.logging.enable_console,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file\": self.logging.enable_file,",
          "file": "security/bots/components/config_manager.py",
          "line": 226,
          "pattern": "enable_function",
          "content": "\"enable_file\": self.logging.enable_file,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics\": self.logging.enable_metrics,",
          "file": "security/bots/components/config_manager.py",
          "line": 227,
          "pattern": "enable_function",
          "content": "\"enable_metrics\": self.logging.enable_metrics,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console\": {\"type\": \"boolean\"},",
          "file": "security/bots/components/config_manager.py",
          "line": 612,
          "pattern": "enable_function",
          "content": "\"enable_console\": {\"type\": \"boolean\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file\": {\"type\": \"boolean\"},",
          "file": "security/bots/components/config_manager.py",
          "line": 613,
          "pattern": "enable_function",
          "content": "\"enable_file\": {\"type\": \"boolean\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics\": {\"type\": \"boolean\"},",
          "file": "security/bots/components/config_manager.py",
          "line": 614,
          "pattern": "enable_function",
          "content": "\"enable_metrics\": {\"type\": \"boolean\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console = logging_config.get(",
          "file": "security/bots/components/config_manager.py",
          "line": 816,
          "pattern": "enable_function",
          "content": "config.logging.enable_console = logging_config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console\", config.logging.enable_console",
          "file": "security/bots/components/config_manager.py",
          "line": 817,
          "pattern": "enable_function",
          "content": "\"enable_console\", config.logging.enable_console",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file = logging_config.get(",
          "file": "security/bots/components/config_manager.py",
          "line": 819,
          "pattern": "enable_function",
          "content": "config.logging.enable_file = logging_config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file\", config.logging.enable_file",
          "file": "security/bots/components/config_manager.py",
          "line": 820,
          "pattern": "enable_function",
          "content": "\"enable_file\", config.logging.enable_file",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics = logging_config.get(",
          "file": "security/bots/components/config_manager.py",
          "line": 822,
          "pattern": "enable_function",
          "content": "config.logging.enable_metrics = logging_config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics\", config.logging.enable_metrics",
          "file": "security/bots/components/config_manager.py",
          "line": 823,
          "pattern": "enable_function",
          "content": "\"enable_metrics\", config.logging.enable_metrics",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console: bool = True,",
          "file": "security/bots/components/advanced_logger.py",
          "line": 91,
          "pattern": "enable_function",
          "content": "enable_console: bool = True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file: bool = True,",
          "file": "security/bots/components/advanced_logger.py",
          "line": 92,
          "pattern": "enable_function",
          "content": "enable_file: bool = True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics: bool = True,",
          "file": "security/bots/components/advanced_logger.py",
          "line": 93,
          "pattern": "enable_function",
          "content": "enable_metrics: bool = True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console = enable_console",
          "file": "security/bots/components/advanced_logger.py",
          "line": 101,
          "pattern": "enable_function",
          "content": "self.enable_console = enable_console",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file = enable_file",
          "file": "security/bots/components/advanced_logger.py",
          "line": 102,
          "pattern": "enable_function",
          "content": "self.enable_file = enable_file",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_metrics = enable_metrics",
          "file": "security/bots/components/advanced_logger.py",
          "line": 103,
          "pattern": "enable_function",
          "content": "self.enable_metrics = enable_metrics",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_console:",
          "file": "security/bots/components/advanced_logger.py",
          "line": 141,
          "pattern": "enable_function",
          "content": "if self.enable_console:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_file and self.log_file:",
          "file": "security/bots/components/advanced_logger.py",
          "line": 157,
          "pattern": "enable_function",
          "content": "if self.enable_file and self.log_file:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_on_demand\": True,",
          "file": "security/managers/integrate_all_bots_to_sleep.py",
          "line": 146,
          "pattern": "wake_function",
          "content": "\"wake_up_on_demand\": True,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_bot_to_sleep",
          "file": "security/managers/integrate_all_bots_to_sleep.py",
          "line": 272,
          "pattern": "sleep_function",
          "content": "async def put_bot_to_sleep(self, bot_name: str, bot_instance: Any) -> bool:",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_on_demand\": True,",
          "file": "security/managers/check_and_sleep_bots.py",
          "line": 106,
          "pattern": "wake_function",
          "content": "\"wake_up_on_demand\": True,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_bot_to_sleep",
          "file": "security/managers/check_and_sleep_bots.py",
          "line": 197,
          "pattern": "sleep_function",
          "content": "async def put_bot_to_sleep(self, bot_name: str, bot_instance: Any) -> bool:",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "VPN": [
        {
          "function_id": "VPN Web Interface",
          "file": "security/vpn/sleep_mode_manager.py",
          "line": 122,
          "pattern": "function_name",
          "content": "name=\"VPN Web Interface\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_web_interface",
          "file": "security/vpn/sleep_mode_manager.py",
          "line": 124,
          "pattern": "function_name",
          "content": "process_name=\"vpn_web_interface\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "VPN Premium Interface",
          "file": "security/vpn/sleep_mode_manager.py",
          "line": 129,
          "pattern": "function_name",
          "content": "name=\"VPN Premium Interface\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_web_interface_premium",
          "file": "security/vpn/sleep_mode_manager.py",
          "line": 131,
          "pattern": "function_name",
          "content": "process_name=\"vpn_web_interface_premium\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "VPN API Server",
          "file": "security/vpn/sleep_mode_manager.py",
          "line": 136,
          "pattern": "function_name",
          "content": "name=\"VPN API Server\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_api_server",
          "file": "security/vpn/sleep_mode_manager.py",
          "line": 138,
          "pattern": "function_name",
          "content": "process_name=\"vpn_api_server\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "testuser",
          "file": "security/vpn/vpn_manager.py",
          "line": 264,
          "pattern": "function_name",
          "content": "username=\"testuser\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_firewall: bool = True",
          "file": "security/vpn/vpn_configuration.py",
          "line": 125,
          "pattern": "enable_function",
          "content": "enable_firewall: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_leak_protection: bool = True",
          "file": "security/vpn/vpn_configuration.py",
          "line": 126,
          "pattern": "enable_function",
          "content": "enable_leak_protection: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_malware_blocking: bool = True",
          "file": "security/vpn/vpn_configuration.py",
          "line": 127,
          "pattern": "enable_function",
          "content": "enable_malware_blocking: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ad_blocking: bool = False",
          "file": "security/vpn/vpn_configuration.py",
          "line": 128,
          "pattern": "enable_function",
          "content": "enable_ad_blocking: bool = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_tracker_blocking: bool = True",
          "file": "security/vpn/vpn_configuration.py",
          "line": 129,
          "pattern": "enable_function",
          "content": "enable_tracker_blocking: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_firewall\": self.enable_firewall,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 138,
          "pattern": "enable_function",
          "content": "\"enable_firewall\": self.enable_firewall,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_leak_protection\": self.enable_leak_protection,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 139,
          "pattern": "enable_function",
          "content": "\"enable_leak_protection\": self.enable_leak_protection,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_malware_blocking\": self.enable_malware_blocking,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 140,
          "pattern": "enable_function",
          "content": "\"enable_malware_blocking\": self.enable_malware_blocking,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ad_blocking\": self.enable_ad_blocking,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 141,
          "pattern": "enable_function",
          "content": "\"enable_ad_blocking\": self.enable_ad_blocking,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_tracker_blocking\": self.enable_tracker_blocking,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 142,
          "pattern": "enable_function",
          "content": "\"enable_tracker_blocking\": self.enable_tracker_blocking,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ipv6\": True,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 202,
          "pattern": "enable_function",
          "content": "\"enable_ipv6\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_killswitch\": True,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 203,
          "pattern": "enable_function",
          "content": "\"enable_killswitch\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_firewall\": True,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 208,
          "pattern": "enable_function",
          "content": "\"enable_firewall\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_leak_protection\": True,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 209,
          "pattern": "enable_function",
          "content": "\"enable_leak_protection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_malware_blocking\": True,",
          "file": "security/vpn/vpn_configuration.py",
          "line": 210,
          "pattern": "enable_function",
          "content": "\"enable_malware_blocking\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_firewall:",
          "file": "security/vpn/vpn_configuration.py",
          "line": 432,
          "pattern": "enable_function",
          "content": "if not self.security_config.enable_firewall:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_leak_protection:",
          "file": "security/vpn/vpn_configuration.py",
          "line": 435,
          "pattern": "enable_function",
          "content": "if not self.security_config.enable_leak_protection:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "US East Server 1",
          "file": "security/vpn/vpn_configuration.py",
          "line": 647,
          "pattern": "function_name",
          "content": "name=\"US East Server 1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "FinalIntegrationTest",
          "file": "security/vpn/test_final_integration.py",
          "line": 54,
          "pattern": "function_name",
          "content": "self.name = \"FinalIntegrationTest\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "user_data_usage",
          "file": "security/vpn/vpn_analytics.py",
          "line": 674,
          "pattern": "function_name",
          "content": "metric_name=\"user_data_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_security_component_to_sleep",
          "file": "security/vpn/sleep_mode_all_security_components.py",
          "line": 175,
          "pattern": "sleep_function",
          "content": "def put_security_component_to_sleep(self, component_name: str) -> bool:",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_split_tunneling()",
          "file": "security/vpn/test_performance_features.py",
          "line": 174,
          "pattern": "enable_function",
          "content": "split_tunnel.enable_split_tunneling()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_component(self, component_name: str) -> bool:",
          "file": "security/vpn/sleep_mode_all_components.py",
          "line": 217,
          "pattern": "wake_function",
          "content": "def wake_up_component(self, component_name: str) -> bool:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "singapore-1",
          "file": "security/vpn/core/vpn_core.py",
          "line": 173,
          "pattern": "id\":",
          "content": "\"id\": \"singapore-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "singapore-wg",
          "file": "security/vpn/core/vpn_core.py",
          "line": 184,
          "pattern": "id\":",
          "content": "\"id\": \"singapore-wg\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russia-1",
          "file": "security/vpn/core/vpn_core.py",
          "line": 196,
          "pattern": "id\":",
          "content": "\"id\": \"russia-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russia-wg",
          "file": "security/vpn/core/vpn_core.py",
          "line": 207,
          "pattern": "id\":",
          "content": "\"id\": \"russia-wg\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "europe-amsterdam",
          "file": "security/vpn/core/vpn_core.py",
          "line": 219,
          "pattern": "id\":",
          "content": "\"id\": \"europe-amsterdam\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "europe-london",
          "file": "security/vpn/core/vpn_core.py",
          "line": 230,
          "pattern": "id\":",
          "content": "\"id\": \"europe-london\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "europe-frankfurt",
          "file": "security/vpn/core/vpn_core.py",
          "line": 241,
          "pattern": "id\":",
          "content": "\"id\": \"europe-frankfurt\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "europe-wg",
          "file": "security/vpn/core/vpn_core.py",
          "line": 252,
          "pattern": "id\":",
          "content": "\"id\": \"europe-wg\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "usa-ny",
          "file": "security/vpn/core/vpn_core.py",
          "line": 264,
          "pattern": "id\":",
          "content": "\"id\": \"usa-ny\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "usa-la",
          "file": "security/vpn/core/vpn_core.py",
          "line": 275,
          "pattern": "id\":",
          "content": "\"id\": \"usa-la\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "usa-wg",
          "file": "security/vpn/core/vpn_core.py",
          "line": 286,
          "pattern": "id\":",
          "content": "\"id\": \"usa-wg\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "asia-tokyo",
          "file": "security/vpn/core/vpn_core.py",
          "line": 298,
          "pattern": "id\":",
          "content": "\"id\": \"asia-tokyo\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "asia-seoul",
          "file": "security/vpn/core/vpn_core.py",
          "line": 309,
          "pattern": "id\":",
          "content": "\"id\": \"asia-seoul\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "asia-hongkong",
          "file": "security/vpn/core/vpn_core.py",
          "line": 320,
          "pattern": "id\":",
          "content": "\"id\": \"asia-hongkong\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "asia-wg",
          "file": "security/vpn/core/vpn_core.py",
          "line": 331,
          "pattern": "id\":",
          "content": "\"id\": \"asia-wg\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "security/vpn/web/vpn_web_interface_improved.py",
          "line": 94,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "country-card",
          "file": "security/vpn/web/vpn_web_interface_improved.py",
          "line": 479,
          "pattern": "function_name",
          "content": "card.className = 'country-card';",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "security/vpn/web/vpn_web_interface_premium.py",
          "line": 77,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_split_tunneling(self):",
          "file": "security/vpn/features/split_tunneling.py",
          "line": 455,
          "pattern": "enable_function",
          "content": "def enable_split_tunneling(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_split_tunneling(self):",
          "file": "security/vpn/features/split_tunneling.py",
          "line": 460,
          "pattern": "disable_function",
          "content": "def disable_split_tunneling(self):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_split_tunneling()",
          "file": "security/vpn/features/split_tunneling.py",
          "line": 608,
          "pattern": "enable_function",
          "content": "split_tunnel.enable_split_tunneling()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Моя цепочка",
          "file": "security/vpn/features/multi_hop.py",
          "line": 653,
          "pattern": "function_name",
          "content": "name=\"Моя цепочка\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_console: bool = Field(default=True)",
          "file": "security/vpn/models/vpn_models.py",
          "line": 474,
          "pattern": "enable_function",
          "content": "enable_console: bool = Field(default=True)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_syslog: bool = Field(default=False)",
          "file": "security/vpn/models/vpn_models.py",
          "line": 475,
          "pattern": "enable_function",
          "content": "enable_syslog: bool = Field(default=False)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "ru-moscow-1",
          "file": "security/vpn/compliance/data_localization.py",
          "line": 52,
          "pattern": "id\":",
          "content": "\"id\": \"ru-moscow-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ru-spb-1",
          "file": "security/vpn/compliance/data_localization.py",
          "line": 62,
          "pattern": "id\":",
          "content": "\"id\": \"ru-spb-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ru-ekb-1",
          "file": "security/vpn/compliance/data_localization.py",
          "line": 72,
          "pattern": "id\":",
          "content": "\"id\": \"ru-ekb-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sg-singapore-1",
          "file": "security/vpn/compliance/data_localization.py",
          "line": 87,
          "pattern": "id\":",
          "content": "\"id\": \"sg-singapore-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "de-frankfurt-1",
          "file": "security/vpn/compliance/data_localization.py",
          "line": 97,
          "pattern": "id\":",
          "content": "\"id\": \"de-frankfurt-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "hk-hongkong-1",
          "file": "security/vpn/compliance/data_localization.py",
          "line": 107,
          "pattern": "id\":",
          "content": "\"id\": \"hk-hongkong-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "data_localization",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 58,
          "pattern": "function_name",
          "content": "check_name=\"data_localization\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "no_logs_policy",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 102,
          "pattern": "function_name",
          "content": "check_name=\"no_logs_policy\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "anonymization",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 143,
          "pattern": "function_name",
          "content": "check_name=\"anonymization\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "user_consent",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 173,
          "pattern": "function_name",
          "content": "check_name=\"user_consent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "data_protection",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 203,
          "pattern": "function_name",
          "content": "check_name=\"data_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ru-moscow-1",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 285,
          "pattern": "id\":",
          "content": "{\"id\": \"ru-moscow-1\", \"location\": \"Москва\", \"country\": \"RU\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ru-spb-1",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 286,
          "pattern": "id\":",
          "content": "{\"id\": \"ru-spb-1\", \"location\": \"Санкт-Петербург\", \"country\": \"RU\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ru-ekb-1",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 287,
          "pattern": "id\":",
          "content": "{\"id\": \"ru-ekb-1\", \"location\": \"Екатеринбург\", \"country\": \"RU\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sg-singapore-1",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 294,
          "pattern": "id\":",
          "content": "{\"id\": \"sg-singapore-1\", \"location\": \"Сингапур\", \"country\": \"SG\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "de-frankfurt-1",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 295,
          "pattern": "id\":",
          "content": "{\"id\": \"de-frankfurt-1\", \"location\": \"Франкфурт\", \"country\": \"DE\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "hk-hongkong-1",
          "file": "security/vpn/compliance/russia_compliance.py",
          "line": 296,
          "pattern": "id\":",
          "content": "{\"id\": \"hk-hongkong-1\", \"location\": \"Гонконг\", \"country\": \"HK\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Stripe Payment",
          "file": "security/vpn/integrations/external_services.py",
          "line": 466,
          "pattern": "function_name",
          "content": "name=\"Stripe Payment\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SendGrid Email",
          "file": "security/vpn/integrations/external_services.py",
          "line": 477,
          "pattern": "function_name",
          "content": "name=\"SendGrid Email\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Twilio SMS",
          "file": "security/vpn/integrations/external_services.py",
          "line": 488,
          "pattern": "function_name",
          "content": "name=\"Twilio SMS\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Mixpanel Analytics",
          "file": "security/vpn/integrations/external_services.py",
          "line": 499,
          "pattern": "function_name",
          "content": "name=\"Mixpanel Analytics\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "AbuseIPDB Security",
          "file": "security/vpn/integrations/external_services.py",
          "line": 510,
          "pattern": "function_name",
          "content": "name=\"AbuseIPDB Security\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_ipv6=1\"],",
          "file": "security/vpn/protection/ipv6_dns_protection.py",
          "line": 318,
          "pattern": "disable_function",
          "content": "[\"sysctl\", \"-w\", \"net.ipv6.conf.all.disable_ipv6=1\"],",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "SQL Injection - Basic",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 237,
          "pattern": "function_name",
          "content": "name=\"SQL Injection - Basic\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SQL Injection - Advanced",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 246,
          "pattern": "function_name",
          "content": "name=\"SQL Injection - Advanced\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "XSS - Script Tags",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 256,
          "pattern": "function_name",
          "content": "name=\"XSS - Script Tags\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "XSS - Event Handlers",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 265,
          "pattern": "function_name",
          "content": "name=\"XSS - Event Handlers\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Path Traversal - Basic",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 275,
          "pattern": "function_name",
          "content": "name=\"Path Traversal - Basic\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Path Traversal - Encoded",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 284,
          "pattern": "function_name",
          "content": "name=\"Path Traversal - Encoded\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Command Injection - Basic",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 294,
          "pattern": "function_name",
          "content": "name=\"Command Injection - Basic\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Command Injection - Advanced",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 303,
          "pattern": "function_name",
          "content": "name=\"Command Injection - Advanced\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Brute Force - Login",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 313,
          "pattern": "function_name",
          "content": "name=\"Brute Force - Login\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Port Scanning",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 325,
          "pattern": "function_name",
          "content": "name=\"Port Scanning\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Malware - Common Patterns",
          "file": "security/vpn/protection/intrusion_detection.py",
          "line": 337,
          "pattern": "function_name",
          "content": "name=\"Malware - Common Patterns\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "general",
          "file": "security/vpn/protection/rate_limiter.py",
          "line": 246,
          "pattern": "function_name",
          "content": "name=\"general\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "api",
          "file": "security/vpn/protection/rate_limiter.py",
          "line": 254,
          "pattern": "function_name",
          "content": "name=\"api\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "login",
          "file": "security/vpn/protection/rate_limiter.py",
          "line": 262,
          "pattern": "function_name",
          "content": "name=\"login\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "admin",
          "file": "security/vpn/protection/rate_limiter.py",
          "line": 270,
          "pattern": "function_name",
          "content": "name=\"admin\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_connect",
          "file": "security/vpn/protection/rate_limiter.py",
          "line": 278,
          "pattern": "function_name",
          "content": "name=\"vpn_connect\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_config",
          "file": "security/vpn/protection/rate_limiter.py",
          "line": 287,
          "pattern": "function_name",
          "content": "name=\"vpn_config\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Rate Limiting",
          "file": "security/vpn/protection/ddos_protection.py",
          "line": 73,
          "pattern": "function_name",
          "content": "name=\"Rate Limiting\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Burst Protection",
          "file": "security/vpn/protection/ddos_protection.py",
          "line": 79,
          "pattern": "function_name",
          "content": "name=\"Burst Protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Suspicious Activity",
          "file": "security/vpn/protection/ddos_protection.py",
          "line": 85,
          "pattern": "function_name",
          "content": "name=\"Suspicious Activity\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "High Volume Attack",
          "file": "security/vpn/protection/ddos_protection.py",
          "line": 91,
          "pattern": "function_name",
          "content": "name=\"High Volume Attack\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sg-01",
          "file": "security/vpn/api/websocket_api.py",
          "line": 305,
          "pattern": "id\":",
          "content": "{\"id\": \"sg-01\", \"name\": \"Singapore-01\", \"ping\": 25, \"load\": 15, \"status\": \"online\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "us-01",
          "file": "security/vpn/api/websocket_api.py",
          "line": 306,
          "pattern": "id\":",
          "content": "{\"id\": \"us-01\", \"name\": \"USA-01\", \"ping\": 45, \"load\": 25, \"status\": \"online\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "de-01",
          "file": "security/vpn/api/websocket_api.py",
          "line": 307,
          "pattern": "id\":",
          "content": "{\"id\": \"de-01\", \"name\": \"Germany-01\", \"ping\": 35, \"load\": 20, \"status\": \"online\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "uk-01",
          "file": "security/vpn/api/websocket_api.py",
          "line": 308,
          "pattern": "id\":",
          "content": "{\"id\": \"uk-01\", \"name\": \"UK-01\", \"ping\": 40, \"load\": 30, \"status\": \"warning\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sg-01",
          "file": "security/vpn/api/graphql_api.py",
          "line": 67,
          "pattern": "id\":",
          "content": "{\"id\": \"sg-01\", \"name\": \"Singapore-01\", \"country\": \"SG\", \"city\": \"Singapore\", \"ping\": 25, \"load\": 15},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "us-01",
          "file": "security/vpn/api/graphql_api.py",
          "line": 68,
          "pattern": "id\":",
          "content": "{\"id\": \"us-01\", \"name\": \"USA-01\", \"country\": \"US\", \"city\": \"New York\", \"ping\": 45, \"load\": 25},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "de-01",
          "file": "security/vpn/api/graphql_api.py",
          "line": 69,
          "pattern": "id\":",
          "content": "{\"id\": \"de-01\", \"name\": \"Germany-01\", \"country\": \"DE\", \"city\": \"Frankfurt\", \"ping\": 35, \"load\": 20},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "uk-01",
          "file": "security/vpn/api/graphql_api.py",
          "line": 70,
          "pattern": "id\":",
          "content": "{\"id\": \"uk-01\", \"name\": \"UK-01\", \"country\": \"GB\", \"city\": \"London\", \"ping\": 40, \"load\": 30},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "user_001",
          "file": "security/vpn/api/graphql_api.py",
          "line": 75,
          "pattern": "id\":",
          "content": "{\"id\": \"user_001\", \"name\": \"Test User\", \"email\": \"test@example.com\", \"active\": True},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "user_002",
          "file": "security/vpn/api/graphql_api.py",
          "line": 76,
          "pattern": "id\":",
          "content": "{\"id\": \"user_002\", \"name\": \"Demo User\", \"email\": \"demo@example.com\", \"active\": True},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sg-01",
          "file": "security/vpn/monitoring/vpn_metrics.py",
          "line": 183,
          "pattern": "id\":",
          "content": "\"id\": \"sg-01\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "us-01",
          "file": "security/vpn/monitoring/vpn_metrics.py",
          "line": 189,
          "pattern": "id\":",
          "content": "\"id\": \"us-01\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "de-01",
          "file": "security/vpn/monitoring/vpn_metrics.py",
          "line": 195,
          "pattern": "id\":",
          "content": "\"id\": \"de-01\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "uk-01",
          "file": "security/vpn/monitoring/vpn_metrics.py",
          "line": 201,
          "pattern": "id\":",
          "content": "\"id\": \"uk-01\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "marketing_compliance",
          "file": "security/vpn/legal/legal_protection.py",
          "line": 87,
          "pattern": "function_name",
          "content": "check_name=\"marketing_compliance\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "technical_compliance",
          "file": "security/vpn/legal/legal_protection.py",
          "line": 133,
          "pattern": "function_name",
          "content": "check_name=\"technical_compliance\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "legal_positioning",
          "file": "security/vpn/legal/legal_protection.py",
          "line": 187,
          "pattern": "function_name",
          "content": "check_name=\"legal_positioning\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сингапур-1",
          "file": "security/vpn/client/vpn_client.py",
          "line": 103,
          "pattern": "function_name",
          "content": "name=\"Сингапур-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Франкфурт-1",
          "file": "security/vpn/client/vpn_client.py",
          "line": 114,
          "pattern": "function_name",
          "content": "name=\"Франкфурт-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Гонконг-1",
          "file": "security/vpn/client/vpn_client.py",
          "line": 125,
          "pattern": "function_name",
          "content": "name=\"Гонконг-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Токио-1",
          "file": "security/vpn/client/vpn_client.py",
          "line": 136,
          "pattern": "function_name",
          "content": "name=\"Токио-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Нью-Йорк-1",
          "file": "security/vpn/client/vpn_client.py",
          "line": 147,
          "pattern": "function_name",
          "content": "name=\"Нью-Йорк-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Торонто-1",
          "file": "security/vpn/client/vpn_client.py",
          "line": 158,
          "pattern": "function_name",
          "content": "name=\"Торонто-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "aladdin_test",
          "file": "security/vpn/protocols/openvpn_server.py",
          "line": 434,
          "pattern": "function_name",
          "content": "server_name=\"aladdin_test\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_client",
          "file": "security/vpn/protocols/openvpn_server.py",
          "line": 448,
          "pattern": "function_name",
          "content": "name=\"test_client\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wg0",
          "file": "security/vpn/protocols/wireguard_server.py",
          "line": 316,
          "pattern": "function_name",
          "content": "interface_name=\"wg0\", listen_port=51820, allowed_ips=\"10.0.0.0/24\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_client",
          "file": "security/vpn/protocols/wireguard_server.py",
          "line": 326,
          "pattern": "function_name",
          "content": "name=\"test_client\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сингапур-1",
          "file": "security/vpn/servers/foreign_server_manager.py",
          "line": 68,
          "pattern": "function_name",
          "content": "name=\"Сингапур-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Франкфурт-1",
          "file": "security/vpn/servers/foreign_server_manager.py",
          "line": 81,
          "pattern": "function_name",
          "content": "name=\"Франкфурт-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Гонконг-1",
          "file": "security/vpn/servers/foreign_server_manager.py",
          "line": 94,
          "pattern": "function_name",
          "content": "name=\"Гонконг-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Токио-1",
          "file": "security/vpn/servers/foreign_server_manager.py",
          "line": 107,
          "pattern": "function_name",
          "content": "name=\"Токио-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Нью-Йорк-1",
          "file": "security/vpn/servers/foreign_server_manager.py",
          "line": 120,
          "pattern": "function_name",
          "content": "name=\"Нью-Йорк-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Торонто-1",
          "file": "security/vpn/servers/foreign_server_manager.py",
          "line": 133,
          "pattern": "function_name",
          "content": "name=\"Торонто-1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "scripts/real_vpn_api_server.py",
          "line": 52,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "scripts/simple_vpn_server.py",
          "line": 48,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "scripts/create_vpn_qr.py",
          "line": 73,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_test_simple.html",
          "file": "scripts/create_vpn_qr.py",
          "line": 179,
          "pattern": "function_name",
          "content": "html_filename = \"vpn_test_simple.html\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "scripts/fixed_vpn_server.py",
          "line": 48,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_procedures\": {",
          "file": "scripts/put_vpn_antivirus_to_sleep.py",
          "line": 106,
          "pattern": "wake_function",
          "content": "\"wake_up_procedures\": {",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "MANAGERS": [
        {
          "function_id": "enable_ml: bool = True",
          "file": "security/managers/analytics_manager.py",
          "line": 79,
          "pattern": "enable_function",
          "content": "enable_ml: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clustering: bool = True",
          "file": "security/managers/analytics_manager.py",
          "line": 80,
          "pattern": "enable_function",
          "content": "enable_clustering: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_prediction: bool = True",
          "file": "security/managers/analytics_manager.py",
          "line": 81,
          "pattern": "enable_function",
          "content": "enable_prediction: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ml:",
          "file": "security/managers/analytics_manager.py",
          "line": 320,
          "pattern": "enable_function",
          "content": "if self.config.enable_ml:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clustering:",
          "file": "security/managers/analytics_manager.py",
          "line": 331,
          "pattern": "enable_function",
          "content": "if self.config.enable_clustering:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ml=True,",
          "file": "security/managers/analytics_manager.py",
          "line": 523,
          "pattern": "enable_function",
          "content": "enable_ml=True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clustering=True,",
          "file": "security/managers/analytics_manager.py",
          "line": 524,
          "pattern": "enable_function",
          "content": "enable_clustering=True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_prediction=True,",
          "file": "security/managers/analytics_manager.py",
          "line": 525,
          "pattern": "enable_function",
          "content": "enable_prediction=True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_on_demand\": True,",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 52,
          "pattern": "wake_function",
          "content": "\"wake_up_on_demand\": True,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_bot_to_sleep",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 133,
          "pattern": "sleep_function",
          "content": "async def put_bot_to_sleep(",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_bot(self, bot_name: str) -> bool:",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 204,
          "pattern": "wake_function",
          "content": "async def wake_up_bot(self, bot_name: str) -> bool:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\"] = datetime.utcnow()",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 232,
          "pattern": "wake_function",
          "content": "bot_info[\"wake_up_time\"] = datetime.utcnow()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\": bot_info[\"wake_up_time\"].isoformat(),",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 236,
          "pattern": "wake_function",
          "content": "\"wake_up_time\": bot_info[\"wake_up_time\"].isoformat(),",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time\"] - bot_info[\"sleep_time\"]",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 238,
          "pattern": "wake_function",
          "content": "bot_info[\"wake_up_time\"] - bot_info[\"sleep_time\"]",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_all_bots_to_sleep",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 300,
          "pattern": "sleep_function",
          "content": "async def put_all_bots_to_sleep(",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_all_bots(self) -> Dict[str, bool]:",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 328,
          "pattern": "wake_function",
          "content": "async def wake_up_all_bots(self) -> Dict[str, bool]:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_bot(bot_name)",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 339,
          "pattern": "wake_function",
          "content": "success = await self.wake_up_bot(bot_name)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_all_bots()",
          "file": "security/managers/sleep_mode_manager.py",
          "line": 748,
          "pattern": "wake_function",
          "content": "wake_results = await sleep_manager.wake_up_all_bots()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_usage",
          "file": "security/managers/monitor_manager.py",
          "line": 134,
          "pattern": "function_name",
          "content": "name=\"cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "memory_usage",
          "file": "security/managers/monitor_manager.py",
          "line": 147,
          "pattern": "function_name",
          "content": "name=\"memory_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disk_usage",
          "file": "security/managers/monitor_manager.py",
          "line": 161,
          "pattern": "function_name",
          "content": "name=\"disk_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "network_bytes_sent",
          "file": "security/managers/monitor_manager.py",
          "line": 174,
          "pattern": "function_name",
          "content": "name=\"network_bytes_sent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "network_bytes_recv",
          "file": "security/managers/monitor_manager.py",
          "line": 184,
          "pattern": "function_name",
          "content": "name=\"network_bytes_recv\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "high_cpu_usage",
          "file": "security/managers/monitor_manager.py",
          "line": 396,
          "pattern": "function_name",
          "content": "name=\"high_cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "high_memory_usage",
          "file": "security/managers/monitor_manager.py",
          "line": 403,
          "pattern": "function_name",
          "content": "name=\"high_memory_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "high_disk_usage",
          "file": "security/managers/monitor_manager.py",
          "line": 410,
          "pattern": "function_name",
          "content": "name=\"high_disk_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_ml_analysis = self.config.get(\"enable_ml_analysis\", True)",
          "file": "security/managers/alert_manager.py",
          "line": 182,
          "pattern": "enable_function",
          "content": "self.enable_ml_analysis = self.config.get(\"enable_ml_analysis\", True)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_rate_limiting = self.config.get(",
          "file": "security/managers/alert_manager.py",
          "line": 183,
          "pattern": "enable_function",
          "content": "self.enable_rate_limiting = self.config.get(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_rate_limiting\", True",
          "file": "security/managers/alert_manager.py",
          "line": 184,
          "pattern": "enable_function",
          "content": "\"enable_rate_limiting\", True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "security_breach",
          "file": "security/managers/alert_manager.py",
          "line": 221,
          "pattern": "function_name",
          "content": "name=\"security_breach\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "system_warning",
          "file": "security/managers/alert_manager.py",
          "line": 233,
          "pattern": "function_name",
          "content": "name=\"system_warning\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "performance_issue",
          "file": "security/managers/alert_manager.py",
          "line": 241,
          "pattern": "function_name",
          "content": "name=\"performance_issue\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "anomaly_detected",
          "file": "security/managers/alert_manager.py",
          "line": 249,
          "pattern": "function_name",
          "content": "name=\"anomaly_detected\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SCUMWARE.org",
          "file": "security/managers/external_api_manager.py",
          "line": 109,
          "pattern": "function_name",
          "content": "name=\"SCUMWARE.org\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Open Threat Exchange",
          "file": "security/managers/external_api_manager.py",
          "line": 118,
          "pattern": "function_name",
          "content": "name=\"Open Threat Exchange\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "APIP.cc",
          "file": "security/managers/external_api_manager.py",
          "line": 128,
          "pattern": "function_name",
          "content": "name=\"APIP.cc\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ReallyFreeGeoIP",
          "file": "security/managers/external_api_manager.py",
          "line": 137,
          "pattern": "function_name",
          "content": "name=\"ReallyFreeGeoIP\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Rapid Email Verifier",
          "file": "security/managers/external_api_manager.py",
          "line": 147,
          "pattern": "function_name",
          "content": "name=\"Rapid Email Verifier\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "NoParam Email Validator",
          "file": "security/managers/external_api_manager.py",
          "line": 156,
          "pattern": "function_name",
          "content": "name=\"NoParam Email Validator\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Главная панель безопасности",
          "file": "security/managers/dashboard_manager.py",
          "line": 571,
          "pattern": "function_name",
          "content": "name=\"Главная панель безопасности\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/managers/voice_control_manager.py",
          "line": 156,
          "pattern": "function_name",
          "content": "f\"MessengerIntegration(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Telegram",
          "file": "security/managers/voice_control_manager.py",
          "line": 259,
          "pattern": "function_name",
          "content": "name=\"Telegram\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "WhatsApp",
          "file": "security/managers/voice_control_manager.py",
          "line": 272,
          "pattern": "function_name",
          "content": "name=\"WhatsApp\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Viber",
          "file": "security/managers/voice_control_manager.py",
          "line": 282,
          "pattern": "function_name",
          "content": "name=\"Viber\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SmartNotificationManager",
          "file": "security/managers/smart_notification_manager.py",
          "line": 189,
          "pattern": "function_name",
          "content": "name=\"SmartNotificationManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ElderlyInterfaceManager",
          "file": "security/managers/elderly_interface_manager_enhanced.py",
          "line": 77,
          "pattern": "function_name",
          "content": "self.name = \"ElderlyInterfaceManager\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_manager(manager_type)",
          "file": "scripts/test_managers_integration.py",
          "line": 40,
          "pattern": "enable_function",
          "content": "result = await sfm.enable_manager(manager_type)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_{manager_type}\"] = result",
          "file": "scripts/test_managers_integration.py",
          "line": 41,
          "pattern": "enable_function",
          "content": "test_results[f\"enable_{manager_type}\"] = result",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_manager(manager_type)",
          "file": "scripts/test_managers_integration.py",
          "line": 59,
          "pattern": "disable_function",
          "content": "result = await sfm.disable_manager(manager_type)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_{manager_type}\"] = result",
          "file": "scripts/test_managers_integration.py",
          "line": 60,
          "pattern": "disable_function",
          "content": "test_results[f\"disable_{manager_type}\"] = result",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        }
      ],
      "ANTIVIRUS": [
        {
          "function_id": "enable_internal: bool = True",
          "file": "security/antivirus/antivirus_security_system.py",
          "line": 41,
          "pattern": "enable_function",
          "content": "enable_internal: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clamav: bool = True",
          "file": "security/antivirus/antivirus_security_system.py",
          "line": 42,
          "pattern": "enable_function",
          "content": "enable_clamav: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_malware_scanner: bool = True",
          "file": "security/antivirus/antivirus_security_system.py",
          "line": 43,
          "pattern": "enable_function",
          "content": "enable_malware_scanner: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_internal:",
          "file": "security/antivirus/antivirus_security_system.py",
          "line": 81,
          "pattern": "enable_function",
          "content": "if self.config.enable_internal:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clamav:",
          "file": "security/antivirus/antivirus_security_system.py",
          "line": 86,
          "pattern": "enable_function",
          "content": "if self.config.enable_clamav:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_malware_scanner:",
          "file": "security/antivirus/antivirus_security_system.py",
          "line": 91,
          "pattern": "enable_function",
          "content": "if self.config.enable_malware_scanner:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "sig_001",
          "file": "security/antivirus/core/antivirus_core.py",
          "line": 163,
          "pattern": "id\":",
          "content": "\"id\": \"sig_001\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sig_002",
          "file": "security/antivirus/core/antivirus_core.py",
          "line": 174,
          "pattern": "id\":",
          "content": "\"id\": \"sig_002\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sig_003",
          "file": "security/antivirus/core/antivirus_core.py",
          "line": 184,
          "pattern": "id\":",
          "content": "\"id\": \"sig_003\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "sig_004",
          "file": "security/antivirus/core/antivirus_core.py",
          "line": 192,
          "pattern": "id\":",
          "content": "\"id\": \"sig_004\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ransomware Extension",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 80,
          "pattern": "function_name",
          "content": "name=\"Ransomware Extension\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ransomware Note",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 88,
          "pattern": "function_name",
          "content": "name=\"Ransomware Note\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Suspicious PowerShell",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 97,
          "pattern": "function_name",
          "content": "name=\"Suspicious PowerShell\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Suspicious Download",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 105,
          "pattern": "function_name",
          "content": "name=\"Suspicious Download\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Keylogger Pattern",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 117,
          "pattern": "function_name",
          "content": "name=\"Keylogger Pattern\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Screen Capture",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 125,
          "pattern": "function_name",
          "content": "name=\"Screen Capture\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Reverse Shell",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 134,
          "pattern": "function_name",
          "content": "name=\"Reverse Shell\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Suspicious Network",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 142,
          "pattern": "function_name",
          "content": "name=\"Suspicious Network\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "C&C Communication",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 153,
          "pattern": "function_name",
          "content": "name=\"C&C Communication\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Adware Behavior",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 162,
          "pattern": "function_name",
          "content": "name=\"Adware Behavior\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Rootkit Hiding",
          "file": "security/antivirus/scanners/malware_scanner.py",
          "line": 171,
          "pattern": "function_name",
          "content": "name=\"Rootkit Hiding\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "MOBILE": [
        {
          "function_id": "vpn_only",
          "file": "security/mobile/mobile_api.py",
          "line": 108,
          "pattern": "id\":",
          "content": "\"id\": \"vpn_only\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "antivirus_only",
          "file": "security/mobile/mobile_api.py",
          "line": 119,
          "pattern": "id\":",
          "content": "\"id\": \"antivirus_only\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_antivirus",
          "file": "security/mobile/mobile_api.py",
          "line": 130,
          "pattern": "id\":",
          "content": "\"id\": \"vpn_antivirus\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "smart_protection",
          "file": "security/mobile/mobile_api.py",
          "line": 141,
          "pattern": "id\":",
          "content": "\"id\": \"smart_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "fast",
          "file": "security/mobile/mobile_api.py",
          "line": 154,
          "pattern": "id\":",
          "content": "\"id\": \"fast\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "balanced",
          "file": "security/mobile/mobile_api.py",
          "line": 160,
          "pattern": "id\":",
          "content": "\"id\": \"balanced\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "secure",
          "file": "security/mobile/mobile_api.py",
          "line": 166,
          "pattern": "id\":",
          "content": "\"id\": \"secure\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "singapore",
          "file": "security/mobile/mobile_api.py",
          "line": 173,
          "pattern": "id\":",
          "content": "{\"id\": \"singapore\", \"name\": \"🇸🇬 Singapore\", \"flag\": \"🇸🇬\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russia",
          "file": "security/mobile/mobile_api.py",
          "line": 174,
          "pattern": "id\":",
          "content": "{\"id\": \"russia\", \"name\": \"🇷🇺 Russia\", \"flag\": \"🇷🇺\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "netherlands",
          "file": "security/mobile/mobile_api.py",
          "line": 175,
          "pattern": "id\":",
          "content": "{\"id\": \"netherlands\", \"name\": \"🇳🇱 Netherlands\", \"flag\": \"🇳🇱\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "usa",
          "file": "security/mobile/mobile_api.py",
          "line": 176,
          "pattern": "id\":",
          "content": "{\"id\": \"usa\", \"name\": \"🇺🇸 USA\", \"flag\": \"🇺🇸\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "japan",
          "file": "security/mobile/mobile_api.py",
          "line": 177,
          "pattern": "id\":",
          "content": "{\"id\": \"japan\", \"name\": \"🇯🇵 Japan\", \"flag\": \"🇯🇵\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_mobile_security_to_sleep",
          "file": "scripts/put_mobile_security_to_sleep_simple.py",
          "line": 12,
          "pattern": "sleep_function",
          "content": "def put_mobile_security_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_mobile_security_to_sleep",
          "file": "scripts/put_mobile_security_to_sleep.py",
          "line": 16,
          "pattern": "sleep_function",
          "content": "def put_mobile_security_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_gamification\": True,",
          "file": "scripts/integrate_mobile_agent.py",
          "line": 43,
          "pattern": "enable_function",
          "content": "\"enable_gamification\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_emotions\": True,",
          "file": "scripts/integrate_mobile_agent.py",
          "line": 44,
          "pattern": "enable_function",
          "content": "\"enable_emotions\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_command\": \"python3 -c \\\"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent активирован')\\\"\",",
          "file": "scripts/integrate_mobile_agent.py",
          "line": 91,
          "pattern": "wake_function",
          "content": "\"wake_up_command\": \"python3 -c \\\"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent активирован')\\\"\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_mobile_security_100_percent_to_sleep",
          "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
          "line": 13,
          "pattern": "sleep_function",
          "content": "def put_mobile_security_100_percent_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": [",
          "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
          "line": 61,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_priority\": \"HIGH\",",
          "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
          "line": 112,
          "pattern": "wake_function",
          "content": "\"wake_up_priority\": \"HIGH\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
          "line": 165,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "AI_AGENTS": [
        {
          "function_id": "MobileSecurityAgent",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 321,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"MobileSecurityAgent\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_location_tracking = True",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 375,
          "pattern": "enable_function",
          "content": "self.enable_location_tracking = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_app_monitoring = True",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 376,
          "pattern": "enable_function",
          "content": "self.enable_app_monitoring = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_monitoring = True",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 377,
          "pattern": "enable_function",
          "content": "self.enable_network_monitoring = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_permission_monitoring = True",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 378,
          "pattern": "enable_function",
          "content": "self.enable_permission_monitoring = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption_check = True",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 379,
          "pattern": "enable_function",
          "content": "self.enable_encryption_check = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_root_jailbreak_detection = True",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 380,
          "pattern": "enable_function",
          "content": "self.enable_root_jailbreak_detection = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption_check:",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 1429,
          "pattern": "enable_function",
          "content": "if self.enable_encryption_check:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_root_jailbreak_detection:",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 1433,
          "pattern": "enable_function",
          "content": "if self.enable_root_jailbreak_detection:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_app_monitoring:",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 1437,
          "pattern": "enable_function",
          "content": "if self.enable_app_monitoring:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_permission_monitoring:",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 1441,
          "pattern": "enable_function",
          "content": "if self.enable_permission_monitoring:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_monitoring:",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 1445,
          "pattern": "enable_function",
          "content": "if self.enable_network_monitoring:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_location_tracking:",
          "file": "security/ai_agents/mobile_security_agent.py",
          "line": 1963,
          "pattern": "enable_function",
          "content": "if not self.enable_location_tracking:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cpu_optimization\": True,",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 381,
          "pattern": "enable_function",
          "content": "\"enable_cpu_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_memory_optimization\": True,",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 382,
          "pattern": "enable_function",
          "content": "\"enable_memory_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_optimization\": True,",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 383,
          "pattern": "enable_function",
          "content": "\"enable_network_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_disk_optimization\": True,",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 384,
          "pattern": "enable_function",
          "content": "\"enable_disk_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cache_optimization\": True,",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 385,
          "pattern": "enable_function",
          "content": "\"enable_cache_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ai_optimization\": True,",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 386,
          "pattern": "enable_function",
          "content": "\"enable_ai_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_cpu_optimization\"]:",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 833,
          "pattern": "enable_function",
          "content": "if self.agent_config[\"enable_cpu_optimization\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_memory_optimization\"]:",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 848,
          "pattern": "enable_function",
          "content": "if self.agent_config[\"enable_memory_optimization\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_optimization\"]:",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 863,
          "pattern": "enable_function",
          "content": "if self.agent_config[\"enable_network_optimization\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_disk_optimization\"]:",
          "file": "security/ai_agents/performance_optimization_agent.py",
          "line": 877,
          "pattern": "enable_function",
          "content": "if self.agent_config[\"enable_disk_optimization\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ml_detection\": True,",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 375,
          "pattern": "enable_function",
          "content": "\"enable_ml_detection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_behavioral_analysis\": True,",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 376,
          "pattern": "enable_function",
          "content": "\"enable_behavioral_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_realtime_analysis\": True,",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 377,
          "pattern": "enable_function",
          "content": "\"enable_realtime_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_threat_intelligence\": True,",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 378,
          "pattern": "enable_function",
          "content": "\"enable_threat_intelligence\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_response\": False,",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 379,
          "pattern": "enable_function",
          "content": "\"enable_auto_response\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ml_detection\"]:",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 579,
          "pattern": "enable_function",
          "content": "if self.agent_config[\"enable_ml_detection\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_behavioral_analysis\"]:",
          "file": "security/ai_agents/threat_detection_agent.py",
          "line": 584,
          "pattern": "enable_function",
          "content": "if self.agent_config[\"enable_behavioral_analysis\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "PasswordSecurityAgent",
          "file": "security/ai_agents/password_security_agent.py",
          "line": 379,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"PasswordSecurityAgent\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/password_security_agent.py",
          "line": 1183,
          "pattern": "function_name",
          "content": "f\"PasswordSecurityAgent(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function\",",
          "file": "security/ai_agents/security_quality_analyzer.py",
          "line": 105,
          "pattern": "enable_function",
          "content": "\"enable_function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function\",",
          "file": "security/ai_agents/security_quality_analyzer.py",
          "line": 106,
          "pattern": "disable_function",
          "content": "\"disable_function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "ContextualAlertSystem",
          "file": "security/ai_agents/contextual_alert_system.py",
          "line": 119,
          "pattern": "function_name",
          "content": "name=\"ContextualAlertSystem\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_function\",",
          "file": "security/ai_agents/security_quality_analyzer_enhanced.py",
          "line": 51,
          "pattern": "disable_function",
          "content": "\"register_function\", \"unregister_function\", \"enable_function\", \"disable_function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function\", \"disable_function\",",
          "file": "security/ai_agents/security_quality_analyzer_enhanced.py",
          "line": 51,
          "pattern": "enable_function",
          "content": "\"register_function\", \"unregister_function\", \"enable_function\", \"disable_function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "РБК",
          "file": "security/ai_agents/news_scraper.py",
          "line": 131,
          "pattern": "function_name",
          "content": "name=\"РБК\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ведомости",
          "file": "security/ai_agents/news_scraper.py",
          "line": 154,
          "pattern": "function_name",
          "content": "name=\"Ведомости\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Коммерсантъ",
          "file": "security/ai_agents/news_scraper.py",
          "line": 177,
          "pattern": "function_name",
          "content": "name=\"Коммерсантъ\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "РИА Новости",
          "file": "security/ai_agents/news_scraper.py",
          "line": 200,
          "pattern": "function_name",
          "content": "name=\"РИА Новости\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_response = (",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 326,
          "pattern": "enable_function",
          "content": "self.enable_auto_response = (",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_response\", True) if config else True",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 327,
          "pattern": "enable_function",
          "content": "config.get(\"enable_auto_response\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_response:",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 469,
          "pattern": "enable_function",
          "content": "if self.enable_auto_response:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_response = False",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 1532,
          "pattern": "enable_function",
          "content": "self.enable_auto_response = False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 1558,
          "pattern": "function_name",
          "content": "f\"IncidentResponseManager(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_response})\"",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 1560,
          "pattern": "enable_function",
          "content": "f\"auto_response={self.enable_auto_response})\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_response,",
          "file": "security/ai_agents/incident_response_agent.py",
          "line": 1954,
          "pattern": "enable_function",
          "content": "\"auto_response_enabled\": self.enable_auto_response,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "ThreatIntelligenceAgent",
          "file": "security/ai_agents/threat_intelligence_agent.py",
          "line": 443,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"ThreatIntelligenceAgent\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/network_security_agent.py",
          "line": 300,
          "pattern": "function_name",
          "content": "f\"NetworkSecurityAgent(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "VoiceResponseGenerator",
          "file": "security/ai_agents/voice_response_generator.py",
          "line": 102,
          "pattern": "function_name",
          "content": "name=\"VoiceResponseGenerator\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_emotion_detection\": True,",
          "file": "security/ai_agents/voice_response_generator.py",
          "line": 159,
          "pattern": "enable_function",
          "content": "\"enable_emotion_detection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_pronunciation_correction\": True,",
          "file": "security/ai_agents/voice_response_generator.py",
          "line": 160,
          "pattern": "enable_function",
          "content": "\"enable_pronunciation_correction\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_voice_optimization\": True,",
          "file": "security/ai_agents/voice_response_generator.py",
          "line": 161,
          "pattern": "enable_function",
          "content": "\"enable_voice_optimization\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_audio_compression\": True,",
          "file": "security/ai_agents/voice_response_generator.py",
          "line": 162,
          "pattern": "enable_function",
          "content": "\"enable_audio_compression\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_pronunciation_correction\"]:",
          "file": "security/ai_agents/voice_response_generator.py",
          "line": 448,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_pronunciation_correction\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_family_notifications: bool = True",
          "file": "security/ai_agents/anti_fraud_master_ai.py",
          "line": 138,
          "pattern": "enable_function",
          "content": "enable_family_notifications: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_emergency_alerts: bool = True",
          "file": "security/ai_agents/anti_fraud_master_ai.py",
          "line": 139,
          "pattern": "enable_function",
          "content": "enable_emergency_alerts: bool = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Тестовый звонящий",
          "file": "security/ai_agents/anti_fraud_master_ai.py",
          "line": 2376,
          "pattern": "function_name",
          "content": "caller_name=\"Тестовый звонящий\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сбербанк",
          "file": "security/ai_agents/financial_protection_hub.py",
          "line": 181,
          "pattern": "function_name",
          "content": "bank_name=\"Сбербанк\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ВТБ",
          "file": "security/ai_agents/financial_protection_hub.py",
          "line": 189,
          "pattern": "function_name",
          "content": "bank_name=\"ВТБ\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тинькофф",
          "file": "security/ai_agents/financial_protection_hub.py",
          "line": 197,
          "pattern": "function_name",
          "content": "bank_name=\"Тинькофф\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Альфа-Банк",
          "file": "security/ai_agents/financial_protection_hub.py",
          "line": 205,
          "pattern": "function_name",
          "content": "bank_name=\"Альфа-Банк\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Райффайзенбанк",
          "file": "security/ai_agents/financial_protection_hub.py",
          "line": 213,
          "pattern": "function_name",
          "content": "bank_name=\"Райффайзенбанк\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Подозрительные URL паттерны",
          "file": "security/ai_agents/phishing_protection_agent.py",
          "line": 417,
          "pattern": "function_name",
          "content": "name=\"Подозрительные URL паттерны\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Поддельные банковские домены",
          "file": "security/ai_agents/phishing_protection_agent.py",
          "line": 427,
          "pattern": "function_name",
          "content": "name=\"Поддельные банковские домены\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Срочные финансовые сообщения",
          "file": "security/ai_agents/phishing_protection_agent.py",
          "line": 437,
          "pattern": "function_name",
          "content": "name=\"Срочные финансовые сообщения\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Подозрительные вложения",
          "file": "security/ai_agents/phishing_protection_agent.py",
          "line": 447,
          "pattern": "function_name",
          "content": "name=\"Подозрительные вложения\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Фишинговые ключевые слова",
          "file": "security/ai_agents/phishing_protection_agent.py",
          "line": 457,
          "pattern": "function_name",
          "content": "name=\"Фишинговые ключевые слова\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "MobileSecurityAgent",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 321,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"MobileSecurityAgent\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_location_tracking = True",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 375,
          "pattern": "enable_function",
          "content": "self.enable_location_tracking = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_app_monitoring = True",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 376,
          "pattern": "enable_function",
          "content": "self.enable_app_monitoring = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_monitoring = True",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 377,
          "pattern": "enable_function",
          "content": "self.enable_network_monitoring = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_permission_monitoring = True",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 378,
          "pattern": "enable_function",
          "content": "self.enable_permission_monitoring = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption_check = True",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 379,
          "pattern": "enable_function",
          "content": "self.enable_encryption_check = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_root_jailbreak_detection = True",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 380,
          "pattern": "enable_function",
          "content": "self.enable_root_jailbreak_detection = True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_encryption_check:",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 1429,
          "pattern": "enable_function",
          "content": "if self.enable_encryption_check:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_root_jailbreak_detection:",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 1433,
          "pattern": "enable_function",
          "content": "if self.enable_root_jailbreak_detection:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_app_monitoring:",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 1437,
          "pattern": "enable_function",
          "content": "if self.enable_app_monitoring:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_permission_monitoring:",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 1441,
          "pattern": "enable_function",
          "content": "if self.enable_permission_monitoring:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_network_monitoring:",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 1445,
          "pattern": "enable_function",
          "content": "if self.enable_network_monitoring:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_location_tracking:",
          "file": "security/ai_agents/mobile_security_agent_enhanced.py",
          "line": 1963,
          "pattern": "enable_function",
          "content": "if not self.enable_location_tracking:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/malware_detection_agent.py",
          "line": 123,
          "pattern": "function_name",
          "content": "f\"name='{self.name}', malware_type={self.malware_type}, \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Generic Trojan",
          "file": "security/ai_agents/malware_detection_agent.py",
          "line": 322,
          "pattern": "function_name",
          "content": "name=\"Generic Trojan\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ransomware Pattern",
          "file": "security/ai_agents/malware_detection_agent.py",
          "line": 331,
          "pattern": "function_name",
          "content": "name=\"Ransomware Pattern\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Suspicious File Extensions",
          "file": "security/ai_agents/malware_detection_agent.py",
          "line": 340,
          "pattern": "function_name",
          "content": "name=\"Suspicious File Extensions\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SpeechRecognitionEngine",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 107,
          "pattern": "function_name",
          "content": "name=\"SpeechRecognitionEngine\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_noise_reduction\": True,",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 160,
          "pattern": "enable_function",
          "content": "\"enable_noise_reduction\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_voice_activity_detection\": True,",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 161,
          "pattern": "enable_function",
          "content": "\"enable_voice_activity_detection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_speaker_diarization\": False,",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 162,
          "pattern": "enable_function",
          "content": "\"enable_speaker_diarization\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_emotion_recognition\": True,",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 163,
          "pattern": "enable_function",
          "content": "\"enable_emotion_recognition\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sentiment_analysis\": True,",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 164,
          "pattern": "enable_function",
          "content": "\"enable_sentiment_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_keyword_detection\": True,",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 165,
          "pattern": "enable_function",
          "content": "\"enable_keyword_detection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_noise_reduction\"]:",
          "file": "security/ai_agents/speech_recognition_engine.py",
          "line": 396,
          "pattern": "enable_function",
          "content": "if self.config[\"enable_noise_reduction\"]:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/password_security_agent_enhanced_v2.py",
          "line": 1332,
          "pattern": "function_name",
          "content": "f\"PasswordSecurityAgent(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "NaturalLanguageProcessor",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 108,
          "pattern": "function_name",
          "content": "name=\"NaturalLanguageProcessor\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_entity_recognition\": True,",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 153,
          "pattern": "enable_function",
          "content": "\"enable_entity_recognition\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sentiment_analysis\": True,",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 154,
          "pattern": "enable_function",
          "content": "\"enable_sentiment_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_intent_classification\": True,",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 155,
          "pattern": "enable_function",
          "content": "\"enable_intent_classification\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_context_analysis\": True,",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 156,
          "pattern": "enable_function",
          "content": "\"enable_context_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_keyword_extraction\": True,",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 157,
          "pattern": "enable_function",
          "content": "\"enable_keyword_extraction\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_emotion_detection\": True,",
          "file": "security/ai_agents/natural_language_processor.py",
          "line": 158,
          "pattern": "enable_function",
          "content": "\"enable_emotion_detection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Уведомление о безопасности",
          "file": "security/ai_agents/notification_bot.py",
          "line": 1185,
          "pattern": "function_name",
          "content": "name=\"Уведомление о безопасности\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Семейное уведомление",
          "file": "security/ai_agents/notification_bot.py",
          "line": 1205,
          "pattern": "function_name",
          "content": "name=\"Семейное уведомление\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Экстренное уведомление",
          "file": "security/ai_agents/notification_bot.py",
          "line": 1228,
          "pattern": "function_name",
          "content": "name=\"Экстренное уведомление\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/malware_detection_agent_enhanced.py",
          "line": 119,
          "pattern": "function_name",
          "content": "f\"name='{self.name}', malware_type={self.malware_type}, \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Generic Trojan",
          "file": "security/ai_agents/malware_detection_agent_enhanced.py",
          "line": 297,
          "pattern": "function_name",
          "content": "name=\"Generic Trojan\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ransomware Pattern",
          "file": "security/ai_agents/malware_detection_agent_enhanced.py",
          "line": 306,
          "pattern": "function_name",
          "content": "name=\"Ransomware Pattern\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Suspicious File Extensions",
          "file": "security/ai_agents/malware_detection_agent_enhanced.py",
          "line": 315,
          "pattern": "function_name",
          "content": "name=\"Suspicious File Extensions\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сбербанк",
          "file": "security/ai_agents/financial_protection_hub_enhanced.py",
          "line": 181,
          "pattern": "function_name",
          "content": "bank_name=\"Сбербанк\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ВТБ",
          "file": "security/ai_agents/financial_protection_hub_enhanced.py",
          "line": 189,
          "pattern": "function_name",
          "content": "bank_name=\"ВТБ\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тинькофф",
          "file": "security/ai_agents/financial_protection_hub_enhanced.py",
          "line": 197,
          "pattern": "function_name",
          "content": "bank_name=\"Тинькофф\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Альфа-Банк",
          "file": "security/ai_agents/financial_protection_hub_enhanced.py",
          "line": 205,
          "pattern": "function_name",
          "content": "bank_name=\"Альфа-Банк\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Райффайзенбанк",
          "file": "security/ai_agents/financial_protection_hub_enhanced.py",
          "line": 213,
          "pattern": "function_name",
          "content": "bank_name=\"Райффайзенбанк\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "VoiceSecurityValidator",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 105,
          "pattern": "function_name",
          "content": "name=\"VoiceSecurityValidator\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_time_analysis\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 252,
          "pattern": "enable_function",
          "content": "\"enable_time_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_location_analysis\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 253,
          "pattern": "enable_function",
          "content": "\"enable_location_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_user_behavior_analysis\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 254,
          "pattern": "enable_function",
          "content": "\"enable_user_behavior_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_device_analysis\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 255,
          "pattern": "enable_function",
          "content": "\"enable_device_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_pattern_matching\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 260,
          "pattern": "enable_function",
          "content": "\"enable_pattern_matching\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_keyword_analysis\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 261,
          "pattern": "enable_function",
          "content": "\"enable_keyword_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_context_analysis\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 262,
          "pattern": "enable_function",
          "content": "\"enable_context_analysis\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ml_detection\": True,",
          "file": "security/ai_agents/voice_security_validator.py",
          "line": 263,
          "pattern": "enable_function",
          "content": "\"enable_ml_detection\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/parent_control_panel.py",
          "line": 1224,
          "pattern": "function_name",
          "content": "f\"ParentControlPanel(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сын/Дочь",
          "file": "security/ai_agents/emergency_response_system.py",
          "line": 160,
          "pattern": "function_name",
          "content": "name=\"Сын/Дочь\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Внук/Внучка",
          "file": "security/ai_agents/emergency_response_system.py",
          "line": 174,
          "pattern": "function_name",
          "content": "name=\"Внук/Внучка\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Экстренный контакт",
          "file": "security/ai_agents/emergency_response_system.py",
          "line": 187,
          "pattern": "function_name",
          "content": "name=\"Экстренный контакт\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_enhanced_monitoring\",",
          "file": "security/ai_agents/emergency_response_system.py",
          "line": 529,
          "pattern": "enable_function",
          "content": "\"enable_enhanced_monitoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "MobileUserAIAgent",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 135,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"MobileUserAIAgent\", config=None):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Temporal Analysis Engine",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 189,
          "pattern": "function_name",
          "content": "english_name=\"Temporal Analysis Engine\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Движок временного анализа",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 190,
          "pattern": "function_name",
          "content": "russian_name=\"Движок временного анализа\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Advanced Threat Detection",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 215,
          "pattern": "function_name",
          "content": "english_name=\"Advanced Threat Detection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Умный детектор угроз",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 216,
          "pattern": "function_name",
          "content": "russian_name=\"Умный детектор угроз\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Family Security Manager",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 240,
          "pattern": "function_name",
          "content": "english_name=\"Family Security Manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Семейный защитник",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 241,
          "pattern": "function_name",
          "content": "russian_name=\"Семейный защитник\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "VPN Security System",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 264,
          "pattern": "function_name",
          "content": "english_name=\"VPN Security System\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Защитный туннель",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 265,
          "pattern": "function_name",
          "content": "russian_name=\"Защитный туннель\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Antivirus Protection",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 285,
          "pattern": "function_name",
          "content": "english_name=\"Antivirus Protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Антивирусный щит",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 286,
          "pattern": "function_name",
          "content": "russian_name=\"Антивирусный щит\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Behavioral Analysis Engine",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 306,
          "pattern": "function_name",
          "content": "english_name=\"Behavioral Analysis Engine\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Анализатор поведения",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 307,
          "pattern": "function_name",
          "content": "russian_name=\"Анализатор поведения\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Data Encryption Manager",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 331,
          "pattern": "function_name",
          "content": "english_name=\"Data Encryption Manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Шифровальщик данных",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 332,
          "pattern": "function_name",
          "content": "russian_name=\"Шифровальщик данных\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Network Security Monitor",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 354,
          "pattern": "function_name",
          "content": "english_name=\"Network Security Monitor\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Сетевой страж",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 355,
          "pattern": "function_name",
          "content": "russian_name=\"Сетевой страж\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Child Safety Manager",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 377,
          "pattern": "function_name",
          "content": "english_name=\"Child Safety Manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Детский защитник",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 378,
          "pattern": "function_name",
          "content": "russian_name=\"Детский защитник\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Smart Notification System",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 398,
          "pattern": "function_name",
          "content": "english_name=\"Smart Notification System\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Умные уведомления",
          "file": "security/ai_agents/mobile_user_ai_agent.py",
          "line": 399,
          "pattern": "function_name",
          "content": "russian_name=\"Умные уведомления\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "security/ai_agents/behavioral_analytics_engine.py",
          "line": 126,
          "pattern": "function_name",
          "content": "f\"BehavioralAnalyticsEngine(name='{self.name}', \"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "security/ai_agents/fraud_detection_api.py",
          "line": 43,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ComplianceAgent",
          "file": "security/ai_agents/compliance_agent.py",
          "line": 295,
          "pattern": "function_name",
          "content": "def __init__(self, name=\"ComplianceAgent\"):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        }
      ],
      "SCRIPTS": [
        {
          "function_id": "advanced_alerting_system",
          "file": "scripts/integrate_advanced_alerting.py",
          "line": 25,
          "pattern": "function_id",
          "content": "function_id=\"advanced_alerting_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Advanced Alerting System",
          "file": "scripts/integrate_advanced_alerting.py",
          "line": 26,
          "pattern": "function_name",
          "content": "name=\"Advanced Alerting System\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_functions_to_sleep",
          "file": "scripts/put_functions_to_sleep.py",
          "line": 12,
          "pattern": "sleep_function",
          "content": "def put_functions_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "IntegrateAdvancedMonitoringSimple",
          "file": "scripts/integrate_advanced_monitoring_simple.py",
          "line": 14,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"IntegrateAdvancedMonitoringSimple\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Test Integration Rule",
          "file": "scripts/integrate_advanced_monitoring_simple.py",
          "line": 69,
          "pattern": "function_name",
          "content": "name=\"Test Integration Rule\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test.integration",
          "file": "scripts/integrate_advanced_monitoring_simple.py",
          "line": 70,
          "pattern": "function_name",
          "content": "metric_name=\"test.integration\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_contextual_alert_to_sleep",
          "file": "scripts/put_contextual_alert_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_contextual_alert_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_functions\": sum(1 for f in functions.values()",
          "file": "scripts/final_sfm_registry_fix.py",
          "line": 332,
          "pattern": "enable_function",
          "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "network_monitoring",
          "file": "scripts/update_network_monitoring_sfm.py",
          "line": 96,
          "pattern": "function_id",
          "content": "function_id = \"network_monitoring\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "RegisterRussianIntegrations",
          "file": "scripts/register_russian_integrations.py",
          "line": 47,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"RegisterRussianIntegrations\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "load_balancer",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 28,
          "pattern": "id\":",
          "content": "\"id\": \"load_balancer\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "api_gateway",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 37,
          "pattern": "id\":",
          "content": "\"id\": \"api_gateway\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "rate_limiter",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 46,
          "pattern": "id\":",
          "content": "\"id\": \"rate_limiter\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "circuit_breaker",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 55,
          "pattern": "id\":",
          "content": "\"id\": \"circuit_breaker\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "analytics_manager",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 66,
          "pattern": "id\":",
          "content": "\"id\": \"analytics_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "dashboard_manager",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 75,
          "pattern": "id\":",
          "content": "\"id\": \"dashboard_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "monitor_manager",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 84,
          "pattern": "id\":",
          "content": "\"id\": \"monitor_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "report_manager",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 93,
          "pattern": "id\":",
          "content": "\"id\": \"report_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "behavioral_analysis_agent",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 102,
          "pattern": "id\":",
          "content": "\"id\": \"behavioral_analysis_agent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "privacy_manager",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 113,
          "pattern": "id\":",
          "content": "\"id\": \"privacy_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "trust_scoring",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 122,
          "pattern": "id\":",
          "content": "\"id\": \"trust_scoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "behavioral_analysis",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 131,
          "pattern": "id\":",
          "content": "\"id\": \"behavioral_analysis\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "child_protection",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 142,
          "pattern": "id\":",
          "content": "\"id\": \"child_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "network_security_bot",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 153,
          "pattern": "id\":",
          "content": "\"id\": \"network_security_bot\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "device_security_bot",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 162,
          "pattern": "id\":",
          "content": "\"id\": \"device_security_bot\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "analytics_bot",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 171,
          "pattern": "id\":",
          "content": "\"id\": \"analytics_bot\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "antivirus_core",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 182,
          "pattern": "id\":",
          "content": "\"id\": \"antivirus_core\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "vpn_core",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 193,
          "pattern": "id\":",
          "content": "\"id\": \"vpn_core\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "coppa_compliance",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 204,
          "pattern": "id\":",
          "content": "\"id\": \"coppa_compliance\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_child_protection",
          "file": "scripts/register_all_functions_in_sfm.py",
          "line": 213,
          "pattern": "id\":",
          "content": "\"id\": \"russian_child_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "external_api_manager",
          "file": "scripts/integrate_external_apis_simple.py",
          "line": 27,
          "pattern": "function_id",
          "content": "function_id=\"external_api_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "External API Manager",
          "file": "scripts/integrate_external_apis_simple.py",
          "line": 28,
          "pattern": "function_name",
          "content": "name=\"External API Manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_basic_protection\",",
          "file": "scripts/simplify_interface.py",
          "line": 132,
          "pattern": "enable_function",
          "content": "\"action\": \"enable_basic_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_function', 'get_function_status', 'execute_function',",
          "file": "scripts/precise_count_analysis.py",
          "line": 133,
          "pattern": "disable_function",
          "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function', 'disable_function', 'get_function_status', 'execute_function',",
          "file": "scripts/precise_count_analysis.py",
          "line": 133,
          "pattern": "enable_function",
          "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_elderly_interface_to_sleep",
          "file": "scripts/put_elderly_interface_to_sleep.py",
          "line": 15,
          "pattern": "sleep_function",
          "content": "def put_elderly_interface_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_voice_security_to_sleep",
          "file": "scripts/put_voice_security_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_voice_security_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "context_aware_access",
          "file": "scripts/integrate_context_aware_access.py",
          "line": 24,
          "pattern": "function_id",
          "content": "function_id=\"context_aware_access\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ContextAwareAccess",
          "file": "scripts/integrate_context_aware_access.py",
          "line": 25,
          "pattern": "function_name",
          "content": "name=\"ContextAwareAccess\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_messenger_integration_to_sleep",
          "file": "scripts/put_messenger_integration_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_messenger_integration_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_all_critical(self) -> Dict[str, Any]:",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 59,
          "pattern": "wake_function",
          "content": "async def emergency_wake_up_all_critical(self) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_attempts\": 0,",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 66,
          "pattern": "wake_function",
          "content": "\"wake_up_attempts\": 0,",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_from_state_files(results)",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 77,
          "pattern": "wake_function",
          "content": "await self._wake_up_from_state_files(results)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_function_by_name(func_name)",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 82,
          "pattern": "wake_function",
          "content": "result = await self._wake_up_function_by_name(func_name)",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_attempts\"] += 1",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 83,
          "pattern": "wake_function",
          "content": "results[\"wake_up_attempts\"] += 1",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 106,
          "pattern": "wake_function",
          "content": "report_path = f\"logs/emergency_wake_up_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_from_state_files(self, results: Dict[str, Any]) -> None:",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 146,
          "pattern": "wake_function",
          "content": "async def _wake_up_from_state_files(self, results: Dict[str, Any]) -> None:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_function_by_name(self, function_name: str) -> Dict[str, Any]:",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 175,
          "pattern": "wake_function",
          "content": "async def _wake_up_function_by_name(self, function_name: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_system = EmergencyWakeUpSystem()",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 235,
          "pattern": "wake_function",
          "content": "wake_up_system = EmergencyWakeUpSystem()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_system.verify_critical_functions_status()",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 239,
          "pattern": "wake_function",
          "content": "status_before = await wake_up_system.verify_critical_functions_status()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_system.emergency_wake_up_all_critical()",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 245,
          "pattern": "wake_function",
          "content": "results = await wake_up_system.emergency_wake_up_all_critical()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_attempts']}\")",
          "file": "scripts/emergency_wake_up_critical_functions.py",
          "line": 254,
          "pattern": "wake_function",
          "content": "print(f\"   Попыток пробуждения: {results['wake_up_attempts']}\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_function', 'get_function_status', 'execute_function',",
          "file": "scripts/corrected_integration_plan.py",
          "line": 157,
          "pattern": "disable_function",
          "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function', 'disable_function', 'get_function_status', 'execute_function',",
          "file": "scripts/corrected_integration_plan.py",
          "line": 157,
          "pattern": "enable_function",
          "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "circuit_breaker",
          "file": "scripts/update_circuit_breaker_sfm.py",
          "line": 93,
          "pattern": "function_id",
          "content": "function_id = \"circuit_breaker\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_functions': sum(1 for f in functions.values() if isinstance(f, dict) and f.get('auto_enable', False))",
          "file": "scripts/sfm_fix_and_validate.py",
          "line": 197,
          "pattern": "enable_function",
          "content": "'auto_enable_functions': sum(1 for f in functions.values() if isinstance(f, dict) and f.get('auto_enable', False))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions']}\")",
          "file": "scripts/sfm_fix_and_validate.py",
          "line": 208,
          "pattern": "enable_function",
          "content": "print(f\"  - Автовключение: {stats['auto_enable_functions']}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_time': '< 1 секунда',",
          "file": "scripts/integrate_load_balancer_to_safe_manager.py",
          "line": 44,
          "pattern": "wake_function",
          "content": "'wake_up_time': '< 1 секунда',",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time']}\")",
          "file": "scripts/integrate_load_balancer_to_safe_manager.py",
          "line": 178,
          "pattern": "wake_function",
          "content": "print(f\"  ⏰ Время пробуждения: {function_config['wake_up_time']}\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_parent_control_to_sleep",
          "file": "scripts/put_parent_control_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_parent_control_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN",
          "file": "scripts/test_apigateway_integration.py",
          "line": 28,
          "pattern": "function_name",
          "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "api_gateway",
          "file": "scripts/test_apigateway_integration.py",
          "line": 33,
          "pattern": "function_id",
          "content": "function_id=\"api_gateway\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "APIGateway",
          "file": "scripts/test_apigateway_integration.py",
          "line": 34,
          "pattern": "function_name",
          "content": "name=\"APIGateway\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"api_gateway\")",
          "file": "scripts/test_apigateway_integration.py",
          "line": 44,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"api_gateway\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success}\")",
          "file": "scripts/test_apigateway_integration.py",
          "line": 45,
          "pattern": "enable_function",
          "content": "print(f\"✅ APIGateway включен! Результат: {enable_success}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success and init_success:",
          "file": "scripts/test_apigateway_integration.py",
          "line": 105,
          "pattern": "enable_function",
          "content": "if registration_success and enable_success and init_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "child_protection",
          "file": "scripts/test_child_protection_integration.py",
          "line": 30,
          "pattern": "function_id",
          "content": "function_id=\"child_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ChildProtection",
          "file": "scripts/test_child_protection_integration.py",
          "line": 31,
          "pattern": "function_name",
          "content": "name=\"ChildProtection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"child_protection\")",
          "file": "scripts/test_child_protection_integration.py",
          "line": 46,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"child_protection\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success:",
          "file": "scripts/test_child_protection_integration.py",
          "line": 47,
          "pattern": "enable_function",
          "content": "if enable_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_russian_child_protection_to_sleep",
          "file": "scripts/put_russian_child_protection_to_sleep.py",
          "line": 15,
          "pattern": "sleep_function",
          "content": "def put_russian_child_protection_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_threat_intelligence_to_sleep",
          "file": "scripts/test_threat_intelligence_simple.py",
          "line": 134,
          "pattern": "sleep_function",
          "content": "\"Спящий режим\": os.path.exists(\"scripts/put_threat_intelligence_to_sleep.py\"),",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_speech_recognition_to_sleep",
          "file": "scripts/put_speech_recognition_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_speech_recognition_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_management: {sfm.enable_auto_management}\")",
          "file": "scripts/test_sfm_fix.py",
          "line": 35,
          "pattern": "enable_function",
          "content": "print(f\"   • enable_auto_management: {sfm.enable_auto_management}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sleep_mode: {sfm.enable_sleep_mode}\")",
          "file": "scripts/test_sfm_fix.py",
          "line": 36,
          "pattern": "enable_function",
          "content": "print(f\"   • enable_sleep_mode: {sfm.enable_sleep_mode}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "test_function",
          "file": "scripts/test_sfm_fix.py",
          "line": 46,
          "pattern": "function_id",
          "content": "function_id=\"test_function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Test Function",
          "file": "scripts/test_sfm_fix.py",
          "line": 47,
          "pattern": "function_name",
          "content": "name=\"Test Function\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time'] = datetime.now().isoformat()",
          "file": "scripts/safe_sleep_mode_implementation.py",
          "line": 204,
          "pattern": "wake_function",
          "content": "self.sfm_registry['functions'][function_id]['wake_up_time'] = datetime.now().isoformat()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_existing_loggers\": False,",
          "file": "scripts/one_click_installer.py",
          "line": 201,
          "pattern": "disable_function",
          "content": "\"disable_existing_loggers\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_functions\": sum(1 for f in merged_registry[\"functions\"].values() if f.get(\"auto_enable\", False))",
          "file": "scripts/registry_merge_manager.py",
          "line": 211,
          "pattern": "enable_function",
          "content": "\"auto_enable_functions\": sum(1 for f in merged_registry[\"functions\"].values() if f.get(\"auto_enable\", False))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "load_balancer",
          "file": "scripts/test_loadbalancer_integration.py",
          "line": 28,
          "pattern": "function_id",
          "content": "function_id='load_balancer',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "LoadBalancer",
          "file": "scripts/test_loadbalancer_integration.py",
          "line": 29,
          "pattern": "function_name",
          "content": "name='LoadBalancer',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_result = sfm.enable_function('load_balancer')",
          "file": "scripts/test_loadbalancer_integration.py",
          "line": 40,
          "pattern": "enable_function",
          "content": "enable_result = sfm.enable_function('load_balancer')",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_result}\")",
          "file": "scripts/test_loadbalancer_integration.py",
          "line": 41,
          "pattern": "enable_function",
          "content": "print(f\"✅ LoadBalancer включен! Результат: {enable_result}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "test_service",
          "file": "scripts/test_loadbalancer_integration.py",
          "line": 61,
          "pattern": "function_name",
          "content": "name=\"test_service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Enhanced API Docs",
          "file": "scripts/deactivate_enhanced_services.py",
          "line": 57,
          "pattern": "function_name",
          "content": "service_name = \"Enhanced API Docs\" if 'enhanced_api_docs.py' in line else \"Enhanced Architecture Visualizer\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_priority_queue=True) as pool:",
          "file": "scripts/optimize_system_performance.py",
          "line": 68,
          "pattern": "enable_function",
          "content": "with ThreadPoolManager(max_workers=8, enable_priority_queue=True) as pool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "TestLoadBalancer",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 74,
          "pattern": "function_name",
          "content": "self.load_balancer = LoadBalancer(name=\"TestLoadBalancer\", config=config)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Test Service 1",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 97,
          "pattern": "function_name",
          "content": "name=\"Test Service 1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Test Service 2",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 108,
          "pattern": "function_name",
          "content": "name=\"Test Service 2\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "LB Service 1",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 184,
          "pattern": "function_name",
          "content": "name=\"LB Service 1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "LB Service 2",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 196,
          "pattern": "function_name",
          "content": "name=\"LB Service 2\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "default",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 216,
          "pattern": "function_name",
          "content": "service_name=\"default\",  # Используем группу 'default'",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Health Check Service",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 269,
          "pattern": "function_name",
          "content": "name=\"Health Check Service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_adaptive_balancing()",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 378,
          "pattern": "enable_function",
          "content": "await self.load_balancer.enable_adaptive_balancing()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_adaptive_balancing()",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 388,
          "pattern": "disable_function",
          "content": "await self.load_balancer.disable_adaptive_balancing()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "nonexistent_service",
          "file": "scripts/test_load_balancer_functionality.py",
          "line": 406,
          "pattern": "function_name",
          "content": "service_name=\"nonexistent_service\",  # Несуществующая группа",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_critical():",
          "file": "scripts/emergency_wake_up_all_critical.py",
          "line": 14,
          "pattern": "wake_function",
          "content": "def emergency_wake_up_critical():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_critical()",
          "file": "scripts/emergency_wake_up_all_critical.py",
          "line": 76,
          "pattern": "wake_function",
          "content": "emergency_wake_up_critical()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py', 'MICROSERVICE - Системы пробуждения'),",
          "file": "scripts/quick_flake8_report.py",
          "line": 117,
          "pattern": "wake_function",
          "content": "('security/microservices/wake_up_systems.py', 'MICROSERVICE - Системы пробуждения'),",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "scripts/fix_stage7_add_missing_methods.py",
          "line": 51,
          "pattern": "function_name",
          "content": "return f\"RecoveryService(name='{self.name}', config={self.config})\"'''",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = self.sfm.enable_function(func_id)",
          "file": "scripts/comprehensive_sfm_test.py",
          "line": 222,
          "pattern": "enable_function",
          "content": "enable_success = self.sfm.enable_function(func_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success:",
          "file": "scripts/comprehensive_sfm_test.py",
          "line": 223,
          "pattern": "enable_function",
          "content": "if enable_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_success = self.sfm.disable_function(func_id)",
          "file": "scripts/comprehensive_sfm_test.py",
          "line": 255,
          "pattern": "disable_function",
          "content": "disable_success = self.sfm.disable_function(func_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_success:",
          "file": "scripts/comprehensive_sfm_test.py",
          "line": 256,
          "pattern": "disable_function",
          "content": "if disable_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_function',",
          "file": "scripts/comprehensive_sfm_test.py",
          "line": 338,
          "pattern": "disable_function",
          "content": "'enable_function', 'disable_function',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function', 'disable_function',",
          "file": "scripts/comprehensive_sfm_test.py",
          "line": 338,
          "pattern": "enable_function",
          "content": "'enable_function', 'disable_function',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_time'] = datetime.now().isoformat()",
          "file": "scripts/implement_safe_sleep_mode.py",
          "line": 226,
          "pattern": "wake_function",
          "content": "self.sfm_registry['functions'][function_id]['wake_up_time'] = datetime.now().isoformat()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TestAPIGateway",
          "file": "scripts/test_api_gateway.py",
          "line": 32,
          "pattern": "function_name",
          "content": "gateway = APIGateway(name=\"TestAPIGateway\", config=config)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_key",
          "file": "scripts/test_api_gateway.py",
          "line": 39,
          "pattern": "function_name",
          "content": "name=\"test_key\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_service",
          "file": "scripts/test_api_gateway.py",
          "line": 54,
          "pattern": "function_name",
          "content": "service_name=\"test_service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Иван",
          "file": "scripts/auto_fix_152_fz_violations.py",
          "line": 183,
          "pattern": "function_name",
          "content": "r'name\\s*=\\s*[\"\\'][^\"\\']+[\"\\']',  # name = \"Иван\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "notification_bot_main",
          "file": "scripts/integrate_notification_bot_main.py",
          "line": 76,
          "pattern": "function_id",
          "content": "function_id=\"notification_bot_main\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "NotificationBotMain",
          "file": "scripts/integrate_notification_bot_main.py",
          "line": 77,
          "pattern": "function_name",
          "content": "name=\"NotificationBotMain\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function('notification_bot_main')",
          "file": "scripts/integrate_notification_bot_main.py",
          "line": 114,
          "pattern": "enable_function",
          "content": "sfm.enable_function('notification_bot_main')",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_emergency_response_to_sleep",
          "file": "scripts/put_emergency_response_to_sleep.py",
          "line": 14,
          "pattern": "sleep_function",
          "content": "def put_emergency_response_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "emergency_response_interface",
          "file": "scripts/put_emergency_response_to_sleep.py",
          "line": 26,
          "pattern": "function_id",
          "content": "function_id = \"emergency_response_interface\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "EmergencyResponseInterface",
          "file": "scripts/put_emergency_response_to_sleep.py",
          "line": 29,
          "pattern": "function_name",
          "content": "name=\"EmergencyResponseInterface\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_function(function_id)",
          "file": "scripts/put_emergency_response_to_sleep.py",
          "line": 39,
          "pattern": "disable_function",
          "content": "sleep_success = manager.disable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_functions\": sum(1 for f in functions.values()",
          "file": "scripts/complete_registry_fix.py",
          "line": 191,
          "pattern": "enable_function",
          "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Тест высокой нагрузки CPU",
          "file": "scripts/test_enhanced_alerting.py",
          "line": 38,
          "pattern": "function_name",
          "content": "name=\"Тест высокой нагрузки CPU\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_to_sleep(recommendations['put_to_sleep",
          "file": "scripts/safe_sleep_mode_optimizer.py",
          "line": 167,
          "pattern": "sleep_function",
          "content": "sleep_results = self.safe_put_to_sleep(recommendations['put_to_sleep'])",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py\")",
          "file": "scripts/safe_sleep_mode_optimizer.py",
          "line": 213,
          "pattern": "wake_function",
          "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function(function_id)",
          "file": "scripts/plan_a_plus_work_optimizer.py",
          "line": 207,
          "pattern": "enable_function",
          "content": "success = self.sfm.enable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_systems.py\")",
          "file": "scripts/plan_a_plus_work_optimizer.py",
          "line": 327,
          "pattern": "wake_function",
          "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "DEPENDENCY_MAP_REPORT.md",
          "file": "scripts/create_dependency_map.py",
          "line": 363,
          "pattern": "function_name",
          "content": "report_filename = \"DEPENDENCY_MAP_REPORT.md\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_elderly_interface_to_sleep",
          "file": "scripts/test_elderly_interface_quality.py",
          "line": 137,
          "pattern": "sleep_function",
          "content": "\"Спящий режим\": os.path.exists(\"scripts/put_elderly_interface_to_sleep.py\"),",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function(function_id)",
          "file": "scripts/minimal_system_optimizer.py",
          "line": 129,
          "pattern": "enable_function",
          "content": "success = self.sfm.enable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_systems.py\")",
          "file": "scripts/minimal_system_optimizer.py",
          "line": 245,
          "pattern": "wake_function",
          "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_behavioral_analytics_to_sleep",
          "file": "scripts/put_behavioral_analytics_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_behavioral_analytics_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_data_protection_agent_to_sleep",
          "file": "scripts/put_data_protection_agent_to_sleep.py",
          "line": 7,
          "pattern": "sleep_function",
          "content": "def put_data_protection_agent_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_natural_language_to_sleep",
          "file": "scripts/put_natural_language_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_natural_language_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "EnhancedAlertingSystem",
          "file": "scripts/integrate_enhanced_alerting.py",
          "line": 134,
          "pattern": "function_name",
          "content": "function_name=\"EnhancedAlertingSystem\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тестовое правило",
          "file": "scripts/integrate_enhanced_alerting.py",
          "line": 240,
          "pattern": "function_name",
          "content": "name=\"Тестовое правило\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TestLoadBalancer",
          "file": "scripts/test_load_balancer.py",
          "line": 31,
          "pattern": "function_name",
          "content": "lb = LoadBalancer(name=\"TestLoadBalancer\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_services",
          "file": "scripts/test_load_balancer.py",
          "line": 42,
          "pattern": "function_name",
          "content": "service_name=\"test_services\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "test_service_1",
          "file": "scripts/test_load_balancer.py",
          "line": 54,
          "pattern": "function_name",
          "content": "name=\"test_service_1\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function()",
          "file": "scripts/simple_disable_functions.py",
          "line": 60,
          "pattern": "enable_function",
          "content": "- Легко восстановить через enable_function()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_function(func_id)",
          "file": "scripts/simple_disable_functions.py",
          "line": 68,
          "pattern": "enable_function",
          "content": "manager.enable_function(func_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_report_{}.md'.format(",
          "file": "scripts/simple_disable_functions.py",
          "line": 78,
          "pattern": "disable_function",
          "content": "report_path = os.path.join('logs', 'disable_report_{}.md'.format(",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_result = safe_manager.enable_function(func_id)",
          "file": "scripts/integrate_external_apis.py",
          "line": 73,
          "pattern": "enable_function",
          "content": "enable_result = safe_manager.enable_function(func_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_result:",
          "file": "scripts/integrate_external_apis.py",
          "line": 74,
          "pattern": "enable_function",
          "content": "if enable_result:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_notification_bot_to_sleep",
          "file": "scripts/put_notification_bot_to_sleep.py",
          "line": 14,
          "pattern": "sleep_function",
          "content": "def put_notification_bot_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "notification_bot",
          "file": "scripts/put_notification_bot_to_sleep.py",
          "line": 26,
          "pattern": "function_id",
          "content": "function_id = \"notification_bot\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "NotificationBot",
          "file": "scripts/put_notification_bot_to_sleep.py",
          "line": 29,
          "pattern": "function_name",
          "content": "name=\"NotificationBot\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_function(function_id)",
          "file": "scripts/put_notification_bot_to_sleep.py",
          "line": 39,
          "pattern": "disable_function",
          "content": "sleep_success = manager.disable_function(function_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_function(func_id)",
          "file": "scripts/disable_12_functions.py",
          "line": 52,
          "pattern": "disable_function",
          "content": "success = manager.disable_function(func_id)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_report_{}.md'.format(datetime.now().strftime(\"%Y%m%d_%H%M%S\")))",
          "file": "scripts/disable_12_functions.py",
          "line": 80,
          "pattern": "disable_function",
          "content": "'disable_report_{}.md'.format(datetime.now().strftime(\"%Y%m%d_%H%M%S\")))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "wake_up_systems.py'",
          "file": "scripts/fast_flake8_analysis.py",
          "line": 114,
          "pattern": "wake_function",
          "content": "'security/microservices/wake_up_systems.py'",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тестовый мошенник",
          "file": "scripts/integrate_anti_fraud_master_ai.py",
          "line": 43,
          "pattern": "function_name",
          "content": "caller_name=\"Тестовый мошенник\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Поддельный знакомый",
          "file": "scripts/integrate_anti_fraud_master_ai.py",
          "line": 53,
          "pattern": "function_name",
          "content": "caller_name=\"Поддельный знакомый\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Тестовый звонящий",
          "file": "scripts/integrate_anti_fraud_master_ai.py",
          "line": 105,
          "pattern": "function_name",
          "content": "caller_name=\"Тестовый звонящий\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_api_gateway_to_sleep",
          "file": "scripts/put_api_gateway_to_sleep.py",
          "line": 16,
          "pattern": "sleep_function",
          "content": "def put_api_gateway_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SleepTestAPIGateway",
          "file": "scripts/put_api_gateway_to_sleep.py",
          "line": 31,
          "pattern": "function_name",
          "content": "gateway = APIGateway(name=\"SleepTestAPIGateway\", config=config)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time': '< 1 секунда',",
          "file": "scripts/put_api_gateway_to_sleep.py",
          "line": 48,
          "pattern": "wake_function",
          "content": "'wake_up_time': '< 1 секунда',",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_instructions': [",
          "file": "scripts/put_api_gateway_to_sleep.py",
          "line": 129,
          "pattern": "wake_function",
          "content": "'wake_up_instructions': [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_priority': 'HIGH'",
          "file": "scripts/put_api_gateway_to_sleep.py",
          "line": 138,
          "pattern": "wake_function",
          "content": "'wake_up_priority': 'HIGH'",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time']}\")",
          "file": "scripts/put_api_gateway_to_sleep.py",
          "line": 149,
          "pattern": "wake_function",
          "content": "print(f\"  ⚡ Время пробуждения: {sleep_config['wake_up_time']}\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Identity Verification Coverage",
          "file": "scripts/advanced_security_metrics.py",
          "line": 75,
          "pattern": "function_name",
          "content": "name=\"Identity Verification Coverage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Device Trust Score",
          "file": "scripts/advanced_security_metrics.py",
          "line": 91,
          "pattern": "function_name",
          "content": "name=\"Device Trust Score\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Network Segmentation Coverage",
          "file": "scripts/advanced_security_metrics.py",
          "line": 107,
          "pattern": "function_name",
          "content": "name=\"Network Segmentation Coverage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Perimeter Security Strength",
          "file": "scripts/advanced_security_metrics.py",
          "line": 129,
          "pattern": "function_name",
          "content": "name=\"Perimeter Security Strength\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Internal Security Controls",
          "file": "scripts/advanced_security_metrics.py",
          "line": 145,
          "pattern": "function_name",
          "content": "name=\"Internal Security Controls\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Data Protection Layers",
          "file": "scripts/advanced_security_metrics.py",
          "line": 161,
          "pattern": "function_name",
          "content": "name=\"Data Protection Layers\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Advanced Persistent Threats",
          "file": "scripts/advanced_security_metrics.py",
          "line": 184,
          "pattern": "function_name",
          "content": "name=\"Advanced Persistent Threats\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Ransomware Attacks",
          "file": "scripts/advanced_security_metrics.py",
          "line": 200,
          "pattern": "function_name",
          "content": "name=\"Ransomware Attacks\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Insider Threats",
          "file": "scripts/advanced_security_metrics.py",
          "line": 216,
          "pattern": "function_name",
          "content": "name=\"Insider Threats\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Supply Chain Attacks",
          "file": "scripts/advanced_security_metrics.py",
          "line": 232,
          "pattern": "function_name",
          "content": "name=\"Supply Chain Attacks\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "advanced_alerting_system",
          "file": "scripts/integrate_alerting_simple.py",
          "line": 25,
          "pattern": "function_id",
          "content": "function_id=\"advanced_alerting_system\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Advanced Alerting System",
          "file": "scripts/integrate_alerting_simple.py",
          "line": 26,
          "pattern": "function_name",
          "content": "name=\"Advanced Alerting System\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_result = safe_manager.enable_function(\"advanced_alerting_system\")",
          "file": "scripts/integrate_alerting_simple.py",
          "line": 45,
          "pattern": "enable_function",
          "content": "enable_result = safe_manager.enable_function(\"advanced_alerting_system\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_result:",
          "file": "scripts/integrate_alerting_simple.py",
          "line": 46,
          "pattern": "enable_function",
          "content": "if enable_result:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions': 0",
          "file": "scripts/sfm_stats_universal.py",
          "line": 113,
          "pattern": "enable_function",
          "content": "'auto_enable_functions': 0",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions'] += 1",
          "file": "scripts/sfm_stats_universal.py",
          "line": 142,
          "pattern": "enable_function",
          "content": "analysis['security_analysis']['auto_enable_functions'] += 1",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions']}\")",
          "file": "scripts/sfm_stats_universal.py",
          "line": 204,
          "pattern": "enable_function",
          "content": "print(f\"  Автовключение: {analysis['security_analysis']['auto_enable_functions']}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions': sum(1 for f in functions.values() if f.get('auto_enable', False))",
          "file": "scripts/sfm_add_function.py",
          "line": 137,
          "pattern": "enable_function",
          "content": "'auto_enable_functions': sum(1 for f in functions.values() if f.get('auto_enable', False))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "russian_yandex_maps",
          "file": "scripts/simple_register_russian.py",
          "line": 23,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_yandex_maps\", \"name\": \"Яндекс.Карты\", \"type\": \"api\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_2gis",
          "file": "scripts/simple_register_russian.py",
          "line": 24,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_2gis\", \"name\": \"2GIS\", \"type\": \"api\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_glonass",
          "file": "scripts/simple_register_russian.py",
          "line": 25,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_glonass\", \"name\": \"ГЛОНАСС\", \"type\": \"api\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_vk",
          "file": "scripts/simple_register_russian.py",
          "line": 26,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_vk\", \"name\": \"VK API\", \"type\": \"api\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_telegram",
          "file": "scripts/simple_register_russian.py",
          "line": 29,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_telegram\", \"name\": \"Telegram (Россия)\", \"type\": \"messenger\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_whatsapp",
          "file": "scripts/simple_register_russian.py",
          "line": 30,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_whatsapp\", \"name\": \"WhatsApp (Россия)\", \"type\": \"messenger\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_viber",
          "file": "scripts/simple_register_russian.py",
          "line": 31,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_viber\", \"name\": \"Viber (Россия)\", \"type\": \"messenger\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_vk_messenger",
          "file": "scripts/simple_register_russian.py",
          "line": 32,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_vk_messenger\", \"name\": \"VK Messenger\", \"type\": \"messenger\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_sberbank",
          "file": "scripts/simple_register_russian.py",
          "line": 35,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_sberbank\", \"name\": \"Сбербанк\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_vtb",
          "file": "scripts/simple_register_russian.py",
          "line": 36,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_vtb\", \"name\": \"ВТБ\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_tinkoff",
          "file": "scripts/simple_register_russian.py",
          "line": 37,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_tinkoff\", \"name\": \"Тинькофф\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_alfa",
          "file": "scripts/simple_register_russian.py",
          "line": 38,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_alfa\", \"name\": \"Альфа-Банк\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_raiffeisen",
          "file": "scripts/simple_register_russian.py",
          "line": 39,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_raiffeisen\", \"name\": \"Райффайзен\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_gazprom",
          "file": "scripts/simple_register_russian.py",
          "line": 40,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_gazprom\", \"name\": \"Газпромбанк\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_rshb",
          "file": "scripts/simple_register_russian.py",
          "line": 41,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_rshb\", \"name\": \"Россельхозбанк\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_vtb24",
          "file": "scripts/simple_register_russian.py",
          "line": 42,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_vtb24\", \"name\": \"ВТБ24\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_unicredit",
          "file": "scripts/simple_register_russian.py",
          "line": 43,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_unicredit\", \"name\": \"ЮниКредит\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_rsb",
          "file": "scripts/simple_register_russian.py",
          "line": 44,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_rsb\", \"name\": \"Русский Стандарт\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_mkb",
          "file": "scripts/simple_register_russian.py",
          "line": 45,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_mkb\", \"name\": \"МКБ\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_open",
          "file": "scripts/simple_register_russian.py",
          "line": 46,
          "pattern": "id\":",
          "content": "{\"id\": \"russian_open\", \"name\": \"Открытие\", \"type\": \"bank\", \"status\": \"ready\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command\": \"python3 scripts/one_click_installer.py\",",
          "file": "scripts/integrate_high_priority_components.py",
          "line": 164,
          "pattern": "wake_function",
          "content": "\"wake_up_command\": \"python3 scripts/one_click_installer.py\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command\": \"python3 scripts/auto_configuration.py\",",
          "file": "scripts/integrate_high_priority_components.py",
          "line": 171,
          "pattern": "wake_function",
          "content": "\"wake_up_command\": \"python3 scripts/auto_configuration.py\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command\": \"python3 scripts/simplify_interface.py\",",
          "file": "scripts/integrate_high_priority_components.py",
          "line": 178,
          "pattern": "wake_function",
          "content": "\"wake_up_command\": \"python3 scripts/simplify_interface.py\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command\": \"python3 scripts/configuration_templates.py\",",
          "file": "scripts/integrate_high_priority_components.py",
          "line": 185,
          "pattern": "wake_function",
          "content": "\"wake_up_command\": \"python3 scripts/configuration_templates.py\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command\": \"python3 scripts/push_notifications.py\",",
          "file": "scripts/integrate_high_priority_components.py",
          "line": 192,
          "pattern": "wake_function",
          "content": "\"wake_up_command\": \"python3 scripts/push_notifications.py\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_function(self, function_name: str) -> Dict[str, Any]:",
          "file": "scripts/sleep_mode_monitoring_system.py",
          "line": 240,
          "pattern": "wake_function",
          "content": "async def wake_up_function(self, function_name: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "trust_scoring",
          "file": "scripts/test_trust_scoring_integration.py",
          "line": 30,
          "pattern": "function_id",
          "content": "function_id=\"trust_scoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TrustScoring",
          "file": "scripts/test_trust_scoring_integration.py",
          "line": 31,
          "pattern": "function_name",
          "content": "name=\"TrustScoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"trust_scoring\")",
          "file": "scripts/test_trust_scoring_integration.py",
          "line": 46,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"trust_scoring\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success:",
          "file": "scripts/test_trust_scoring_integration.py",
          "line": 47,
          "pattern": "enable_function",
          "content": "if enable_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_family_functions(self, file_path: str) -> bool:",
          "file": "scripts/disable_personal_functions.py",
          "line": 89,
          "pattern": "disable_function",
          "content": "def disable_family_functions(self, file_path: str) -> bool:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_functions_in_content(content)",
          "file": "scripts/disable_personal_functions.py",
          "line": 105,
          "pattern": "disable_function",
          "content": "disabled_content = self._disable_functions_in_content(content)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_functions_in_content(self, content: str) -> str:",
          "file": "scripts/disable_personal_functions.py",
          "line": 117,
          "pattern": "disable_function",
          "content": "def _disable_functions_in_content(self, content: str) -> str:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_patterns = [",
          "file": "scripts/disable_personal_functions.py",
          "line": 120,
          "pattern": "disable_function",
          "content": "disable_patterns = [",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_patterns:",
          "file": "scripts/disable_personal_functions.py",
          "line": 133,
          "pattern": "disable_function",
          "content": "for pattern, replacement in disable_patterns:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "disable_family_functions(func_info[\"file\"]):",
          "file": "scripts/disable_personal_functions.py",
          "line": 313,
          "pattern": "disable_function",
          "content": "if self.disable_family_functions(func_info[\"file\"]):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "put_function_to_sleep",
          "file": "scripts/minimal_active_system.py",
          "line": 113,
          "pattern": "sleep_function",
          "content": "result = await self._put_function_to_sleep(func_id, func_data, sfm_registry)",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "trust_scoring",
          "file": "scripts/integrate_trust_scoring.py",
          "line": 24,
          "pattern": "function_id",
          "content": "function_id=\"trust_scoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TrustScoring",
          "file": "scripts/integrate_trust_scoring.py",
          "line": 25,
          "pattern": "function_name",
          "content": "name=\"TrustScoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{self.name}",
          "file": "scripts/stage7_auto_method_fixer.py",
          "line": 110,
          "pattern": "function_name",
          "content": "return f\"RecoveryService(name='{self.name}', config={self.config})\"'''",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "system_wide",
          "file": "scripts/integrate_optimization_components.py",
          "line": 117,
          "pattern": "function_id",
          "content": "function_id=\"system_wide\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_zero_trust\": True,",
          "file": "scripts/integrate_optimization_components.py",
          "line": 156,
          "pattern": "enable_function",
          "content": "\"enable_zero_trust\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_load_balancing\": True,",
          "file": "scripts/integrate_optimization_components.py",
          "line": 157,
          "pattern": "enable_function",
          "content": "\"enable_load_balancing\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_scaling\": True,",
          "file": "scripts/integrate_optimization_components.py",
          "line": 158,
          "pattern": "enable_function",
          "content": "\"enable_auto_scaling\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_circuit_breaking\": True,",
          "file": "scripts/integrate_optimization_components.py",
          "line": 159,
          "pattern": "enable_function",
          "content": "\"enable_circuit_breaking\": True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "ALADDIN",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 26,
          "pattern": "function_name",
          "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "monitor_manager",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 31,
          "pattern": "function_id",
          "content": "function_id=\"monitor_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "MonitorManager",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 32,
          "pattern": "function_name",
          "content": "name=\"MonitorManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"monitor_manager\")",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 42,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"monitor_manager\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success}\")",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 43,
          "pattern": "enable_function",
          "content": "print(f\"✅ MonitorManager включен! Результат: {enable_success}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "test_high_cpu",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 90,
          "pattern": "function_name",
          "content": "name=\"test_high_cpu\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "cpu_usage",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 91,
          "pattern": "function_name",
          "content": "metric_name=\"cpu_usage\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success and init_success:",
          "file": "scripts/test_monitor_manager_integration.py",
          "line": 127,
          "pattern": "enable_function",
          "content": "if registration_success and enable_success and init_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "IntegrateRussianAPIsSimple",
          "file": "scripts/integrate_russian_apis_simple.py",
          "line": 16,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"IntegrateRussianAPIsSimple\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_api_manager",
          "file": "scripts/integrate_russian_apis_simple.py",
          "line": 33,
          "pattern": "function_id",
          "content": "function_id=\"russian_api_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Russian API Manager",
          "file": "scripts/integrate_russian_apis_simple.py",
          "line": 34,
          "pattern": "function_name",
          "content": "name=\"Russian API Manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "{component_name}",
          "file": "scripts/PHASE1_CRITICAL_COMPONENTS_PLAN.py",
          "line": 326,
          "pattern": "function_name",
          "content": "self.name = \"{component_name}\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_incident_response_to_sleep",
          "file": "scripts/put_incident_response_to_sleep.py",
          "line": 13,
          "pattern": "sleep_function",
          "content": "def put_incident_response_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": [",
          "file": "scripts/put_incident_response_to_sleep.py",
          "line": 58,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_priority\": \"CRITICAL\",",
          "file": "scripts/put_incident_response_to_sleep.py",
          "line": 105,
          "pattern": "wake_function",
          "content": "\"wake_up_priority\": \"CRITICAL\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "file": "scripts/put_incident_response_to_sleep.py",
          "line": 163,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_function_to_sleep",
          "file": "scripts/auto_sleep_mode_implementation.py",
          "line": 150,
          "pattern": "sleep_function",
          "content": "result = await self._put_function_to_sleep(func)",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_function(self, function_name: str) -> Dict[str, Any]:",
          "file": "scripts/auto_sleep_mode_implementation.py",
          "line": 224,
          "pattern": "wake_function",
          "content": "async def wake_up_function(self, function_name: str) -> Dict[str, Any]:",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_child_interface_to_sleep",
          "file": "scripts/put_child_interface_to_sleep.py",
          "line": 13,
          "pattern": "sleep_function",
          "content": "def put_child_interface_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": [",
          "file": "scripts/put_child_interface_to_sleep.py",
          "line": 71,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_priority\": \"HIGH\",",
          "file": "scripts/put_child_interface_to_sleep.py",
          "line": 152,
          "pattern": "wake_function",
          "content": "\"wake_up_priority\": \"HIGH\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "file": "scripts/put_child_interface_to_sleep.py",
          "line": 227,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN_APIGateway",
          "file": "scripts/integrate_api_gateway.py",
          "line": 32,
          "pattern": "function_name",
          "content": "gateway = APIGateway(name=\"ALADDIN_APIGateway\", config=config)",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "aladdin_mobile_app",
          "file": "scripts/integrate_api_gateway.py",
          "line": 44,
          "pattern": "function_name",
          "content": "name=\"aladdin_mobile_app\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "security_service",
          "file": "scripts/integrate_api_gateway.py",
          "line": 56,
          "pattern": "function_name",
          "content": "service_name=\"security_service\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_super_ai_to_sleep",
          "file": "scripts/put_super_ai_to_sleep.py",
          "line": 19,
          "pattern": "sleep_function",
          "content": "def put_super_ai_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SafeFunctionManager",
          "file": "scripts/test_constructor_exception.py",
          "line": 16,
          "pattern": "function_name",
          "content": "def debug_init(self, name=\"SafeFunctionManager\", config=None):",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_auto_management = config.get('enable_auto_management', True) if config else True",
          "file": "scripts/test_constructor_exception.py",
          "line": 28,
          "pattern": "enable_function",
          "content": "self.enable_auto_management = config.get('enable_auto_management', True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence = config.get(\"enable_persistence\", True) if config else True",
          "file": "scripts/test_constructor_exception.py",
          "line": 34,
          "pattern": "enable_function",
          "content": "self.enable_persistence = config.get(\"enable_persistence\", True) if config else True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_persistence:",
          "file": "scripts/test_constructor_exception.py",
          "line": 82,
          "pattern": "enable_function",
          "content": "if self.enable_persistence:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_threat_intelligence_to_sleep",
          "file": "scripts/put_threat_intelligence_to_sleep.py",
          "line": 13,
          "pattern": "sleep_function",
          "content": "def put_threat_intelligence_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": [",
          "file": "scripts/put_threat_intelligence_to_sleep.py",
          "line": 57,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_priority\": \"HIGH\",",
          "file": "scripts/put_threat_intelligence_to_sleep.py",
          "line": 100,
          "pattern": "wake_function",
          "content": "\"wake_up_priority\": \"HIGH\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "file": "scripts/put_threat_intelligence_to_sleep.py",
          "line": 153,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "load_balancer",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 47,
          "pattern": "id\":",
          "content": "\"id\": \"load_balancer\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "api_gateway",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 54,
          "pattern": "id\":",
          "content": "\"id\": \"api_gateway\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "analytics_manager",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 61,
          "pattern": "id\":",
          "content": "\"id\": \"analytics_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "dashboard_manager",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 68,
          "pattern": "id\":",
          "content": "\"id\": \"dashboard_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "monitor_manager",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 75,
          "pattern": "id\":",
          "content": "\"id\": \"monitor_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "privacy_manager",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 82,
          "pattern": "id\":",
          "content": "\"id\": \"privacy_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "trust_scoring",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 89,
          "pattern": "id\":",
          "content": "\"id\": \"trust_scoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "child_protection",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 96,
          "pattern": "id\":",
          "content": "\"id\": \"child_protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "report_manager",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 103,
          "pattern": "id\":",
          "content": "\"id\": \"report_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "behavioral_analysis",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 110,
          "pattern": "id\":",
          "content": "\"id\": \"behavioral_analysis\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "behavioral_analysis_agent",
          "file": "scripts/analyze_all_sfm_functions.py",
          "line": 117,
          "pattern": "id\":",
          "content": "\"id\": \"behavioral_analysis_agent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_sleep_manager():",
          "file": "scripts/wake_up_sleep_manager.py",
          "line": 14,
          "pattern": "wake_function",
          "content": "def wake_up_sleep_manager():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_sleep_manager()",
          "file": "scripts/wake_up_sleep_manager.py",
          "line": 70,
          "pattern": "wake_function",
          "content": "wake_up_sleep_manager()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "anti_fraud_master_ai",
          "file": "scripts/update_anti_fraud_master_ai_sfm.py",
          "line": 91,
          "pattern": "function_id",
          "content": "function_id = \"anti_fraud_master_ai\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_ml_components():",
          "file": "scripts/wake_up_ml_components.py",
          "line": 15,
          "pattern": "wake_function",
          "content": "def wake_up_ml_components():",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_ml_components()",
          "file": "scripts/wake_up_ml_components.py",
          "line": 99,
          "pattern": "wake_function",
          "content": "wake_up_ml_components()",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enhanced_alerting_system",
          "file": "scripts/integrate_enhanced_alerting_fixed.py",
          "line": 34,
          "pattern": "function_id",
          "content": "function_id='enhanced_alerting_system',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "EnhancedAlertingSystem",
          "file": "scripts/integrate_enhanced_alerting_fixed.py",
          "line": 35,
          "pattern": "function_name",
          "content": "name='EnhancedAlertingSystem',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_voice_response_to_sleep",
          "file": "scripts/put_voice_response_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_voice_response_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_.*_to_sleep",
          "file": "scripts/true_sfm_function_counter.py",
          "line": 54,
          "pattern": "sleep_function",
          "content": "'sleep_function': r'put_.*_to_sleep',",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_.*',",
          "file": "scripts/true_sfm_function_counter.py",
          "line": 55,
          "pattern": "wake_function",
          "content": "'wake_function': r'wake_up_.*',",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_function': r'disable_.*',",
          "file": "scripts/true_sfm_function_counter.py",
          "line": 56,
          "pattern": "disable_function",
          "content": "'disable_function': r'disable_.*',",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_function': r'enable_.*'",
          "file": "scripts/true_sfm_function_counter.py",
          "line": 57,
          "pattern": "enable_function",
          "content": "'enable_function': r'enable_.*'",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_incident_response_to_sleep",
          "file": "scripts/test_incident_response_quality.py",
          "line": 205,
          "pattern": "sleep_function",
          "content": "\"Спящий режим\": os.path.exists(\"scripts/put_incident_response_to_sleep.py\"),",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "trust_scoring",
          "file": "scripts/test_trust_scoring_integration_fixed.py",
          "line": 30,
          "pattern": "function_id",
          "content": "function_id=\"trust_scoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "TrustScoring",
          "file": "scripts/test_trust_scoring_integration_fixed.py",
          "line": 31,
          "pattern": "function_name",
          "content": "name=\"TrustScoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"trust_scoring\")",
          "file": "scripts/test_trust_scoring_integration_fixed.py",
          "line": 46,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"trust_scoring\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success:",
          "file": "scripts/test_trust_scoring_integration_fixed.py",
          "line": 47,
          "pattern": "enable_function",
          "content": "if enable_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
          "file": "scripts/sfm_analyzer.py",
          "line": 67,
          "pattern": "enable_function",
          "content": "auto_enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions': auto_enable_count,",
          "file": "scripts/sfm_analyzer.py",
          "line": 91,
          "pattern": "enable_function",
          "content": "'auto_enable_functions': auto_enable_count,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
          "file": "scripts/sfm_analyzer.py",
          "line": 147,
          "pattern": "enable_function",
          "content": "print(f\"🔄 Автоматически включаемые: {stats['auto_enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
          "file": "scripts/sfm_analyzer.py",
          "line": 229,
          "pattern": "enable_function",
          "content": "writer.writerow(['Автоматически включаемые', stats['auto_enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_child_interface_to_sleep",
          "file": "scripts/test_child_interface_quality.py",
          "line": 151,
          "pattern": "sleep_function",
          "content": "\"Спящий режим\": os.path.exists(\"scripts/put_child_interface_to_sleep.py\"),",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_functions_sleep_mode():",
          "file": "scripts/disable_12_functions_sleep_mode.py",
          "line": 21,
          "pattern": "disable_function",
          "content": "def disable_functions_sleep_mode():",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "enable_functions_wake_up.py\")",
          "file": "scripts/disable_12_functions_sleep_mode.py",
          "line": 176,
          "pattern": "enable_function",
          "content": "print(\"   python scripts/enable_functions_wake_up.py\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "disable_functions_sleep_mode()",
          "file": "scripts/disable_12_functions_sleep_mode.py",
          "line": 182,
          "pattern": "disable_function",
          "content": "disable_functions_sleep_mode()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        },
        {
          "function_id": "IntegrateAdvancedMonitoring",
          "file": "scripts/integrate_advanced_monitoring.py",
          "line": 16,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"IntegrateAdvancedMonitoring\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_voice_control_to_sleep",
          "file": "scripts/put_voice_control_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_voice_control_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Palo Alto Networks",
          "file": "scripts/competitive_analysis.py",
          "line": 53,
          "pattern": "function_name",
          "content": "name=\"Palo Alto Networks\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "CrowdStrike",
          "file": "scripts/competitive_analysis.py",
          "line": 81,
          "pattern": "function_name",
          "content": "name=\"CrowdStrike\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Norton 360",
          "file": "scripts/competitive_analysis.py",
          "line": 110,
          "pattern": "function_name",
          "content": "name=\"Norton 360\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "McAfee Total Protection",
          "file": "scripts/competitive_analysis.py",
          "line": 140,
          "pattern": "function_name",
          "content": "name=\"McAfee Total Protection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Kaspersky Total Security",
          "file": "scripts/competitive_analysis.py",
          "line": 169,
          "pattern": "function_name",
          "content": "name=\"Kaspersky Total Security\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Bitdefender Total Security",
          "file": "scripts/competitive_analysis.py",
          "line": 198,
          "pattern": "function_name",
          "content": "name=\"Bitdefender Total Security\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SentinelOne",
          "file": "scripts/competitive_analysis.py",
          "line": 228,
          "pattern": "function_name",
          "content": "name=\"SentinelOne\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Darktrace",
          "file": "scripts/competitive_analysis.py",
          "line": 256,
          "pattern": "function_name",
          "content": "name=\"Darktrace\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "threat_intelligence_agent",
          "file": "scripts/update_threat_intelligence_agent_sfm.py",
          "line": 90,
          "pattern": "function_id",
          "content": "function_id = \"threat_intelligence_agent\"",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_password_security_to_sleep",
          "file": "scripts/put_password_security_to_sleep.py",
          "line": 13,
          "pattern": "sleep_function",
          "content": "def put_password_security_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": [",
          "file": "scripts/put_password_security_to_sleep.py",
          "line": 60,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": [",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_priority\": \"CRITICAL\",",
          "file": "scripts/put_password_security_to_sleep.py",
          "line": 132,
          "pattern": "wake_function",
          "content": "\"wake_up_priority\": \"CRITICAL\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "file": "scripts/put_password_security_to_sleep.py",
          "line": 200,
          "pattern": "wake_function",
          "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time': '< 1 секунда',",
          "file": "scripts/integrate_api_gateway_to_safe_manager.py",
          "line": 43,
          "pattern": "wake_function",
          "content": "'wake_up_time': '< 1 секунда',",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_time']}\")",
          "file": "scripts/integrate_api_gateway_to_safe_manager.py",
          "line": 180,
          "pattern": "wake_function",
          "content": "print(f\"  ⏰ Время пробуждения: {function_config['wake_up_time']}\")",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "viewport",
          "file": "scripts/ultra_simple_server.py",
          "line": 49,
          "pattern": "function_name",
          "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "core_base",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 22,
          "pattern": "id\":",
          "content": "{\"id\": \"core_base\", \"name\": \"CoreBase\", \"file\": \"core/base.py\", \"type\": \"Core\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "core_service_base",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 23,
          "pattern": "id\":",
          "content": "{\"id\": \"core_service_base\", \"name\": \"ServiceBase\", \"file\": \"core/service_base.py\", \"type\": \"Core\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "core_database",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 24,
          "pattern": "id\":",
          "content": "{\"id\": \"core_database\", \"name\": \"Database\", \"file\": \"core/database.py\", \"type\": \"Core\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "core_configuration",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 25,
          "pattern": "id\":",
          "content": "{\"id\": \"core_configuration\", \"name\": \"Configuration\", \"file\": \"core/configuration.py\", \"type\": \"Core\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "core_logging",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 26,
          "pattern": "id\":",
          "content": "{\"id\": \"core_logging\", \"name\": \"LoggingModule\", \"file\": \"core/logging_module.py\", \"type\": \"Core\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "core_security_base",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 27,
          "pattern": "id\":",
          "content": "{\"id\": \"core_security_base\", \"name\": \"SecurityBase\", \"file\": \"core/security_base.py\", \"type\": \"Core\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_1",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 30,
          "pattern": "id\":",
          "content": "{\"id\": \"function_1\", \"name\": \"SafeFunctionManager\", \"file\": \"security/safe_function_manager.py\", \"type\": \"Security\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_2",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 31,
          "pattern": "id\":",
          "content": "{\"id\": \"function_2\", \"name\": \"SecurityMonitoring\", \"file\": \"security/security_monitoring.py\", \"type\": \"Security\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_3",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 32,
          "pattern": "id\":",
          "content": "{\"id\": \"function_3\", \"name\": \"Authentication\", \"file\": \"security/authentication.py\", \"type\": \"Security\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_4",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 33,
          "pattern": "id\":",
          "content": "{\"id\": \"function_4\", \"name\": \"AccessControl\", \"file\": \"security/access_control.py\", \"type\": \"Security\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_5",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 34,
          "pattern": "id\":",
          "content": "{\"id\": \"function_5\", \"name\": \"SecurityPolicy\", \"file\": \"security/security_policy.py\", \"type\": \"Security\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_6",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 35,
          "pattern": "id\":",
          "content": "{\"id\": \"function_6\", \"name\": \"SecurityReporting\", \"file\": \"security/security_reporting.py\", \"type\": \"Security\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_7",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 38,
          "pattern": "id\":",
          "content": "{\"id\": \"function_7\", \"name\": \"FamilyProfileManager\", \"file\": \"security/family/family_profile_manager.py\", \"type\": \"Family\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_8",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 39,
          "pattern": "id\":",
          "content": "{\"id\": \"function_8\", \"name\": \"ChildProtection\", \"file\": \"security/family/child_protection.py\", \"type\": \"Family\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_9",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 40,
          "pattern": "id\":",
          "content": "{\"id\": \"function_9\", \"name\": \"ElderlyProtection\", \"file\": \"security/family/elderly_protection.py\", \"type\": \"Family\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_10",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 43,
          "pattern": "id\":",
          "content": "{\"id\": \"function_10\", \"name\": \"PolicyEngine\", \"file\": \"security/preliminary/policy_engine.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_11",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 44,
          "pattern": "id\":",
          "content": "{\"id\": \"function_11\", \"name\": \"RiskAssessment\", \"file\": \"security/preliminary/risk_assessment.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_12",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 45,
          "pattern": "id\":",
          "content": "{\"id\": \"function_12\", \"name\": \"BehavioralAnalysis\", \"file\": \"security/preliminary/behavioral_analysis.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_13",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 46,
          "pattern": "id\":",
          "content": "{\"id\": \"function_13\", \"name\": \"MFAService\", \"file\": \"security/preliminary/mfa_service.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_14",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 47,
          "pattern": "id\":",
          "content": "{\"id\": \"function_14\", \"name\": \"ZeroTrustService\", \"file\": \"security/preliminary/zero_trust_service.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_15",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 48,
          "pattern": "id\":",
          "content": "{\"id\": \"function_15\", \"name\": \"TrustScoring\", \"file\": \"security/preliminary/trust_scoring.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_16",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 49,
          "pattern": "id\":",
          "content": "{\"id\": \"function_16\", \"name\": \"ContextAwareAccess\", \"file\": \"security/preliminary/context_aware_access.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_17",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 52,
          "pattern": "id\":",
          "content": "{\"id\": \"function_17\", \"name\": \"RecoveryService\", \"file\": \"security/reactive/recovery_service.py\", \"type\": \"Reactive\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_18",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 53,
          "pattern": "id\":",
          "content": "{\"id\": \"function_18\", \"name\": \"ThreatIntelligence\", \"file\": \"security/reactive/threat_intelligence.py\", \"type\": \"Reactive\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_19",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 54,
          "pattern": "id\":",
          "content": "{\"id\": \"function_19\", \"name\": \"ForensicsService\", \"file\": \"security/reactive/forensics_service.py\", \"type\": \"Reactive\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_20",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 57,
          "pattern": "id\":",
          "content": "{\"id\": \"function_20\", \"name\": \"APIGateway\", \"file\": \"security/microservices/api_gateway.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_21",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 58,
          "pattern": "id\":",
          "content": "{\"id\": \"function_21\", \"name\": \"LoadBalancer\", \"file\": \"security/microservices/load_balancer.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_22",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 59,
          "pattern": "id\":",
          "content": "{\"id\": \"function_22\", \"name\": \"RateLimiter\", \"file\": \"security/microservices/rate_limiter.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_23",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 60,
          "pattern": "id\":",
          "content": "{\"id\": \"function_23\", \"name\": \"CircuitBreaker\", \"file\": \"security/microservices/circuit_breaker.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_24",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 61,
          "pattern": "id\":",
          "content": "{\"id\": \"function_24\", \"name\": \"UserInterfaceManager\", \"file\": \"security/microservices/user_interface_manager.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_25",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 62,
          "pattern": "id\":",
          "content": "{\"id\": \"function_25\", \"name\": \"RedisCacheManager\", \"file\": \"security/microservices/redis_cache_manager.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_26",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 63,
          "pattern": "id\":",
          "content": "{\"id\": \"function_26\", \"name\": \"ServiceMeshManager\", \"file\": \"security/microservices/service_mesh_manager.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_27",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 66,
          "pattern": "id\":",
          "content": "{\"id\": \"function_27\", \"name\": \"MonitorManager\", \"file\": \"security/managers/monitor_manager.py\", \"type\": \"Managers\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_28",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 67,
          "pattern": "id\":",
          "content": "{\"id\": \"function_28\", \"name\": \"AlertManager\", \"file\": \"security/managers/alert_manager.py\", \"type\": \"Managers\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_29",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 68,
          "pattern": "id\":",
          "content": "{\"id\": \"function_29\", \"name\": \"ReportManager\", \"file\": \"security/ai_agents/report_manager.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_30",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 69,
          "pattern": "id\":",
          "content": "{\"id\": \"function_30\", \"name\": \"AnalyticsManager\", \"file\": \"security/managers/analytics_manager.py\", \"type\": \"Managers\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_31",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 70,
          "pattern": "id\":",
          "content": "{\"id\": \"function_31\", \"name\": \"DashboardManager\", \"file\": \"security/ai_agents/dashboard_manager.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_32",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 71,
          "pattern": "id\":",
          "content": "{\"id\": \"function_32\", \"name\": \"DataProtectionAgent\", \"file\": \"security/ai_agents/data_protection_agent.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_33",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 72,
          "pattern": "id\":",
          "content": "{\"id\": \"function_33\", \"name\": \"MobileSecurityAgent\", \"file\": \"security/ai_agents/mobile_security_agent.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_34",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 75,
          "pattern": "id\":",
          "content": "{\"id\": \"function_34\", \"name\": \"MobileNavigationBot\", \"file\": \"security/bots/mobile_navigation_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_35",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 76,
          "pattern": "id\":",
          "content": "{\"id\": \"function_35\", \"name\": \"GamingSecurityBot\", \"file\": \"security/bots/gaming_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_36",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 77,
          "pattern": "id\":",
          "content": "{\"id\": \"function_36\", \"name\": \"EmergencyResponseBot\", \"file\": \"security/bots/emergency_response_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_37",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 78,
          "pattern": "id\":",
          "content": "{\"id\": \"function_37\", \"name\": \"ParentalControlBot\", \"file\": \"security/bots/parental_control_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_38",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 79,
          "pattern": "id\":",
          "content": "{\"id\": \"function_38\", \"name\": \"NotificationBot\", \"file\": \"security/bots/notification_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_39",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 80,
          "pattern": "id\":",
          "content": "{\"id\": \"function_39\", \"name\": \"WhatsAppSecurityBot\", \"file\": \"security/bots/whatsapp_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_40",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 81,
          "pattern": "id\":",
          "content": "{\"id\": \"function_40\", \"name\": \"TelegramSecurityBot\", \"file\": \"security/bots/telegram_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_41",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 82,
          "pattern": "id\":",
          "content": "{\"id\": \"function_41\", \"name\": \"InstagramSecurityBot\", \"file\": \"security/bots/instagram_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_42",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 83,
          "pattern": "id\":",
          "content": "{\"id\": \"function_42\", \"name\": \"AnalyticsBot\", \"file\": \"security/bots/analytics_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_43",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 84,
          "pattern": "id\":",
          "content": "{\"id\": \"function_43\", \"name\": \"WebsiteNavigationBot\", \"file\": \"security/bots/website_navigation_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_44",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 85,
          "pattern": "id\":",
          "content": "{\"id\": \"function_44\", \"name\": \"BrowserSecurityBot\", \"file\": \"security/bots/browser_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_45",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 86,
          "pattern": "id\":",
          "content": "{\"id\": \"function_45\", \"name\": \"CloudStorageSecurityBot\", \"file\": \"security/bots/cloud_storage_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_46",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 87,
          "pattern": "id\":",
          "content": "{\"id\": \"function_46\", \"name\": \"NetworkSecurityBot\", \"file\": \"security/bots/network_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_47",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 88,
          "pattern": "id\":",
          "content": "{\"id\": \"function_47\", \"name\": \"DeviceSecurityBot\", \"file\": \"security/bots/device_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_48",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 91,
          "pattern": "id\":",
          "content": "{\"id\": \"function_48\", \"name\": \"UniversalPrivacyManager\", \"file\": \"security/privacy/universal_privacy_manager.py\", \"type\": \"Privacy\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_49",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 94,
          "pattern": "id\":",
          "content": "{\"id\": \"function_49\", \"name\": \"RussianChildProtectionManager\", \"file\": \"security/compliance/russian_child_protection_manager.py\", \"type\": \"Compliance\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_152_fz_compliance",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 95,
          "pattern": "id\":",
          "content": "{\"id\": \"function_152_fz_compliance\", \"name\": \"RussianDataProtectionManager\", \"file\": \"security/compliance/russian_data_protection_manager.py\", \"type\": \"Compliance\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_50",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 98,
          "pattern": "id\":",
          "content": "{\"id\": \"function_50\", \"name\": \"CIPipelineManager\", \"file\": \"security/ci_cd/ci_pipeline_manager.py\", \"type\": \"CI/CD\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_51",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 101,
          "pattern": "id\":",
          "content": "{\"id\": \"function_51\", \"name\": \"AutoScalingEngine\", \"file\": \"security/scaling/auto_scaling_engine.py\", \"type\": \"Scaling\", \"status\": \"Active\"},",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "function_52",
          "file": "scripts/sfm_complete_statistics.py",
          "line": 104,
          "pattern": "id\":",
          "content": "{\"id\": \"function_52\", \"name\": \"KubernetesOrchestrator\", \"file\": \"security/orchestration/kubernetes_orchestrator.py\", \"type\": \"Orchestration\", \"status\": \"Active\"}",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_functions\": sum(1 for f in merged_registry[\"functions\"].values()",
          "file": "scripts/fixed_registry_merge_manager.py",
          "line": 193,
          "pattern": "enable_function",
          "content": "\"auto_enable_functions\": sum(1 for f in merged_registry[\"functions\"].values()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_152_fz_to_sleep",
          "file": "scripts/put_152_fz_to_sleep.py",
          "line": 29,
          "pattern": "sleep_function",
          "content": "\"../scripts/put_152_fz_to_sleep.py\"",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 26,
          "pattern": "function_name",
          "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "analytics_manager",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 31,
          "pattern": "function_id",
          "content": "function_id=\"analytics_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "AnalyticsManager",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 32,
          "pattern": "function_name",
          "content": "name=\"AnalyticsManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"analytics_manager\")",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 42,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"analytics_manager\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success}\")",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 43,
          "pattern": "enable_function",
          "content": "print(f\"✅ AnalyticsManager включен! Результат: {enable_success}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_ml=True,",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 57,
          "pattern": "enable_function",
          "content": "enable_ml=True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_clustering=True,",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 58,
          "pattern": "enable_function",
          "content": "enable_clustering=True,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_prediction=True",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 59,
          "pattern": "enable_function",
          "content": "enable_prediction=True",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success and result.status.value == \"completed\":",
          "file": "scripts/test_analytics_manager_integration.py",
          "line": 114,
          "pattern": "enable_function",
          "content": "if registration_success and enable_success and result.status.value == \"completed\":",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions\": sum(1 for f in functions.values()",
          "file": "scripts/ultimate_sfm_fix.py",
          "line": 184,
          "pattern": "enable_function",
          "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_functions']}\")",
          "file": "scripts/ultimate_sfm_fix.py",
          "line": 297,
          "pattern": "enable_function",
          "content": "print(f\"  Автовключение: {stats['auto_enable_functions']}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "IntegrateRussianAPIs",
          "file": "scripts/integrate_russian_apis.py",
          "line": 16,
          "pattern": "function_name",
          "content": "logger = LoggingManager(name=\"IntegrateRussianAPIs\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_yandex_maps",
          "file": "scripts/integrate_russian_apis.py",
          "line": 32,
          "pattern": "function_id",
          "content": "function_id=\"russian_yandex_maps\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Яндекс Карты API",
          "file": "scripts/integrate_russian_apis.py",
          "line": 33,
          "pattern": "function_name",
          "content": "name=\"Яндекс Карты API\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_glonass",
          "file": "scripts/integrate_russian_apis.py",
          "line": 50,
          "pattern": "function_id",
          "content": "function_id=\"russian_glonass\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ГЛОНАСС API",
          "file": "scripts/integrate_russian_apis.py",
          "line": 51,
          "pattern": "function_name",
          "content": "name=\"ГЛОНАСС API\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_free_glonass",
          "file": "scripts/integrate_russian_apis.py",
          "line": 68,
          "pattern": "function_id",
          "content": "function_id=\"russian_free_glonass\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Открытый ГЛОНАСС",
          "file": "scripts/integrate_russian_apis.py",
          "line": 69,
          "pattern": "function_name",
          "content": "name=\"Открытый ГЛОНАСС\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "russian_altox_server",
          "file": "scripts/integrate_russian_apis.py",
          "line": 86,
          "pattern": "function_id",
          "content": "function_id=\"russian_altox_server\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALTOX Server",
          "file": "scripts/integrate_russian_apis.py",
          "line": 87,
          "pattern": "function_name",
          "content": "name=\"ALTOX Server\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 26,
          "pattern": "function_name",
          "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "dashboard_manager",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 31,
          "pattern": "function_id",
          "content": "function_id=\"dashboard_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "DashboardManager",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 32,
          "pattern": "function_name",
          "content": "name=\"DashboardManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"dashboard_manager\")",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 42,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"dashboard_manager\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success}\")",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 43,
          "pattern": "enable_function",
          "content": "print(f\"✅ DashboardManager включен! Результат: {enable_success}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "Тестовая панель безопасности",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 79,
          "pattern": "function_name",
          "content": "name=\"Тестовая панель безопасности\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success and init_success:",
          "file": "scripts/test_dashboard_manager_integration.py",
          "line": 146,
          "pattern": "enable_function",
          "content": "if registration_success and enable_success and init_success:",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "put_smart_notification_to_sleep",
          "file": "scripts/put_smart_notification_to_sleep.py",
          "line": 17,
          "pattern": "sleep_function",
          "content": "def put_smart_notification_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Broken Access Control",
          "file": "scripts/world_class_security_analysis.py",
          "line": 86,
          "pattern": "function_name",
          "content": "name=\"Broken Access Control\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Cryptographic Failures",
          "file": "scripts/world_class_security_analysis.py",
          "line": 102,
          "pattern": "function_name",
          "content": "name=\"Cryptographic Failures\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Injection",
          "file": "scripts/world_class_security_analysis.py",
          "line": 118,
          "pattern": "function_name",
          "content": "name=\"Injection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Asset Management",
          "file": "scripts/world_class_security_analysis.py",
          "line": 140,
          "pattern": "function_name",
          "content": "name=\"Asset Management\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Identity Management and Access Control",
          "file": "scripts/world_class_security_analysis.py",
          "line": 152,
          "pattern": "function_name",
          "content": "name=\"Identity Management and Access Control\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Security Continuous Monitoring",
          "file": "scripts/world_class_security_analysis.py",
          "line": 164,
          "pattern": "function_name",
          "content": "name=\"Security Continuous Monitoring\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Information Security Policies",
          "file": "scripts/world_class_security_analysis.py",
          "line": 182,
          "pattern": "function_name",
          "content": "name=\"Information Security Policies\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Organization of Information Security",
          "file": "scripts/world_class_security_analysis.py",
          "line": 194,
          "pattern": "function_name",
          "content": "name=\"Organization of Information Security\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Inventory and Control of Enterprise Assets",
          "file": "scripts/world_class_security_analysis.py",
          "line": 212,
          "pattern": "function_name",
          "content": "name=\"Inventory and Control of Enterprise Assets\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Inventory and Control of Software Assets",
          "file": "scripts/world_class_security_analysis.py",
          "line": 224,
          "pattern": "function_name",
          "content": "name=\"Inventory and Control of Software Assets\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Cross-site Scripting (XSS)",
          "file": "scripts/world_class_security_analysis.py",
          "line": 242,
          "pattern": "function_name",
          "content": "name=\"Cross-site Scripting (XSS)\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "SQL Injection",
          "file": "scripts/world_class_security_analysis.py",
          "line": 254,
          "pattern": "function_name",
          "content": "name=\"SQL Injection\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Security of Processing",
          "file": "scripts/world_class_security_analysis.py",
          "line": 272,
          "pattern": "function_name",
          "content": "name=\"Security of Processing\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "Data Protection by Design",
          "file": "scripts/world_class_security_analysis.py",
          "line": 288,
          "pattern": "function_name",
          "content": "name=\"Data Protection by Design\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_password_security_to_sleep",
          "file": "scripts/test_password_security_quality.py",
          "line": 195,
          "pattern": "sleep_function",
          "content": "\"Спящий режим\": os.path.exists(\"scripts/put_password_security_to_sleep.py\"),",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "put_ci_pipeline_to_sleep",
          "file": "scripts/put_ci_pipeline_to_sleep.py",
          "line": 19,
          "pattern": "sleep_function",
          "content": "def put_ci_pipeline_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_condition\": \"При необходимости автоматизации развертывания\",",
          "file": "scripts/put_ci_pipeline_to_sleep.py",
          "line": 112,
          "pattern": "wake_function",
          "content": "\"wake_up_condition\": \"При необходимости автоматизации развертывания\",",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "behavioral_analysis_agent",
          "file": "scripts/test_behavioral_analysis_agent_integration.py",
          "line": 34,
          "pattern": "function_id",
          "content": "function_id=\"behavioral_analysis_agent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "BehavioralAnalysisAgent",
          "file": "scripts/test_behavioral_analysis_agent_integration.py",
          "line": 35,
          "pattern": "function_name",
          "content": "name=\"BehavioralAnalysisAgent\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_function(\"behavioral_analysis_agent\")",
          "file": "scripts/test_behavioral_analysis_agent_integration.py",
          "line": 46,
          "pattern": "enable_function",
          "content": "sfm.enable_function(\"behavioral_analysis_agent\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_auto_management\": False,  # Отключаем для теста",
          "file": "scripts/test_sfm_optimizations.py",
          "line": 29,
          "pattern": "enable_function",
          "content": "\"enable_auto_management\": False,  # Отключаем для теста",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_sleep_mode\": False",
          "file": "scripts/test_sfm_optimizations.py",
          "line": 30,
          "pattern": "enable_function",
          "content": "\"enable_sleep_mode\": False",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "wake_up_command': 'python3 scripts/setup_wizard.py'",
          "file": "scripts/integrate_new_components.py",
          "line": 183,
          "pattern": "wake_function",
          "content": "'wake_up_command': 'python3 scripts/setup_wizard.py'",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command': 'python3 mobile/mobile_api.py'",
          "file": "scripts/integrate_new_components.py",
          "line": 193,
          "pattern": "wake_function",
          "content": "'wake_up_command': 'python3 mobile/mobile_api.py'",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "wake_up_command': 'python3 scripts/ultra_fast_test.py'",
          "file": "scripts/integrate_new_components.py",
          "line": 198,
          "pattern": "wake_function",
          "content": "'wake_up_command': 'python3 scripts/ultra_fast_test.py'",
          "is_sleep": false,
          "is_wake": true,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "disable_existing_loggers\": False,",
          "file": "scripts/auto_configuration.py",
          "line": 226,
          "pattern": "disable_function",
          "content": "\"disable_existing_loggers\": False,",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": true,
          "is_enable": false
        }
      ],
      "PRIVACY": [
        {
          "function_id": "put_universal_privacy_to_sleep",
          "file": "scripts/put_universal_privacy_to_sleep.py",
          "line": 12,
          "pattern": "sleep_function",
          "content": "def put_universal_privacy_to_sleep():",
          "is_sleep": true,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "ALADDIN",
          "file": "scripts/test_privacy_manager_integration.py",
          "line": 26,
          "pattern": "function_name",
          "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "privacy_manager",
          "file": "scripts/test_privacy_manager_integration.py",
          "line": 31,
          "pattern": "function_id",
          "content": "function_id=\"privacy_manager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "UniversalPrivacyManager",
          "file": "scripts/test_privacy_manager_integration.py",
          "line": 32,
          "pattern": "function_name",
          "content": "name=\"UniversalPrivacyManager\",",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": false
        },
        {
          "function_id": "enable_success = sfm.enable_function(\"privacy_manager\")",
          "file": "scripts/test_privacy_manager_integration.py",
          "line": 42,
          "pattern": "enable_function",
          "content": "enable_success = sfm.enable_function(\"privacy_manager\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success}\")",
          "file": "scripts/test_privacy_manager_integration.py",
          "line": 43,
          "pattern": "enable_function",
          "content": "print(f\"✅ UniversalPrivacyManager включен! Результат: {enable_success}\")",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        },
        {
          "function_id": "enable_success and register_success and",
          "file": "scripts/test_privacy_manager_integration.py",
          "line": 140,
          "pattern": "enable_function",
          "content": "if (registration_success and enable_success and register_success and",
          "is_sleep": false,
          "is_wake": false,
          "is_disable": false,
          "is_enable": true
        }
      ]
    },
    "functions_by_file": {
      "threat_intelligence_system.py": 6,
      "test_security_monitoring_comprehensive.py": 1,
      "monitoring_api_server.py": 1,
      "test_security_monitoring_classes.py": 1,
      "russian_apis_server.py": 1,
      "simple_architecture_visualizer.py": 1,
      "test_security_analytics_comprehensive.py": 3,
      "export_manager.py": 2,
      "test_sfm_persistence_final.py": 2,
      "enhanced_architecture_visualizer.py": 1,
      "enhanced_dashboard_v2.py": 9,
      "test_security_monitoring_final.py": 1,
      "wake_up_systems.py": 6,
      "register_sfm_components.py": 8,
      "simple_api_docs.py": 1,
      "test_service_mesh_manager_etap8.py": 2,
      "elasticsearch_simulator.py": 1,
      "test_security_monitoring_improvements.py": 1,
      "enhanced_api_docs.py": 1,
      "test_security_monitoring_methods.py": 1,
      "backup_old_components_20250905_235049/emergency_response_interface.py": 2,
      "backup_old_components_20250905_235049/family_communication_hub.py": 2,
      "backup_old_components_20250905_235049/notification_bot.py": 3,
      "core/logging_module.py": 5,
      "config/safe_config.py": 23,
      "config/replacement_components_config.py": 1,
      "security/thread_pool_manager.py": 5,
      "security/secrets_manager.py": 1,
      "security/security_reporting.py": 1,
      "security/minimal_security_integration.py": 2,
      "security/test_smart_monitoring_methods.py": 2,
      "security/security_monitoring.py": 1,
      "security/ransomware_protection.py": 6,
      "security/security_audit.py": 3,
      "security/compliance_manager.py": 4,
      "security/zero_trust_manager.py": 5,
      "security/unified_security_orchestrator.py": 9,
      "security/mfa_service.py": 10,
      "security/advanced_alerting_system.py": 8,
      "security/security_monitoring_original_backup_20250930_230904.py": 1,
      "security/test_security_function.py": 1,
      "security/threat_intelligence.py": 4,
      "security/smart_monitoring.py": 25,
      "security/security_policy.py": 7,
      "security/circuit_breaker.py": 1,
      "security/safe_security_monitoring.py": 3,
      "security/safe_function_manager.py": 39,
      "security/threat_detection.py": 3,
      "security/russian_api_manager.py": 1,
      "security/smart_data_manager.py": 5,
      "security/safe_function_manager_fixed.py": 8,
      "security/ai_optimization_engine.py": 1,
      "security/security_monitoring_backup_before_enhancement_20250930_231914.py": 1,
      "security/security_integration.py": 4,
      "security/secrets_api.py": 1,
      "security/device_security_original_backup_20250103.py": 2,
      "security/advanced_monitoring_manager.py": 16,
      "security/anonymous_family_profiles.py": 4,
      "security/test_enhanced_features.py": 1,
      "security/security_layer.py": 3,
      "security/enhanced_alerting.py": 6,
      "security/anonymous_data_manager.py": 8,
      "security/security_monitoring_a_plus.py": 1,
      "security/simple_security_integration.py": 6,
      "security/persistence_integrator.py": 4,
      "security/access_control.py": 8,
      "security/security_monitoring_backup.py": 1,
      "security/audit_system.py": 3,
      "security/data_protection_manager.py": 7,
      "security/safe_function_manager_patch.py": 6,
      "security/microservices/simple_sleep.py": 20,
      "security/microservices/safe_function_manager_integration.py": 15,
      "security/microservices/user_interface_manager.py": 3,
      "security/microservices/rate_limiter.py": 2,
      "security/microservices/redis_cache_manager.py": 6,
      "security/microservices/service_mesh_manager.py": 11,
      "security/microservices/put_to_sleep_enhanced.py": 3,
      "security/microservices/emergency_base_models.py": 2,
      "security/microservices/wake_up_systems.py": 6,
      "security/bots/messenger_bots_integration_test.py": 5,
      "security/bots/integration_test_suite.py": 4,
      "security/bots/network_security_bot.py": 1,
      "security/bots/messenger_integration.py": 10,
      "security/bots/max_messenger_security_bot.py": 2,
      "security/bots/emergency_response_bot.py": 4,
      "security/bots/incognito_protection_bot.py": 1,
      "security/bots/gaming_security_bot.py": 1,
      "security/bots/parental_control_bot.py": 3,
      "security/bots/notification_bot.py": 1,
      "security/bots/instagram_security_bot.py": 2,
      "security/bots/device_security_bot.py": 2,
      "security/bots/browser_security_bot.py": 3,
      "security/bots/whatsapp_security_bot.py": 1,
      "security/bots/components/config_manager.py": 15,
      "security/bots/components/advanced_logger.py": 8,
      "security/ci_cd/ci_pipeline_manager.py": 1,
      "security/config/color_scheme.py": 5,
      "security/vpn/sleep_mode_manager.py": 6,
      "security/vpn/vpn_manager.py": 1,
      "security/vpn/vpn_configuration.py": 18,
      "security/vpn/test_final_integration.py": 1,
      "security/vpn/vpn_analytics.py": 1,
      "security/vpn/sleep_mode_all_security_components.py": 1,
      "security/vpn/test_performance_features.py": 1,
      "security/vpn/sleep_mode_all_components.py": 1,
      "security/vpn/core/vpn_core.py": 15,
      "security/vpn/web/vpn_web_interface_improved.py": 2,
      "security/vpn/web/vpn_web_interface_premium.py": 1,
      "security/vpn/features/split_tunneling.py": 3,
      "security/vpn/features/multi_hop.py": 1,
      "security/vpn/models/vpn_models.py": 2,
      "security/vpn/compliance/data_localization.py": 6,
      "security/vpn/compliance/russia_compliance.py": 11,
      "security/vpn/integrations/external_services.py": 5,
      "security/vpn/protection/ipv6_dns_protection.py": 1,
      "security/vpn/protection/intrusion_detection.py": 11,
      "security/vpn/protection/rate_limiter.py": 6,
      "security/vpn/protection/ddos_protection.py": 4,
      "security/vpn/api/websocket_api.py": 4,
      "security/vpn/api/graphql_api.py": 6,
      "security/vpn/monitoring/vpn_metrics.py": 4,
      "security/vpn/legal/legal_protection.py": 3,
      "security/vpn/client/vpn_client.py": 6,
      "security/vpn/protocols/openvpn_server.py": 2,
      "security/vpn/protocols/wireguard_server.py": 2,
      "security/vpn/servers/foreign_server_manager.py": 6,
      "security/reactive/security_analytics.py": 1,
      "security/reactive/forensics_service.py": 1,
      "security/reactive/recovery_service.py": 1,
      "security/reactive/threat_intelligence.py": 1,
      "security/reactive/performance_optimizer.py": 25,
      "security/managers/analytics_manager.py": 8,
      "security/managers/integrate_all_bots_to_sleep.py": 2,
      "security/managers/sleep_mode_manager.py": 10,
      "security/managers/monitor_manager.py": 8,
      "security/managers/alert_manager.py": 7,
      "security/managers/external_api_manager.py": 6,
      "security/managers/dashboard_manager.py": 1,
      "security/managers/check_and_sleep_bots.py": 2,
      "security/managers/voice_control_manager.py": 4,
      "security/managers/smart_notification_manager.py": 1,
      "security/managers/elderly_interface_manager_enhanced.py": 1,
      "security/antivirus/antivirus_security_system.py": 6,
      "security/antivirus/core/antivirus_core.py": 4,
      "security/antivirus/scanners/malware_scanner.py": 11,
      "security/family/check_family_system_status.py": 2,
      "security/family/family_profile_manager_enhanced_fixed.py": 8,
      "security/family/register_family_system_in_sfm_correct.py": 8,
      "security/family/family_communication_hub_enhanced.py": 4,
      "security/family/family_profile_manager_enhanced.py": 7,
      "security/family/parent_child_elderly_web_interface.py": 1,
      "security/family/register_family_system_in_sfm.py": 8,
      "security/integrations/russian_banking_integration.py": 1,
      "security/scaling/auto_scaling_engine.py": 6,
      "security/mobile/mobile_api.py": 12,
      "security/ai/super_ai_support_assistant_improved.py": 3,
      "security/ai/super_ai_support_assistant.py": 3,
      "security/preliminary/context_aware_access.py": 7,
      "security/preliminary/policy_engine.py": 2,
      "security/preliminary/zero_trust_service.py": 3,
      "security/orchestration/kubernetes_orchestrator.py": 3,
      "security/active/incident_response.py": 8,
      "security/active/malware_protection.py": 19,
      "security/active/intrusion_prevention.py": 21,
      "security/active/device_security.py": 8,
      "security/active/network_monitoring.py": 12,
      "security/ai_agents/mobile_security_agent.py": 13,
      "security/ai_agents/performance_optimization_agent.py": 10,
      "security/ai_agents/threat_detection_agent.py": 7,
      "security/ai_agents/password_security_agent.py": 2,
      "security/ai_agents/security_quality_analyzer.py": 2,
      "security/ai_agents/contextual_alert_system.py": 1,
      "security/ai_agents/security_quality_analyzer_enhanced.py": 2,
      "security/ai_agents/news_scraper.py": 4,
      "security/ai_agents/incident_response_agent.py": 7,
      "security/ai_agents/threat_intelligence_agent.py": 1,
      "security/ai_agents/network_security_agent.py": 1,
      "security/ai_agents/voice_response_generator.py": 6,
      "security/ai_agents/anti_fraud_master_ai.py": 3,
      "security/ai_agents/financial_protection_hub.py": 5,
      "security/ai_agents/phishing_protection_agent.py": 5,
      "security/ai_agents/mobile_security_agent_enhanced.py": 13,
      "security/ai_agents/malware_detection_agent.py": 4,
      "security/ai_agents/speech_recognition_engine.py": 8,
      "security/ai_agents/password_security_agent_enhanced_v2.py": 1,
      "security/ai_agents/natural_language_processor.py": 7,
      "security/ai_agents/notification_bot.py": 3,
      "security/ai_agents/malware_detection_agent_enhanced.py": 4,
      "security/ai_agents/financial_protection_hub_enhanced.py": 5,
      "security/ai_agents/family_communication_replacement.py": 3,
      "security/ai_agents/voice_security_validator.py": 9,
      "security/ai_agents/parent_control_panel.py": 1,
      "security/ai_agents/emergency_response_system.py": 4,
      "security/ai_agents/mobile_user_ai_agent.py": 21,
      "security/ai_agents/behavioral_analytics_engine.py": 1,
      "security/ai_agents/fraud_detection_api.py": 1,
      "security/ai_agents/compliance_agent.py": 1,
      "sfm_tools_backup/sfm_analyzer.py": 4,
      "architecture/real_time_visualizer.py": 3,
      "cloud/cloud_migration_manager.py": 1,
      "scripts/integrate_advanced_alerting.py": 2,
      "scripts/put_functions_to_sleep.py": 1,
      "scripts/integrate_advanced_monitoring_simple.py": 3,
      "scripts/put_contextual_alert_to_sleep.py": 1,
      "scripts/final_sfm_registry_fix.py": 1,
      "scripts/update_network_monitoring_sfm.py": 1,
      "scripts/register_russian_integrations.py": 1,
      "scripts/register_all_functions_in_sfm.py": 20,
      "scripts/integrate_external_apis_simple.py": 2,
      "scripts/simplify_interface.py": 1,
      "scripts/precise_count_analysis.py": 2,
      "scripts/put_elderly_interface_to_sleep.py": 1,
      "scripts/put_voice_security_to_sleep.py": 1,
      "scripts/integrate_context_aware_access.py": 2,
      "scripts/put_messenger_integration_to_sleep.py": 1,
      "scripts/emergency_wake_up_critical_functions.py": 12,
      "scripts/real_vpn_api_server.py": 1,
      "scripts/corrected_integration_plan.py": 2,
      "scripts/update_circuit_breaker_sfm.py": 1,
      "scripts/sfm_fix_and_validate.py": 2,
      "scripts/integrate_load_balancer_to_safe_manager.py": 2,
      "scripts/put_parent_control_to_sleep.py": 1,
      "scripts/test_apigateway_integration.py": 6,
      "scripts/test_child_protection_integration.py": 4,
      "scripts/put_russian_child_protection_to_sleep.py": 1,
      "scripts/test_threat_intelligence_simple.py": 1,
      "scripts/put_speech_recognition_to_sleep.py": 1,
      "scripts/test_sfm_fix.py": 4,
      "scripts/safe_sleep_mode_implementation.py": 1,
      "scripts/one_click_installer.py": 1,
      "scripts/registry_merge_manager.py": 1,
      "scripts/test_loadbalancer_integration.py": 5,
      "scripts/deactivate_enhanced_services.py": 1,
      "scripts/optimize_system_performance.py": 1,
      "scripts/test_load_balancer_functionality.py": 10,
      "scripts/put_family_communication_to_sleep.py": 4,
      "scripts/emergency_wake_up_all_critical.py": 2,
      "scripts/quick_flake8_report.py": 1,
      "scripts/fix_stage7_add_missing_methods.py": 1,
      "scripts/comprehensive_sfm_test.py": 6,
      "scripts/implement_safe_sleep_mode.py": 1,
      "scripts/test_api_gateway.py": 3,
      "scripts/auto_fix_152_fz_violations.py": 1,
      "scripts/integrate_notification_bot_main.py": 3,
      "scripts/put_emergency_response_to_sleep.py": 4,
      "scripts/complete_registry_fix.py": 1,
      "scripts/test_enhanced_alerting.py": 1,
      "scripts/safe_sleep_mode_optimizer.py": 2,
      "scripts/plan_a_plus_work_optimizer.py": 2,
      "scripts/create_dependency_map.py": 1,
      "scripts/test_elderly_interface_quality.py": 1,
      "scripts/minimal_system_optimizer.py": 2,
      "scripts/put_behavioral_analytics_to_sleep.py": 1,
      "scripts/put_data_protection_agent_to_sleep.py": 1,
      "scripts/put_natural_language_to_sleep.py": 1,
      "scripts/put_mobile_security_to_sleep_simple.py": 1,
      "scripts/integrate_enhanced_alerting.py": 2,
      "scripts/test_load_balancer.py": 3,
      "scripts/simple_disable_functions.py": 3,
      "scripts/integrate_external_apis.py": 2,
      "scripts/put_notification_bot_to_sleep.py": 4,
      "scripts/disable_12_functions.py": 2,
      "scripts/fast_flake8_analysis.py": 1,
      "scripts/integrate_anti_fraud_master_ai.py": 3,
      "scripts/put_api_gateway_to_sleep.py": 6,
      "scripts/advanced_security_metrics.py": 10,
      "scripts/simple_vpn_server.py": 1,
      "scripts/integrate_alerting_simple.py": 4,
      "scripts/sfm_stats_universal.py": 3,
      "scripts/sfm_add_function.py": 1,
      "scripts/simple_register_russian.py": 20,
      "scripts/integrate_high_priority_components.py": 5,
      "scripts/create_vpn_qr.py": 2,
      "scripts/sleep_mode_monitoring_system.py": 1,
      "scripts/test_trust_scoring_integration.py": 4,
      "scripts/disable_personal_functions.py": 6,
      "scripts/minimal_active_system.py": 1,
      "scripts/test_managers_integration.py": 4,
      "scripts/integrate_trust_scoring.py": 2,
      "scripts/stage7_auto_method_fixer.py": 1,
      "scripts/integrate_optimization_components.py": 5,
      "scripts/test_monitor_manager_integration.py": 8,
      "scripts/integrate_russian_apis_simple.py": 3,
      "scripts/put_mobile_security_to_sleep.py": 1,
      "scripts/PHASE1_CRITICAL_COMPONENTS_PLAN.py": 1,
      "scripts/put_incident_response_to_sleep.py": 4,
      "scripts/auto_sleep_mode_implementation.py": 2,
      "scripts/put_child_interface_to_sleep.py": 4,
      "scripts/integrate_api_gateway.py": 3,
      "scripts/put_super_ai_to_sleep.py": 1,
      "scripts/test_constructor_exception.py": 4,
      "scripts/put_threat_intelligence_to_sleep.py": 4,
      "scripts/put_universal_privacy_to_sleep.py": 1,
      "scripts/test_privacy_manager_integration.py": 6,
      "scripts/analyze_all_sfm_functions.py": 11,
      "scripts/wake_up_sleep_manager.py": 2,
      "scripts/put_compliance_to_sleep_final.py": 1,
      "scripts/update_anti_fraud_master_ai_sfm.py": 1,
      "scripts/wake_up_ml_components.py": 2,
      "scripts/integrate_enhanced_alerting_fixed.py": 2,
      "scripts/put_voice_response_to_sleep.py": 1,
      "scripts/integrate_family_functions.py": 6,
      "scripts/true_sfm_function_counter.py": 4,
      "scripts/test_incident_response_quality.py": 1,
      "scripts/test_trust_scoring_integration_fixed.py": 4,
      "scripts/sfm_analyzer.py": 4,
      "scripts/test_child_interface_quality.py": 1,
      "scripts/test_compliance_quality.py": 1,
      "scripts/disable_12_functions_sleep_mode.py": 3,
      "scripts/integrate_advanced_monitoring.py": 1,
      "scripts/put_voice_control_to_sleep.py": 1,
      "scripts/test_family_modern_integration.py": 3,
      "scripts/competitive_analysis.py": 8,
      "scripts/update_threat_intelligence_agent_sfm.py": 1,
      "scripts/put_password_security_to_sleep.py": 4,
      "scripts/integrate_api_gateway_to_safe_manager.py": 2,
      "scripts/ultra_simple_server.py": 1,
      "scripts/sfm_complete_statistics.py": 59,
      "scripts/integrate_mobile_agent.py": 3,
      "scripts/fixed_registry_merge_manager.py": 1,
      "scripts/put_152_fz_to_sleep.py": 1,
      "scripts/test_analytics_manager_integration.py": 9,
      "scripts/ultimate_sfm_fix.py": 2,
      "scripts/integrate_russian_apis.py": 9,
      "scripts/test_dashboard_manager_integration.py": 7,
      "scripts/put_smart_notification_to_sleep.py": 1,
      "scripts/fixed_vpn_server.py": 1,
      "scripts/put_vpn_antivirus_to_sleep.py": 1,
      "scripts/world_class_security_analysis.py": 14,
      "scripts/test_password_security_quality.py": 1,
      "scripts/put_ci_pipeline_to_sleep.py": 2,
      "scripts/test_behavioral_analysis_agent_integration.py": 3,
      "scripts/test_sfm_optimizations.py": 2,
      "scripts/put_mobile_security_100_percent_to_sleep.py": 4,
      "scripts/integrate_new_components.py": 3,
      "scripts/auto_configuration.py": 1,
      "api_docs/secure_api_docs.py": 1,
      "core_backup_20250901_195742/logging_module.py": 5,
      "core_backup_20250901_205100_before_restart/logging_module.py": 5
    },
    "functions_by_pattern": {
      "function_name": 540,
      "enable_function": 492,
      "id\":": 195,
      "wake_function": 110,
      "function_id": 51,
      "disable_function": 42,
      "sleep_function": 47
    },
    "unique_functions": 1172
  },
  "functions": [
    {
      "function_id": "Abuse.ch URLhaus",
      "file": "threat_intelligence_system.py",
      "line": 150,
      "pattern": "function_name",
      "content": "name=\"Abuse.ch URLhaus\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Abuse.ch Feodo Tracker",
      "file": "threat_intelligence_system.py",
      "line": 159,
      "pattern": "function_name",
      "content": "name=\"Abuse.ch Feodo Tracker\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Malware Domain List",
      "file": "threat_intelligence_system.py",
      "line": 168,
      "pattern": "function_name",
      "content": "name=\"Malware Domain List\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Phishing Database",
      "file": "threat_intelligence_system.py",
      "line": 177,
      "pattern": "function_name",
      "content": "name=\"Phishing Database\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Spamhaus DROP List",
      "file": "threat_intelligence_system.py",
      "line": 186,
      "pattern": "function_name",
      "content": "name=\"Spamhaus DROP List\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "CINS Score",
      "file": "threat_intelligence_system.py",
      "line": 195,
      "pattern": "function_name",
      "content": "name=\"CINS Score\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ComprehensiveTestManager",
      "file": "test_security_monitoring_comprehensive.py",
      "line": 97,
      "pattern": "function_name",
      "content": "name=\"ComprehensiveTestManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "MonitoringAPIServer",
      "file": "monitoring_api_server.py",
      "line": 16,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"MonitoringAPIServer\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TestManager",
      "file": "test_security_monitoring_classes.py",
      "line": 78,
      "pattern": "function_name",
      "content": "name=\"TestManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "RussianAPIsServer",
      "file": "russian_apis_server.py",
      "line": 16,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"RussianAPIsServer\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "simple_architecture_visualizer.py",
      "line": 23,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_real_time\": True",
      "file": "test_security_analytics_comprehensive.py",
      "line": 121,
      "pattern": "enable_function",
      "content": "\"enable_real_time\": True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Test Metric",
      "file": "test_security_analytics_comprehensive.py",
      "line": 136,
      "pattern": "function_name",
      "content": "name=\"Test Metric\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_real_time\": True,",
      "file": "test_security_analytics_comprehensive.py",
      "line": 196,
      "pattern": "enable_function",
      "content": "\"enable_real_time\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "ExportManager",
      "file": "export_manager.py",
      "line": 46,
      "pattern": "function_name",
      "content": "self.service_name = \"ExportManager\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Courier",
      "file": "export_manager.py",
      "line": 245,
      "pattern": "function_name",
      "content": "story.append(Paragraph(f\"<b>Метаданные:</b><br/><font name='Courier' size='8'>{metadata_str}</font>\", styles['Normal']))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_persistence}\")",
      "file": "test_sfm_persistence_final.py",
      "line": 48,
      "pattern": "enable_function",
      "content": "print(f\"   Персистентность включена: {sfm.enable_persistence}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Test Persistence Function",
      "file": "test_sfm_persistence_final.py",
      "line": 58,
      "pattern": "function_name",
      "content": "name=\"Test Persistence Function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "enhanced_architecture_visualizer.py",
      "line": 652,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_usage",
      "file": "enhanced_dashboard_v2.py",
      "line": 413,
      "pattern": "function_name",
      "content": "metric_name=\"cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "memory_usage",
      "file": "enhanced_dashboard_v2.py",
      "line": 425,
      "pattern": "function_name",
      "content": "metric_name=\"memory_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "enhanced_dashboard_v2.py",
      "line": 511,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_api_manager",
      "file": "enhanced_dashboard_v2.py",
      "line": 736,
      "pattern": "id\":",
      "content": "\"id\": \"russian_api_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_banking_integration",
      "file": "enhanced_dashboard_v2.py",
      "line": 744,
      "pattern": "id\":",
      "content": "\"id\": \"russian_banking_integration\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_high",
      "file": "enhanced_dashboard_v2.py",
      "line": 925,
      "pattern": "id\":",
      "content": "\"id\": \"cpu_high\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "memory_high",
      "file": "enhanced_dashboard_v2.py",
      "line": 932,
      "pattern": "id\":",
      "content": "\"id\": \"memory_high\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "daily_report",
      "file": "enhanced_dashboard_v2.py",
      "line": 971,
      "pattern": "id\":",
      "content": "\"id\": \"daily_report\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "weekly_report",
      "file": "enhanced_dashboard_v2.py",
      "line": 977,
      "pattern": "id\":",
      "content": "\"id\": \"weekly_report\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "FinalTestManager",
      "file": "test_security_monitoring_final.py",
      "line": 107,
      "pattern": "function_name",
      "content": "name=\"FinalTestManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems():",
      "file": "wake_up_systems.py",
      "line": 7,
      "pattern": "wake_function",
      "content": "def wake_up_systems():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config = {",
      "file": "wake_up_systems.py",
      "line": 11,
      "pattern": "wake_function",
      "content": "wake_up_config = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time()",
      "file": "wake_up_systems.py",
      "line": 16,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "file": "wake_up_systems.py",
      "line": 33,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
      "file": "wake_up_systems.py",
      "line": 34,
      "pattern": "wake_function",
      "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems()",
      "file": "wake_up_systems.py",
      "line": 40,
      "pattern": "wake_function",
      "content": "wake_up_systems()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "external_integrations_system",
      "file": "register_sfm_components.py",
      "line": 74,
      "pattern": "function_id",
      "content": "function_id = \"external_integrations_system\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "threat_intelligence_system",
      "file": "register_sfm_components.py",
      "line": 136,
      "pattern": "function_id",
      "content": "function_id = \"threat_intelligence_system\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "automated_audit_system",
      "file": "register_sfm_components.py",
      "line": 220,
      "pattern": "function_id",
      "content": "function_id = \"automated_audit_system\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enhanced_dashboard_v2",
      "file": "register_sfm_components.py",
      "line": 298,
      "pattern": "function_id",
      "content": "function_id = \"enhanced_dashboard_v2\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "audit_scheduler",
      "file": "register_sfm_components.py",
      "line": 354,
      "pattern": "function_id",
      "content": "function_id = \"audit_scheduler\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "compliance_monitor",
      "file": "register_sfm_components.py",
      "line": 411,
      "pattern": "function_id",
      "content": "function_id = \"compliance_monitor\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "audit_dashboard_integration",
      "file": "register_sfm_components.py",
      "line": 472,
      "pattern": "function_id",
      "content": "function_id = \"audit_dashboard_integration\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "external_integrations_dashboard",
      "file": "register_sfm_components.py",
      "line": 518,
      "pattern": "function_id",
      "content": "function_id = \"external_integrations_dashboard\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "simple_api_docs.py",
      "line": 24,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Test Service",
      "file": "test_service_mesh_manager_etap8.py",
      "line": 189,
      "pattern": "function_name",
      "content": "name=\"Test Service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "API Service",
      "file": "test_service_mesh_manager_etap8.py",
      "line": 348,
      "pattern": "function_name",
      "content": "name=\"API Service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ElasticsearchSimulator",
      "file": "elasticsearch_simulator.py",
      "line": 49,
      "pattern": "function_name",
      "content": "self.service_name = \"ElasticsearchSimulator\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TestManager",
      "file": "test_security_monitoring_improvements.py",
      "line": 94,
      "pattern": "function_name",
      "content": "name=\"TestManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "enhanced_api_docs.py",
      "line": 953,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TestManager",
      "file": "test_security_monitoring_methods.py",
      "line": 89,
      "pattern": "function_name",
      "content": "name=\"TestManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мама",
      "file": "backup_old_components_20250905_235049/emergency_response_interface.py",
      "line": 1665,
      "pattern": "function_name",
      "content": "name=\"Мама\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Папа",
      "file": "backup_old_components_20250905_235049/emergency_response_interface.py",
      "line": 1673,
      "pattern": "function_name",
      "content": "name=\"Папа\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Родитель",
      "file": "backup_old_components_20250905_235049/family_communication_hub.py",
      "line": 1646,
      "pattern": "function_name",
      "content": "name=\"Родитель\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ребенок",
      "file": "backup_old_components_20250905_235049/family_communication_hub.py",
      "line": 1654,
      "pattern": "function_name",
      "content": "name=\"Ребенок\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Уведомление о безопасности",
      "file": "backup_old_components_20250905_235049/notification_bot.py",
      "line": 938,
      "pattern": "function_name",
      "content": "name=\"Уведомление о безопасности\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Семейное уведомление",
      "file": "backup_old_components_20250905_235049/notification_bot.py",
      "line": 950,
      "pattern": "function_name",
      "content": "name=\"Семейное уведомление\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Экстренное уведомление",
      "file": "backup_old_components_20250905_235049/notification_bot.py",
      "line": 962,
      "pattern": "function_name",
      "content": "name=\"Экстренное уведомление\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console = config.get(",
      "file": "core/logging_module.py",
      "line": 88,
      "pattern": "enable_function",
      "content": "self.enable_console = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", True) if config else True",
      "file": "core/logging_module.py",
      "line": 89,
      "pattern": "enable_function",
      "content": "\"enable_console\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
      "file": "core/logging_module.py",
      "line": 90,
      "pattern": "enable_function",
      "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "core/logging_module.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file:",
      "file": "core/logging_module.py",
      "line": 173,
      "pattern": "enable_function",
      "content": "if self.enable_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_destructive_operations = False",
      "file": "config/safe_config.py",
      "line": 29,
      "pattern": "enable_function",
      "content": "self.enable_destructive_operations = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file_operations = False",
      "file": "config/safe_config.py",
      "line": 30,
      "pattern": "enable_function",
      "content": "self.enable_file_operations = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_system_commands = False",
      "file": "config/safe_config.py",
      "line": 31,
      "pattern": "enable_function",
      "content": "self.enable_system_commands = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_operations = False",
      "file": "config/safe_config.py",
      "line": 32,
      "pattern": "enable_function",
      "content": "self.enable_network_operations = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_logging\": True,",
      "file": "config/safe_config.py",
      "line": 121,
      "pattern": "enable_function",
      "content": "\"enable_logging\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_trail\": True,",
      "file": "config/safe_config.py",
      "line": 126,
      "pattern": "enable_function",
      "content": "\"enable_audit_trail\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_database\": False,  # Отключена - может изменять данные",
      "file": "config/safe_config.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "\"enable_database\": False,  # Отключена - может изменять данные",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_backups\": False,  # Отключены - могут удалять файлы",
      "file": "config/safe_config.py",
      "line": 134,
      "pattern": "enable_function",
      "content": "\"enable_backups\": False,  # Отключены - могут удалять файлы",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cleanup\": False,  # Отключена - может удалять данные",
      "file": "config/safe_config.py",
      "line": 135,
      "pattern": "enable_function",
      "content": "\"enable_cleanup\": False,  # Отключена - может удалять данные",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_migrations\": False,  # Отключены - могут изменять схему",
      "file": "config/safe_config.py",
      "line": 136,
      "pattern": "enable_function",
      "content": "\"enable_migrations\": False,  # Отключены - могут изменять схему",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network\": False,",
      "file": "config/safe_config.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "\"enable_network\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_external_apis\": False,",
      "file": "config/safe_config.py",
      "line": 142,
      "pattern": "enable_function",
      "content": "\"enable_external_apis\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_webhooks\": False,",
      "file": "config/safe_config.py",
      "line": 143,
      "pattern": "enable_function",
      "content": "\"enable_webhooks\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_remote_commands\": False,",
      "file": "config/safe_config.py",
      "line": 144,
      "pattern": "enable_function",
      "content": "\"enable_remote_commands\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file_operations\": False,",
      "file": "config/safe_config.py",
      "line": 149,
      "pattern": "enable_function",
      "content": "\"enable_file_operations\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_backups\": False,",
      "file": "config/safe_config.py",
      "line": 151,
      "pattern": "enable_function",
      "content": "\"enable_backups\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cleanup\": False,",
      "file": "config/safe_config.py",
      "line": 152,
      "pattern": "enable_function",
      "content": "\"enable_cleanup\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_temp_files\": False,",
      "file": "config/safe_config.py",
      "line": 153,
      "pattern": "enable_function",
      "content": "\"enable_temp_files\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_destructive_operations\": (",
      "file": "config/safe_config.py",
      "line": 184,
      "pattern": "enable_function",
      "content": "\"enable_destructive_operations\": (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_destructive_operations",
      "file": "config/safe_config.py",
      "line": 185,
      "pattern": "enable_function",
      "content": "self.enable_destructive_operations",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file_operations\": self.enable_file_operations,",
      "file": "config/safe_config.py",
      "line": 187,
      "pattern": "enable_function",
      "content": "\"enable_file_operations\": self.enable_file_operations,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_system_commands\": self.enable_system_commands,",
      "file": "config/safe_config.py",
      "line": 188,
      "pattern": "enable_function",
      "content": "\"enable_system_commands\": self.enable_system_commands,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_operations\": self.enable_network_operations,",
      "file": "config/safe_config.py",
      "line": 189,
      "pattern": "enable_function",
      "content": "\"enable_network_operations\": self.enable_network_operations,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "your_email@gmail.com",
      "file": "config/replacement_components_config.py",
      "line": 20,
      "pattern": "function_name",
      "content": "EMAIL_USERNAME = \"your_email@gmail.com\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_priority_queue: bool = True,",
      "file": "security/thread_pool_manager.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_priority_queue: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue: Включить очередь с приоритетами",
      "file": "security/thread_pool_manager.py",
      "line": 54,
      "pattern": "enable_function",
      "content": "enable_priority_queue: Включить очередь с приоритетами",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue = enable_priority_queue",
      "file": "security/thread_pool_manager.py",
      "line": 58,
      "pattern": "enable_function",
      "content": "self.enable_priority_queue = enable_priority_queue",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue:",
      "file": "security/thread_pool_manager.py",
      "line": 84,
      "pattern": "enable_function",
      "content": "if enable_priority_queue:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue,",
      "file": "security/thread_pool_manager.py",
      "line": 234,
      "pattern": "enable_function",
      "content": "\"queue_enabled\": self.enable_priority_queue,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "database_password",
      "file": "security/secrets_manager.py",
      "line": 1067,
      "pattern": "function_name",
      "content": "name=\"database_password\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SecurityReporting",
      "file": "security/security_reporting.py",
      "line": 32,
      "pattern": "function_name",
      "content": "self.name = \"SecurityReporting\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_wrappers = False",
      "file": "security/minimal_security_integration.py",
      "line": 29,
      "pattern": "enable_function",
      "content": "self.enable_wrappers = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers\": self.enable_wrappers,",
      "file": "security/minimal_security_integration.py",
      "line": 204,
      "pattern": "enable_function",
      "content": "\"enable_wrappers\": self.enable_wrappers,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Test Rule",
      "file": "security/test_smart_monitoring_methods.py",
      "line": 49,
      "pattern": "function_name",
      "content": "name=\"Test Rule\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_metric",
      "file": "security/test_smart_monitoring_methods.py",
      "line": 50,
      "pattern": "function_name",
      "content": "metric_name=\"test_metric\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SecurityMonitoring",
      "file": "security/security_monitoring.py",
      "line": 31,
      "pattern": "function_name",
      "content": "self.name = \"SecurityMonitoring\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ransomware_protection.py",
      "line": 144,
      "pattern": "function_name",
      "content": "f\"RansomwareSignature(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "WannaCry",
      "file": "security/ransomware_protection.py",
      "line": 440,
      "pattern": "function_name",
      "content": "name=\"WannaCry\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Locky",
      "file": "security/ransomware_protection.py",
      "line": 455,
      "pattern": "function_name",
      "content": "name=\"Locky\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "CryptoLocker",
      "file": "security/ransomware_protection.py",
      "line": 462,
      "pattern": "function_name",
      "content": "name=\"CryptoLocker\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Cerber",
      "file": "security/ransomware_protection.py",
      "line": 475,
      "pattern": "function_name",
      "content": "name=\"Cerber\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "GenericRansomware",
      "file": "security/ransomware_protection.py",
      "line": 482,
      "pattern": "function_name",
      "content": "name=\"GenericRansomware\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_continuous_audit = config.get(\"enable_continuous_audit\", True) if config else True",
      "file": "security/security_audit.py",
      "line": 231,
      "pattern": "enable_function",
      "content": "self.enable_continuous_audit = config.get(\"enable_continuous_audit\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_continuous_audit:",
      "file": "security/security_audit.py",
      "line": 257,
      "pattern": "enable_function",
      "content": "if self.enable_continuous_audit:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_continuous_audit = False",
      "file": "security/security_audit.py",
      "line": 768,
      "pattern": "enable_function",
      "content": "self.enable_continuous_audit = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_reporting = (",
      "file": "security/compliance_manager.py",
      "line": 230,
      "pattern": "enable_function",
      "content": "self.enable_reporting = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_reporting\", True) if config else True",
      "file": "security/compliance_manager.py",
      "line": 231,
      "pattern": "enable_function",
      "content": "config.get(\"enable_reporting\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_reporting:",
      "file": "security/compliance_manager.py",
      "line": 266,
      "pattern": "enable_function",
      "content": "if self.enable_reporting:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/compliance_manager.py",
      "line": 1057,
      "pattern": "function_name",
      "content": "f\"ComplianceManager(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/zero_trust_manager.py",
      "line": 193,
      "pattern": "function_name",
      "content": "f\"SecurityPolicy(id='{self.policy_id}', name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Критические ресурсы",
      "file": "security/zero_trust_manager.py",
      "line": 252,
      "pattern": "function_name",
      "content": "name=\"Критические ресурсы\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Чувствительные данные",
      "file": "security/zero_trust_manager.py",
      "line": 265,
      "pattern": "function_name",
      "content": "name=\"Чувствительные данные\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Общий доступ",
      "file": "security/zero_trust_manager.py",
      "line": 274,
      "pattern": "function_name",
      "content": "name=\"Общий доступ\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "admin",
      "file": "security/zero_trust_manager.py",
      "line": 950,
      "pattern": "function_name",
      "content": "username=\"admin\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_zero_trust\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 58,
      "pattern": "enable_function",
      "content": "\"enable_zero_trust\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 59,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 60,
      "pattern": "enable_function",
      "content": "\"enable_auto_scaling\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaking\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 61,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_mesh\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 62,
      "pattern": "enable_function",
      "content": "\"enable_service_mesh\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_zero_trust\"]",
      "file": "security/unified_security_orchestrator.py",
      "line": 155,
      "pattern": "enable_function",
      "content": "self.integration_config[\"enable_zero_trust\"]",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaking\"]:",
      "file": "security/unified_security_orchestrator.py",
      "line": 171,
      "pattern": "enable_function",
      "content": "if self.integration_config[\"enable_circuit_breaking\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\"]:",
      "file": "security/unified_security_orchestrator.py",
      "line": 179,
      "pattern": "enable_function",
      "content": "if self.integration_config[\"enable_load_balancing\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\"]:",
      "file": "security/unified_security_orchestrator.py",
      "line": 188,
      "pattern": "enable_function",
      "content": "if self.integration_config[\"enable_auto_scaling\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa(self, user_id: str, mfa_type: MFAType) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 119,
      "pattern": "enable_function",
      "content": "def enable_mfa(self, user_id: str, mfa_type: MFAType) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_totp(user_id)",
      "file": "security/mfa_service.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "return self._enable_totp(user_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sms(user_id)",
      "file": "security/mfa_service.py",
      "line": 134,
      "pattern": "enable_function",
      "content": "return self._enable_sms(user_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_email(user_id)",
      "file": "security/mfa_service.py",
      "line": 136,
      "pattern": "enable_function",
      "content": "return self._enable_email(user_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_totp(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 148,
      "pattern": "enable_function",
      "content": "def _enable_totp(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sms(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 182,
      "pattern": "enable_function",
      "content": "def _enable_sms(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_email(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 198,
      "pattern": "enable_function",
      "content": "def _enable_email(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_mfa(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 424,
      "pattern": "disable_function",
      "content": "def disable_mfa(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN Security",
      "file": "security/mfa_service.py",
      "line": 478,
      "pattern": "function_name",
      "content": "name=user_id, issuer_name=\"ALADDIN Security\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_mfa(user_id, MFAType.TOTP)",
      "file": "security/mfa_service.py",
      "line": 618,
      "pattern": "enable_function",
      "content": "result = mfa_service.enable_mfa(user_id, MFAType.TOTP)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "critical_security_threat",
      "file": "security/advanced_alerting_system.py",
      "line": 145,
      "pattern": "function_name",
      "content": "name=\"critical_security_threat\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "high_cpu_usage",
      "file": "security/advanced_alerting_system.py",
      "line": 160,
      "pattern": "function_name",
      "content": "name=\"high_cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "low_memory",
      "file": "security/advanced_alerting_system.py",
      "line": 170,
      "pattern": "function_name",
      "content": "name=\"low_memory\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "system_errors",
      "file": "security/advanced_alerting_system.py",
      "line": 180,
      "pattern": "function_name",
      "content": "name=\"system_errors\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "compliance_violation",
      "file": "security/advanced_alerting_system.py",
      "line": 194,
      "pattern": "function_name",
      "content": "name=\"compliance_violation\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "suspicious_user_activity",
      "file": "security/advanced_alerting_system.py",
      "line": 204,
      "pattern": "function_name",
      "content": "name=\"suspicious_user_activity\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "backup_failure",
      "file": "security/advanced_alerting_system.py",
      "line": 214,
      "pattern": "function_name",
      "content": "name=\"backup_failure\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "integration_failure",
      "file": "security/advanced_alerting_system.py",
      "line": 224,
      "pattern": "function_name",
      "content": "name=\"integration_failure\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SecurityMonitoring",
      "file": "security/security_monitoring_original_backup_20250930_230904.py",
      "line": 31,
      "pattern": "function_name",
      "content": "self.name = \"SecurityMonitoring\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TestSecurityFunction",
      "file": "security/test_security_function.py",
      "line": 10,
      "pattern": "function_name",
      "content": "self.name = \"TestSecurityFunction\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_update = (",
      "file": "security/threat_intelligence.py",
      "line": 159,
      "pattern": "enable_function",
      "content": "self.enable_auto_update = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update\", True) if config else True",
      "file": "security/threat_intelligence.py",
      "line": 160,
      "pattern": "enable_function",
      "content": "config.get(\"enable_auto_update\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update:",
      "file": "security/threat_intelligence.py",
      "line": 195,
      "pattern": "enable_function",
      "content": "if self.enable_auto_update:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update = False",
      "file": "security/threat_intelligence.py",
      "line": 879,
      "pattern": "enable_function",
      "content": "self.enable_auto_update = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "High CPU Usage",
      "file": "security/smart_monitoring.py",
      "line": 27,
      "pattern": "function_name",
      "content": "name=\"High CPU Usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_usage",
      "file": "security/smart_monitoring.py",
      "line": 28,
      "pattern": "function_name",
      "content": "metric_name=\"cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_debug\",",
      "file": "security/smart_monitoring.py",
      "line": 270,
      "pattern": "enable_function",
      "content": "\"enable_debug\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation\",",
      "file": "security/smart_monitoring.py",
      "line": 271,
      "pattern": "enable_function",
      "content": "\"enable_validation\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: Включение отладочного режима",
      "file": "security/smart_monitoring.py",
      "line": 313,
      "pattern": "enable_function",
      "content": "enable_debug: Включение отладочного режима",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation: Включение валидации",
      "file": "security/smart_monitoring.py",
      "line": 314,
      "pattern": "enable_function",
      "content": "enable_validation: Включение валидации",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: bool = False",
      "file": "security/smart_monitoring.py",
      "line": 380,
      "pattern": "enable_function",
      "content": "self.enable_debug: bool = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation: bool = True",
      "file": "security/smart_monitoring.py",
      "line": 383,
      "pattern": "enable_function",
      "content": "self.enable_validation: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/smart_monitoring.py",
      "line": 404,
      "pattern": "function_name",
      "content": "f\"SmartMonitoringSystem(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_debug\": self.enable_debug,",
      "file": "security/smart_monitoring.py",
      "line": 1084,
      "pattern": "enable_function",
      "content": "\"enable_debug\": self.enable_debug,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation\": self.enable_validation,",
      "file": "security/smart_monitoring.py",
      "line": 1085,
      "pattern": "enable_function",
      "content": "\"enable_validation\": self.enable_validation,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug or level in [\"ERROR\", \"CRITICAL\"]:",
      "file": "security/smart_monitoring.py",
      "line": 2316,
      "pattern": "enable_function",
      "content": "if self.enable_debug or level in [\"ERROR\", \"CRITICAL\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: bool = False,",
      "file": "security/smart_monitoring.py",
      "line": 2401,
      "pattern": "enable_function",
      "content": "enable_debug: bool = False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: Включить отладочный вывод",
      "file": "security/smart_monitoring.py",
      "line": 2410,
      "pattern": "enable_function",
      "content": "enable_debug: Включить отладочный вывод",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug = enable_debug",
      "file": "security/smart_monitoring.py",
      "line": 2431,
      "pattern": "enable_function",
      "content": "self.enable_debug = enable_debug",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug=enable_debug,",
      "file": "security/smart_monitoring.py",
      "line": 2438,
      "pattern": "enable_function",
      "content": "enable_debug=enable_debug,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug = settings.get(\"enable_debug\", self.enable_debug)",
      "file": "security/smart_monitoring.py",
      "line": 3167,
      "pattern": "enable_function",
      "content": "self.enable_debug = settings.get(\"enable_debug\", self.enable_debug)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation = settings.get(",
      "file": "security/smart_monitoring.py",
      "line": 3168,
      "pattern": "enable_function",
      "content": "self.enable_validation = settings.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation\", self.enable_validation",
      "file": "security/smart_monitoring.py",
      "line": 3169,
      "pattern": "enable_function",
      "content": "\"enable_validation\", self.enable_validation",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "High Memory Usage",
      "file": "security/smart_monitoring.py",
      "line": 3217,
      "pattern": "function_name",
      "content": "name=\"High Memory Usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "memory_usage",
      "file": "security/smart_monitoring.py",
      "line": 3218,
      "pattern": "function_name",
      "content": "metric_name=\"memory_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Low Disk Space",
      "file": "security/smart_monitoring.py",
      "line": 3228,
      "pattern": "function_name",
      "content": "name=\"Low Disk Space\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disk_usage",
      "file": "security/smart_monitoring.py",
      "line": 3229,
      "pattern": "function_name",
      "content": "metric_name=\"disk_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "High Error Rate",
      "file": "security/smart_monitoring.py",
      "line": 3239,
      "pattern": "function_name",
      "content": "name=\"High Error Rate\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "error_rate",
      "file": "security/smart_monitoring.py",
      "line": 3240,
      "pattern": "function_name",
      "content": "metric_name=\"error_rate\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_policy_enforcement = config.get(\"enable_policy_enforcement\", True) if config else True",
      "file": "security/security_policy.py",
      "line": 293,
      "pattern": "enable_function",
      "content": "self.enable_policy_enforcement = config.get(\"enable_policy_enforcement\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Базовая политика паролей",
      "file": "security/security_policy.py",
      "line": 410,
      "pattern": "function_name",
      "content": "name=\"Базовая политика паролей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Минимальная длина пароля",
      "file": "security/security_policy.py",
      "line": 418,
      "pattern": "function_name",
      "content": "name=\"Минимальная длина пароля\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сложность пароля",
      "file": "security/security_policy.py",
      "line": 427,
      "pattern": "function_name",
      "content": "name=\"Сложность пароля\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Базовая политика доступа",
      "file": "security/security_policy.py",
      "line": 450,
      "pattern": "function_name",
      "content": "name=\"Базовая политика доступа\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Требование аутентификации",
      "file": "security/security_policy.py",
      "line": 457,
      "pattern": "function_name",
      "content": "name=\"Требование аутентификации\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_policy_enforcement = False",
      "file": "security/security_policy.py",
      "line": 793,
      "pattern": "enable_function",
      "content": "self.enable_policy_enforcement = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/circuit_breaker.py",
      "line": 91,
      "pattern": "function_name",
      "content": "f\"SmartCircuitBreaker(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_real_time = config.get(\"enable_real_time\", True) if config else True",
      "file": "security/safe_security_monitoring.py",
      "line": 137,
      "pattern": "enable_function",
      "content": "self.enable_real_time = config.get(\"enable_real_time\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time:",
      "file": "security/safe_security_monitoring.py",
      "line": 177,
      "pattern": "enable_function",
      "content": "if self.enable_real_time:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time,",
      "file": "security/safe_security_monitoring.py",
      "line": 405,
      "pattern": "enable_function",
      "content": "\"monitoring_enabled\": self.enable_real_time,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management = config.get(\"enable_auto_management\", False) if config else False",
      "file": "security/safe_function_manager.py",
      "line": 217,
      "pattern": "enable_function",
      "content": "self.enable_auto_management = config.get(\"enable_auto_management\", False) if config else False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode = config.get(\"enable_sleep_mode\", False) if config else False",
      "file": "security/safe_function_manager.py",
      "line": 221,
      "pattern": "enable_function",
      "content": "self.enable_sleep_mode = config.get(\"enable_sleep_mode\", False) if config else False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management:",
      "file": "security/safe_function_manager.py",
      "line": 358,
      "pattern": "enable_function",
      "content": "if self.enable_auto_management:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode and self.auto_sleep_enabled:",
      "file": "security/safe_function_manager.py",
      "line": 362,
      "pattern": "enable_function",
      "content": "if self.enable_sleep_mode and self.auto_sleep_enabled:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/safe_function_manager.py",
      "line": 432,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "security/safe_function_manager.py",
      "line": 433,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\": True,",
      "file": "security/safe_function_manager.py",
      "line": 434,
      "pattern": "enable_function",
      "content": "\"enable_health_checks\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": True,",
      "file": "security/safe_function_manager.py",
      "line": 435,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\": True,",
      "file": "security/safe_function_manager.py",
      "line": 436,
      "pattern": "enable_function",
      "content": "\"enable_caching\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async\": True,",
      "file": "security/safe_function_manager.py",
      "line": 437,
      "pattern": "enable_function",
      "content": "\"enable_async\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prometheus\": True,",
      "file": "security/safe_function_manager.py",
      "line": 438,
      "pattern": "enable_function",
      "content": "\"enable_prometheus\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_redis\": self.redis_enabled,",
      "file": "security/safe_function_manager.py",
      "line": 439,
      "pattern": "enable_function",
      "content": "\"enable_redis\": self.redis_enabled,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Safe Function Manager",
      "file": "security/safe_function_manager.py",
      "line": 489,
      "pattern": "function_name",
      "content": "name=\"Safe Function Manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(func_data[\"function_id\"])",
      "file": "security/safe_function_manager.py",
      "line": 768,
      "pattern": "enable_function",
      "content": "self.enable_function(func_data[\"function_id\"])",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function.function_id)",
      "file": "security/safe_function_manager.py",
      "line": 794,
      "pattern": "enable_function",
      "content": "self.enable_function(function.function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "security/safe_function_manager.py",
      "line": 878,
      "pattern": "enable_function",
      "content": "self.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function(function_id)",
      "file": "security/safe_function_manager.py",
      "line": 914,
      "pattern": "disable_function",
      "content": "self.disable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function(self, function_id: str) -> bool:",
      "file": "security/safe_function_manager.py",
      "line": 936,
      "pattern": "enable_function",
      "content": "def enable_function(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function(self, function_id: str) -> bool:",
      "file": "security/safe_function_manager.py",
      "line": 976,
      "pattern": "disable_function",
      "content": "def disable_function(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "sfm_critical_sleeping_count",
      "file": "security/safe_function_manager.py",
      "line": 1548,
      "pattern": "function_name",
      "content": "metric_name=\"sfm_critical_sleeping_count\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SleepManagementWorker",
      "file": "security/safe_function_manager.py",
      "line": 1763,
      "pattern": "function_name",
      "content": "target=self._sleep_management_worker, name=\"SleepManagementWorker\", daemon=True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sfm_sleeping_functions_count",
      "file": "security/safe_function_manager.py",
      "line": 1813,
      "pattern": "function_name",
      "content": "metric_name=\"sfm_sleeping_functions_count\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_sleep_mode: bool = None,",
      "file": "security/safe_function_manager.py",
      "line": 1846,
      "pattern": "enable_function",
      "content": "enable_sleep_mode: bool = None,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode is not None:",
      "file": "security/safe_function_manager.py",
      "line": 1855,
      "pattern": "enable_function",
      "content": "if enable_sleep_mode is not None:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode = enable_sleep_mode",
      "file": "security/safe_function_manager.py",
      "line": 1856,
      "pattern": "enable_function",
      "content": "self.enable_sleep_mode = enable_sleep_mode",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Critical Functions Sleeping",
      "file": "security/safe_function_manager.py",
      "line": 1939,
      "pattern": "function_name",
      "content": "name=\"Critical Functions Sleeping\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "High Sleeping Functions Count",
      "file": "security/safe_function_manager.py",
      "line": 1951,
      "pattern": "function_name",
      "content": "name=\"High Sleeping Functions Count\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Sleep Management Errors",
      "file": "security/safe_function_manager.py",
      "line": 1963,
      "pattern": "function_name",
      "content": "name=\"Sleep Management Errors\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sfm_sleep_errors_count",
      "file": "security/safe_function_manager.py",
      "line": 1964,
      "pattern": "function_name",
      "content": "metric_name=\"sfm_sleep_errors_count\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Critical Functions Sleeping Security Alert",
      "file": "security/safe_function_manager.py",
      "line": 2327,
      "pattern": "function_name",
      "content": "name=\"Critical Functions Sleeping Security Alert\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Mass Sleep Transition Security Alert",
      "file": "security/safe_function_manager.py",
      "line": 2341,
      "pattern": "function_name",
      "content": "name=\"Mass Sleep Transition Security Alert\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Sleep Management Errors Security Alert",
      "file": "security/safe_function_manager.py",
      "line": 2355,
      "pattern": "function_name",
      "content": "name=\"Sleep Management Errors Security Alert\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SFM Performance Security Alert",
      "file": "security/safe_function_manager.py",
      "line": 2369,
      "pattern": "function_name",
      "content": "name=\"SFM Performance Security Alert\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_service_mesh(self) -> bool:",
      "file": "security/safe_function_manager.py",
      "line": 3217,
      "pattern": "enable_function",
      "content": "def enable_service_mesh(self) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_service_mesh(self) -> bool:",
      "file": "security/safe_function_manager.py",
      "line": 3238,
      "pattern": "disable_function",
      "content": "def disable_service_mesh(self) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "Масштабирование по активным функциям",
      "file": "security/safe_function_manager.py",
      "line": 3440,
      "pattern": "function_name",
      "content": "name=\"Масштабирование по активным функциям\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_usage",
      "file": "security/safe_function_manager.py",
      "line": 3442,
      "pattern": "function_name",
      "content": "metric_name=\"cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Масштабирование по ошибкам",
      "file": "security/safe_function_manager.py",
      "line": 3455,
      "pattern": "function_name",
      "content": "name=\"Масштабирование по ошибкам\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "error_rate",
      "file": "security/safe_function_manager.py",
      "line": 3457,
      "pattern": "function_name",
      "content": "metric_name=\"error_rate\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Подозрительный исполняемый файл",
      "file": "security/threat_detection.py",
      "line": 269,
      "pattern": "function_name",
      "content": "name=\"Подозрительный исполняемый файл\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Подозрительная ссылка",
      "file": "security/threat_detection.py",
      "line": 279,
      "pattern": "function_name",
      "content": "name=\"Подозрительная ссылка\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Аномальный трафик",
      "file": "security/threat_detection.py",
      "line": 289,
      "pattern": "function_name",
      "content": "name=\"Аномальный трафик\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "RussianAPIManager",
      "file": "security/russian_api_manager.py",
      "line": 79,
      "pattern": "function_name",
      "content": "self.logger = LoggingManager(name=\"RussianAPIManager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_compression = config.get(\"enable_compression\", True) if config else True",
      "file": "security/smart_data_manager.py",
      "line": 60,
      "pattern": "enable_function",
      "content": "self.enable_compression = config.get(\"enable_compression\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_archiving = config.get(\"enable_archiving\", True) if config else True",
      "file": "security/smart_data_manager.py",
      "line": 61,
      "pattern": "enable_function",
      "content": "self.enable_archiving = config.get(\"enable_archiving\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_archiving:",
      "file": "security/smart_data_manager.py",
      "line": 298,
      "pattern": "enable_function",
      "content": "if not self.enable_archiving:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_compression\": self.enable_compression,",
      "file": "security/smart_data_manager.py",
      "line": 404,
      "pattern": "enable_function",
      "content": "\"enable_compression\": self.enable_compression,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_archiving\": self.enable_archiving,",
      "file": "security/smart_data_manager.py",
      "line": 405,
      "pattern": "enable_function",
      "content": "\"enable_archiving\": self.enable_archiving,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management = config.get(",
      "file": "security/safe_function_manager_fixed.py",
      "line": 94,
      "pattern": "enable_function",
      "content": "self.enable_auto_management = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management\", True) if config else True",
      "file": "security/safe_function_manager_fixed.py",
      "line": 95,
      "pattern": "enable_function",
      "content": "\"enable_auto_management\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management:",
      "file": "security/safe_function_manager_fixed.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "if self.enable_auto_management:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function.function_id)",
      "file": "security/safe_function_manager_fixed.py",
      "line": 252,
      "pattern": "enable_function",
      "content": "self.enable_function(function.function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "security/safe_function_manager_fixed.py",
      "line": 307,
      "pattern": "enable_function",
      "content": "self.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function(function_id)",
      "file": "security/safe_function_manager_fixed.py",
      "line": 342,
      "pattern": "disable_function",
      "content": "self.disable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function(self, function_id: str) -> bool:",
      "file": "security/safe_function_manager_fixed.py",
      "line": 363,
      "pattern": "enable_function",
      "content": "def enable_function(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function(self, function_id: str) -> bool:",
      "file": "security/safe_function_manager_fixed.py",
      "line": 403,
      "pattern": "disable_function",
      "content": "def disable_function(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "test_function",
      "file": "security/ai_optimization_engine.py",
      "line": 427,
      "pattern": "function_id",
      "content": "function_id=\"test_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SecurityMonitoring",
      "file": "security/security_monitoring_backup_before_enhancement_20250930_231914.py",
      "line": 31,
      "pattern": "function_name",
      "content": "self.name = \"SecurityMonitoring\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "file": "security/security_integration.py",
      "line": 39,
      "pattern": "enable_function",
      "content": "self.enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers:",
      "file": "security/security_integration.py",
      "line": 56,
      "pattern": "enable_function",
      "content": "if self.enable_wrappers:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers else \"direct\"),",
      "file": "security/security_integration.py",
      "line": 148,
      "pattern": "enable_function",
      "content": "\"integration_method\": (\"secure_wrapper\" if self.enable_wrappers else \"direct\"),",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers\": self.enable_wrappers,",
      "file": "security/security_integration.py",
      "line": 342,
      "pattern": "enable_function",
      "content": "\"enable_wrappers\": self.enable_wrappers,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "test_api_key",
      "file": "security/secrets_api.py",
      "line": 893,
      "pattern": "function_name",
      "content": "name=\"test_api_key\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мобильная безопасность",
      "file": "security/device_security_original_backup_20250103.py",
      "line": 318,
      "pattern": "function_name",
      "content": "name=\"Мобильная безопасность\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Безопасность рабочего стола",
      "file": "security/device_security_original_backup_20250103.py",
      "line": 335,
      "pattern": "function_name",
      "content": "name=\"Безопасность рабочего стола\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "AdvancedMonitoringManager",
      "file": "security/advanced_monitoring_manager.py",
      "line": 133,
      "pattern": "function_name",
      "content": "self.logger = LoggingManager(name=\"AdvancedMonitoringManager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Высокая загрузка CPU",
      "file": "security/advanced_monitoring_manager.py",
      "line": 194,
      "pattern": "function_name",
      "content": "name=\"Высокая загрузка CPU\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "system.cpu_percent",
      "file": "security/advanced_monitoring_manager.py",
      "line": 195,
      "pattern": "function_name",
      "content": "metric_name=\"system.cpu_percent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Высокое использование памяти",
      "file": "security/advanced_monitoring_manager.py",
      "line": 202,
      "pattern": "function_name",
      "content": "name=\"Высокое использование памяти\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "system.memory_percent",
      "file": "security/advanced_monitoring_manager.py",
      "line": 203,
      "pattern": "function_name",
      "content": "metric_name=\"system.memory_percent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мало места на диске",
      "file": "security/advanced_monitoring_manager.py",
      "line": 210,
      "pattern": "function_name",
      "content": "name=\"Мало места на диске\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "system.disk_percent",
      "file": "security/advanced_monitoring_manager.py",
      "line": 211,
      "pattern": "function_name",
      "content": "metric_name=\"system.disk_percent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Много неудачных входов",
      "file": "security/advanced_monitoring_manager.py",
      "line": 219,
      "pattern": "function_name",
      "content": "name=\"Много неудачных входов\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "security.failed_logins",
      "file": "security/advanced_monitoring_manager.py",
      "line": 220,
      "pattern": "function_name",
      "content": "metric_name=\"security.failed_logins\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Подозрительная активность",
      "file": "security/advanced_monitoring_manager.py",
      "line": 227,
      "pattern": "function_name",
      "content": "name=\"Подозрительная активность\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "security.suspicious_events",
      "file": "security/advanced_monitoring_manager.py",
      "line": 228,
      "pattern": "function_name",
      "content": "metric_name=\"security.suspicious_events\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Высокое время отклика",
      "file": "security/advanced_monitoring_manager.py",
      "line": 236,
      "pattern": "function_name",
      "content": "name=\"Высокое время отклика\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "performance.response_time",
      "file": "security/advanced_monitoring_manager.py",
      "line": 237,
      "pattern": "function_name",
      "content": "metric_name=\"performance.response_time\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ошибки API",
      "file": "security/advanced_monitoring_manager.py",
      "line": 244,
      "pattern": "function_name",
      "content": "name=\"Ошибки API\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "api.error_rate",
      "file": "security/advanced_monitoring_manager.py",
      "line": 245,
      "pattern": "function_name",
      "content": "metric_name=\"api.error_rate\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/advanced_monitoring_manager.py",
      "line": 1329,
      "pattern": "function_name",
      "content": "f\"AdvancedMonitoringManager(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_001",
      "file": "security/anonymous_family_profiles.py",
      "line": 295,
      "pattern": "id\":",
      "content": "\"id\": \"rec_001\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_002",
      "file": "security/anonymous_family_profiles.py",
      "line": 303,
      "pattern": "id\":",
      "content": "\"id\": \"rec_002\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_003",
      "file": "security/anonymous_family_profiles.py",
      "line": 311,
      "pattern": "id\":",
      "content": "\"id\": \"rec_003\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_004",
      "file": "security/anonymous_family_profiles.py",
      "line": 328,
      "pattern": "id\":",
      "content": "\"id\": \"rec_004\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_debug=True)",
      "file": "security/test_enhanced_features.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "result = system.set_logging_config(\"DEBUG\", enable_debug=True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection = config.get(\"enable_real_time_protection\", True) if config else True",
      "file": "security/security_layer.py",
      "line": 85,
      "pattern": "enable_function",
      "content": "self.enable_real_time_protection = config.get(\"enable_real_time_protection\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection:",
      "file": "security/security_layer.py",
      "line": 128,
      "pattern": "enable_function",
      "content": "if self.enable_real_time_protection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection,",
      "file": "security/security_layer.py",
      "line": 478,
      "pattern": "enable_function",
      "content": "\"real_time_protection\": self.enable_real_time_protection,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "EnhancedAlertingSystem",
      "file": "security/enhanced_alerting.py",
      "line": 82,
      "pattern": "function_name",
      "content": "self.service_name = \"EnhancedAlertingSystem\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Высокая нагрузка на CPU",
      "file": "security/enhanced_alerting.py",
      "line": 144,
      "pattern": "function_name",
      "content": "name=\"Высокая нагрузка на CPU\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Высокая нагрузка на память",
      "file": "security/enhanced_alerting.py",
      "line": 153,
      "pattern": "function_name",
      "content": "name=\"Высокая нагрузка на память\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Обнаружена угроза безопасности",
      "file": "security/enhanced_alerting.py",
      "line": 166,
      "pattern": "function_name",
      "content": "name=\"Обнаружена угроза безопасности\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Системная ошибка",
      "file": "security/enhanced_alerting.py",
      "line": 179,
      "pattern": "function_name",
      "content": "name=\"Системная ошибка\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мало места на диске",
      "file": "security/enhanced_alerting.py",
      "line": 192,
      "pattern": "function_name",
      "content": "name=\"Мало места на диске\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "lesson_001",
      "file": "security/anonymous_data_manager.py",
      "line": 271,
      "pattern": "id\":",
      "content": "\"id\": \"lesson_001\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "lesson_002",
      "file": "security/anonymous_data_manager.py",
      "line": 278,
      "pattern": "id\":",
      "content": "\"id\": \"lesson_002\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "lesson_003",
      "file": "security/anonymous_data_manager.py",
      "line": 291,
      "pattern": "id\":",
      "content": "\"id\": \"lesson_003\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_001",
      "file": "security/anonymous_data_manager.py",
      "line": 351,
      "pattern": "id\":",
      "content": "\"id\": \"rec_001\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_002",
      "file": "security/anonymous_data_manager.py",
      "line": 358,
      "pattern": "id\":",
      "content": "\"id\": \"rec_002\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_003",
      "file": "security/anonymous_data_manager.py",
      "line": 365,
      "pattern": "id\":",
      "content": "\"id\": \"rec_003\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_004",
      "file": "security/anonymous_data_manager.py",
      "line": 380,
      "pattern": "id\":",
      "content": "\"id\": \"rec_004\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rec_005",
      "file": "security/anonymous_data_manager.py",
      "line": 391,
      "pattern": "id\":",
      "content": "\"id\": \"rec_005\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/security_monitoring_a_plus.py",
      "line": 633,
      "pattern": "function_name",
      "content": "f\"SecurityMonitoringManager(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "file": "security/simple_security_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "self.enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers:",
      "file": "security/simple_security_integration.py",
      "line": 59,
      "pattern": "enable_function",
      "content": "if self.enable_wrappers:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection\": False})",
      "file": "security/simple_security_integration.py",
      "line": 79,
      "pattern": "enable_function",
      "content": "self.security_layer = SecurityLayer(config={\"enable_real_time_protection\": False})",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit\": False})",
      "file": "security/simple_security_integration.py",
      "line": 80,
      "pattern": "enable_function",
      "content": "self.audit_system = AuditSystem(config={\"enable_real_time_audit\": False})",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist\": False})",
      "file": "security/simple_security_integration.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "self.access_control = AccessControl(config={\"enable_ip_whitelist\": False})",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers\": self.enable_wrappers,",
      "file": "security/simple_security_integration.py",
      "line": 257,
      "pattern": "enable_function",
      "content": "\"enable_wrappers\": self.enable_wrappers,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function_with_persistence(self, function_id: str) -> bool:",
      "file": "security/persistence_integrator.py",
      "line": 198,
      "pattern": "enable_function",
      "content": "def enable_function_with_persistence(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "security/persistence_integrator.py",
      "line": 201,
      "pattern": "enable_function",
      "content": "success = self.sfm.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function_with_persistence(self, function_id: str) -> bool:",
      "file": "security/persistence_integrator.py",
      "line": 213,
      "pattern": "disable_function",
      "content": "def disable_function_with_persistence(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_function(function_id)",
      "file": "security/persistence_integrator.py",
      "line": 216,
      "pattern": "disable_function",
      "content": "success = self.sfm.disable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_mfa (bool): Включение многофакторной аутентификации",
      "file": "security/access_control.py",
      "line": 193,
      "pattern": "enable_function",
      "content": "enable_mfa (bool): Включение многофакторной аутентификации",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist (bool): Включение белого списка IP",
      "file": "security/access_control.py",
      "line": 194,
      "pattern": "enable_function",
      "content": "enable_ip_whitelist (bool): Включение белого списка IP",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist = (",
      "file": "security/access_control.py",
      "line": 228,
      "pattern": "enable_function",
      "content": "self.enable_ip_whitelist = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist\", True) if config else True",
      "file": "security/access_control.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "config.get(\"enable_ip_whitelist\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa = config.get(\"enable_mfa\", False) if config else False",
      "file": "security/access_control.py",
      "line": 231,
      "pattern": "enable_function",
      "content": "self.enable_mfa = config.get(\"enable_mfa\", False) if config else False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist:",
      "file": "security/access_control.py",
      "line": 444,
      "pattern": "enable_function",
      "content": "if ip_address and self.enable_ip_whitelist:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist\": self.enable_ip_whitelist,",
      "file": "security/access_control.py",
      "line": 886,
      "pattern": "enable_function",
      "content": "\"enable_ip_whitelist\": self.enable_ip_whitelist,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa\": self.enable_mfa,",
      "file": "security/access_control.py",
      "line": 887,
      "pattern": "enable_function",
      "content": "\"enable_mfa\": self.enable_mfa,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "SecurityMonitoring",
      "file": "security/security_monitoring_backup.py",
      "line": 34,
      "pattern": "function_name",
      "content": "self.name = \"SecurityMonitoring\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_real_time_audit = config.get(\"enable_real_time_audit\", True) if config else True",
      "file": "security/audit_system.py",
      "line": 83,
      "pattern": "enable_function",
      "content": "self.enable_real_time_audit = config.get(\"enable_real_time_audit\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit:",
      "file": "security/audit_system.py",
      "line": 121,
      "pattern": "enable_function",
      "content": "if self.enable_real_time_audit:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit,",
      "file": "security/audit_system.py",
      "line": 513,
      "pattern": "enable_function",
      "content": "\"real_time_audit\": self.enable_real_time_audit,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption = (",
      "file": "security/data_protection_manager.py",
      "line": 101,
      "pattern": "enable_function",
      "content": "self.enable_encryption = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption\", True) if config else True",
      "file": "security/data_protection_manager.py",
      "line": 102,
      "pattern": "enable_function",
      "content": "config.get(\"enable_encryption\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Политика персональных данных",
      "file": "security/data_protection_manager.py",
      "line": 157,
      "pattern": "function_name",
      "content": "name=\"Политика персональных данных\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Политика финансовых данных",
      "file": "security/data_protection_manager.py",
      "line": 169,
      "pattern": "function_name",
      "content": "name=\"Политика финансовых данных\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_encryption:",
      "file": "security/data_protection_manager.py",
      "line": 180,
      "pattern": "enable_function",
      "content": "if not self.enable_encryption:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption",
      "file": "security/data_protection_manager.py",
      "line": 239,
      "pattern": "enable_function",
      "content": "if self.enable_encryption",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption,",
      "file": "security/data_protection_manager.py",
      "line": 251,
      "pattern": "enable_function",
      "content": "is_encrypted=self.enable_encryption,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management = config\\.get\\(\\'enable_auto_management\\', True\\) \"",
      "file": "security/safe_function_manager_patch.py",
      "line": 19,
      "pattern": "enable_function",
      "content": "r\"(self\\.enable_auto_management = config\\.get\\(\\'enable_auto_management\\', True\\) \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence = config.get(\"enable_persistence\", True) '",
      "file": "security/safe_function_manager_patch.py",
      "line": 24,
      "pattern": "enable_function",
      "content": "r'self.enable_persistence = config.get(\"enable_persistence\", True) '",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence:\\n            self.load_functions()\",",
      "file": "security/safe_function_manager_patch.py",
      "line": 33,
      "pattern": "enable_function",
      "content": "r\"if self.enable_persistence:\\n            self.load_functions()\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function\\(function_id\\))\",",
      "file": "security/safe_function_manager_patch.py",
      "line": 39,
      "pattern": "enable_function",
      "content": "r\"(\\s+# Автоматическое включение если требуется\\s+if auto_enable:\\s+self\\.enable_function\\(function_id\\))\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence:",
      "file": "security/safe_function_manager_patch.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if self.enable_persistence:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function\\(function\\.function_id\\))\",",
      "file": "security/safe_function_manager_patch.py",
      "line": 56,
      "pattern": "enable_function",
      "content": "r\"self\\.enable_function\\(function\\.function_id\\))\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_threshold\": 0.8,",
      "file": "security/microservices/simple_sleep.py",
      "line": 39,
      "pattern": "wake_function",
      "content": "\"wake_up_threshold\": 0.8,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_enabled\": True,",
      "file": "security/microservices/simple_sleep.py",
      "line": 79,
      "pattern": "wake_function",
      "content": "\"auto_wake_up_enabled\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_triggers\": [",
      "file": "security/microservices/simple_sleep.py",
      "line": 80,
      "pattern": "wake_function",
      "content": "\"wake_up_triggers\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config():",
      "file": "security/microservices/simple_sleep.py",
      "line": 98,
      "pattern": "wake_function",
      "content": "def create_wake_up_config():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config = {",
      "file": "security/microservices/simple_sleep.py",
      "line": 102,
      "pattern": "wake_function",
      "content": "wake_up_config = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_threshold\": 0.5,",
      "file": "security/microservices/simple_sleep.py",
      "line": 112,
      "pattern": "wake_function",
      "content": "\"wake_up_threshold\": 0.5,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time(),",
      "file": "security/microservices/simple_sleep.py",
      "line": 116,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time(),",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config",
      "file": "security/microservices/simple_sleep.py",
      "line": 164,
      "pattern": "wake_function",
      "content": "return wake_up_config",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_systems_to_sleep",
      "file": "security/microservices/simple_sleep.py",
      "line": 167,
      "pattern": "sleep_function",
      "content": "def put_systems_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_script = \"\"\"#!/usr/bin/env python3",
      "file": "security/microservices/simple_sleep.py",
      "line": 215,
      "pattern": "wake_function",
      "content": "wake_up_script = \"\"\"#!/usr/bin/env python3",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems():",
      "file": "security/microservices/simple_sleep.py",
      "line": 221,
      "pattern": "wake_function",
      "content": "def wake_up_systems():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time()",
      "file": "security/microservices/simple_sleep.py",
      "line": 230,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "file": "security/microservices/simple_sleep.py",
      "line": 247,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
      "file": "security/microservices/simple_sleep.py",
      "line": 248,
      "pattern": "wake_function",
      "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems()",
      "file": "security/microservices/simple_sleep.py",
      "line": 254,
      "pattern": "wake_function",
      "content": "wake_up_systems()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\", \"w\", encoding=\"utf-8\") as f:",
      "file": "security/microservices/simple_sleep.py",
      "line": 257,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_systems.py\", \"w\", encoding=\"utf-8\") as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_script)",
      "file": "security/microservices/simple_sleep.py",
      "line": 258,
      "pattern": "wake_function",
      "content": "f.write(wake_up_script)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "security/microservices/simple_sleep.py",
      "line": 260,
      "pattern": "wake_function",
      "content": "logger.info(\"🔧 Скрипт пробуждения создан: wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\"",
      "file": "security/microservices/simple_sleep.py",
      "line": 267,
      "pattern": "wake_function",
      "content": "\"🔧 Для ручного пробуждения используйте: python3 wake_up_systems.py\"",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py - скрипт пробуждения\")",
      "file": "security/microservices/simple_sleep.py",
      "line": 308,
      "pattern": "wake_function",
      "content": "print(\"   - wake_up_systems.py - скрипт пробуждения\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_rate_limiter\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 104,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiter\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 106,
      "pattern": "enable_function",
      "content": "\"enable_user_interface_manager\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_monitoring\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 110,
      "pattern": "enable_function",
      "content": "\"enable_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_logging\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 111,
      "pattern": "enable_function",
      "content": "\"enable_logging\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_monitoring\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 176,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_monitoring\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiter\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 224,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_rate_limiter\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_circuit_breaker\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 236,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_user_interface_manager\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiter\": self.config[\"enable_rate_limiter\"],",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 591,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiter\": self.config[\"enable_rate_limiter\"],",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": self.config[",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 592,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": self.config[",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 593,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\": self.config[",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 595,
      "pattern": "enable_function",
      "content": "\"enable_user_interface_manager\": self.config[",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\"",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 596,
      "pattern": "enable_function",
      "content": "\"enable_user_interface_manager\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "test_service",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 636,
      "pattern": "function_name",
      "content": "service_name=\"test_service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_caching\": True,",
      "file": "security/microservices/user_interface_manager.py",
      "line": 617,
      "pattern": "enable_function",
      "content": "\"enable_caching\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\"]:",
      "file": "security/microservices/user_interface_manager.py",
      "line": 1085,
      "pattern": "enable_function",
      "content": "if self.redis_client and self.config[\"enable_caching\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\", False),",
      "file": "security/microservices/user_interface_manager.py",
      "line": 1769,
      "pattern": "enable_function",
      "content": "\"caching_enabled\": self.config.get(\"enable_caching\", False),",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/microservices/rate_limiter.py",
      "line": 414,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"]:",
      "file": "security/microservices/rate_limiter.py",
      "line": 599,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_circuit_breaker\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_compression\": True,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 127,
      "pattern": "enable_function",
      "content": "\"enable_compression\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption\": False,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 128,
      "pattern": "enable_function",
      "content": "\"enable_encryption\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence\": True,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 129,
      "pattern": "enable_function",
      "content": "\"enable_persistence\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering\": False,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 130,
      "pattern": "enable_function",
      "content": "\"enable_clustering\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_monitoring\": True,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 131,
      "pattern": "enable_function",
      "content": "\"enable_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence\"]:",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 179,
      "pattern": "enable_function",
      "content": "if self.cache_config[\"enable_persistence\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_discovery\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 191,
      "pattern": "enable_function",
      "content": "\"enable_service_discovery\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 192,
      "pattern": "enable_function",
      "content": "\"enable_health_checks\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 193,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 194,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 195,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_tracing\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 196,
      "pattern": "enable_function",
      "content": "\"enable_tracing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_discovery\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 247,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_service_discovery\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 351,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_load_balancing\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 355,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_circuit_breaker\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 463,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_health_checks\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 467,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_metrics\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_systems_to_sleep",
      "file": "security/microservices/put_to_sleep_enhanced.py",
      "line": 32,
      "pattern": "sleep_function",
      "content": "async def put_systems_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_threshold\": 0.8,  # Порог для пробуждения",
      "file": "security/microservices/put_to_sleep_enhanced.py",
      "line": 49,
      "pattern": "wake_function",
      "content": "\"wake_up_threshold\": 0.8,  # Порог для пробуждения",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\"",
      "file": "security/microservices/put_to_sleep_enhanced.py",
      "line": 136,
      "pattern": "wake_function",
      "content": "\"🔧 Для ручного пробуждения используйте: python3 wake_up_systems.py\"",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_ml_analysis: bool = True",
      "file": "security/microservices/emergency_base_models.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "enable_ml_analysis: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_risk_analysis: bool = True",
      "file": "security/microservices/emergency_base_models.py",
      "line": 115,
      "pattern": "enable_function",
      "content": "enable_risk_analysis: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems():",
      "file": "security/microservices/wake_up_systems.py",
      "line": 11,
      "pattern": "wake_function",
      "content": "def wake_up_systems():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config = {",
      "file": "security/microservices/wake_up_systems.py",
      "line": 15,
      "pattern": "wake_function",
      "content": "wake_up_config = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time()",
      "file": "security/microservices/wake_up_systems.py",
      "line": 20,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "file": "security/microservices/wake_up_systems.py",
      "line": 37,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
      "file": "security/microservices/wake_up_systems.py",
      "line": 38,
      "pattern": "wake_function",
      "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems()",
      "file": "security/microservices/wake_up_systems.py",
      "line": 44,
      "pattern": "wake_function",
      "content": "wake_up_systems()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "msg_123",
      "file": "security/bots/messenger_bots_integration_test.py",
      "line": 152,
      "pattern": "id\":",
      "content": "\"id\": \"msg_123\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "post_123",
      "file": "security/bots/messenger_bots_integration_test.py",
      "line": 204,
      "pattern": "id\":",
      "content": "\"id\": \"post_123\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "user123",
      "file": "security/bots/messenger_bots_integration_test.py",
      "line": 210,
      "pattern": "id\":",
      "content": "\"id\": \"user123\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "-1001234567890",
      "file": "security/bots/messenger_bots_integration_test.py",
      "line": 237,
      "pattern": "id\":",
      "content": "\"chat\": {\"id\": \"-1001234567890\", \"type\": \"group\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "123456789",
      "file": "security/bots/messenger_bots_integration_test.py",
      "line": 239,
      "pattern": "id\":",
      "content": "\"id\": \"123456789\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results = {}",
      "file": "security/bots/integration_test_suite.py",
      "line": 565,
      "pattern": "wake_function",
      "content": "wake_up_results = {}",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results[name] = {",
      "file": "security/bots/integration_test_suite.py",
      "line": 571,
      "pattern": "wake_function",
      "content": "wake_up_results[name] = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results.values()",
      "file": "security/bots/integration_test_suite.py",
      "line": 584,
      "pattern": "wake_function",
      "content": "result[\"success\"] for result in wake_up_results.values()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results,",
      "file": "security/bots/integration_test_suite.py",
      "line": 586,
      "pattern": "wake_function",
      "content": "\"bot_results\": wake_up_results,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_rate_limiting\": True,",
      "file": "security/bots/network_security_bot.py",
      "line": 176,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiting\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Telegram",
      "file": "security/bots/messenger_integration.py",
      "line": 167,
      "pattern": "function_name",
      "content": "name=\"Telegram\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN_Security_Bot",
      "file": "security/bots/messenger_integration.py",
      "line": 172,
      "pattern": "function_name",
      "content": "bot_username=\"ALADDIN_Security_Bot\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "WhatsApp",
      "file": "security/bots/messenger_integration.py",
      "line": 178,
      "pattern": "function_name",
      "content": "name=\"WhatsApp\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN Security",
      "file": "security/bots/messenger_integration.py",
      "line": 183,
      "pattern": "function_name",
      "content": "bot_username=\"ALADDIN Security\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Viber",
      "file": "security/bots/messenger_integration.py",
      "line": 189,
      "pattern": "function_name",
      "content": "name=\"Viber\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Discord",
      "file": "security/bots/messenger_integration.py",
      "line": 200,
      "pattern": "function_name",
      "content": "name=\"Discord\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Slack",
      "file": "security/bots/messenger_integration.py",
      "line": 211,
      "pattern": "function_name",
      "content": "name=\"Slack\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VK",
      "file": "security/bots/messenger_integration.py",
      "line": 222,
      "pattern": "function_name",
      "content": "name=\"VK\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Яндекс.Мессенджер",
      "file": "security/bots/messenger_integration.py",
      "line": 233,
      "pattern": "function_name",
      "content": "name=\"Яндекс.Мессенджер\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Российские мессенджеры",
      "file": "security/bots/messenger_integration.py",
      "line": 246,
      "pattern": "function_name",
      "content": "name=\"Российские мессенджеры\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "-1001234567890",
      "file": "security/bots/max_messenger_security_bot.py",
      "line": 1239,
      "pattern": "id\":",
      "content": "\"chat\": {\"id\": \"-1001234567890\", \"type\": \"group\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "123456789",
      "file": "security/bots/max_messenger_security_bot.py",
      "line": 1241,
      "pattern": "id\":",
      "content": "\"id\": \"123456789\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_geofencing\": True,",
      "file": "security/bots/emergency_response_bot.py",
      "line": 281,
      "pattern": "enable_function",
      "content": "\"enable_geofencing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_voice_recognition\": True,",
      "file": "security/bots/emergency_response_bot.py",
      "line": 282,
      "pattern": "enable_function",
      "content": "\"enable_voice_recognition\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/bots/emergency_response_bot.py",
      "line": 1339,
      "pattern": "function_name",
      "content": "f\"EmergencyResponseBot(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Test Contact",
      "file": "security/bots/emergency_response_bot.py",
      "line": 2602,
      "pattern": "function_name",
      "content": "name=\"Test Contact\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "DISABLE_EXTENSIONS = \"disable_extensions\"",
      "file": "security/bots/incognito_protection_bot.py",
      "line": 45,
      "pattern": "disable_function",
      "content": "DISABLE_EXTENSIONS = \"disable_extensions\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/bots/gaming_security_bot.py",
      "line": 1446,
      "pattern": "function_name",
      "content": "return f\"GamingSecurityBot(name='{self.name}', status='{status}')\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console=self.config.logging.enable_console,",
      "file": "security/bots/parental_control_bot.py",
      "line": 656,
      "pattern": "enable_function",
      "content": "enable_console=self.config.logging.enable_console,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file=self.config.logging.enable_file,",
      "file": "security/bots/parental_control_bot.py",
      "line": 657,
      "pattern": "enable_function",
      "content": "enable_file=self.config.logging.enable_file,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics=self.config.logging.enable_metrics,",
      "file": "security/bots/parental_control_bot.py",
      "line": 658,
      "pattern": "enable_function",
      "content": "enable_metrics=self.config.logging.enable_metrics,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/bots/notification_bot.py",
      "line": 1572,
      "pattern": "function_name",
      "content": "f\"NotificationBot(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "123456789",
      "file": "security/bots/instagram_security_bot.py",
      "line": 1216,
      "pattern": "id\":",
      "content": "\"id\": \"123456789\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "post_12345",
      "file": "security/bots/instagram_security_bot.py",
      "line": 1232,
      "pattern": "id\":",
      "content": "\"id\": \"post_12345\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_firewall\": True,",
      "file": "security/bots/device_security_bot.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "\"enable_firewall\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "unknown",
      "file": "security/bots/device_security_bot.py",
      "line": 630,
      "pattern": "function_name",
      "content": "os_name=\"unknown\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_location_tracking\": True,",
      "file": "security/bots/browser_security_bot.py",
      "line": 145,
      "pattern": "disable_function",
      "content": "\"disable_location_tracking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_camera_mic\": True,",
      "file": "security/bots/browser_security_bot.py",
      "line": 146,
      "pattern": "disable_function",
      "content": "\"disable_camera_mic\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_compression\": True,",
      "file": "security/bots/browser_security_bot.py",
      "line": 151,
      "pattern": "enable_function",
      "content": "\"enable_compression\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "test_msg_123",
      "file": "security/bots/whatsapp_security_bot.py",
      "line": 1016,
      "pattern": "id\":",
      "content": "\"id\": \"test_msg_123\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console: bool = True",
      "file": "security/bots/components/config_manager.py",
      "line": 115,
      "pattern": "enable_function",
      "content": "enable_console: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file: bool = True",
      "file": "security/bots/components/config_manager.py",
      "line": 116,
      "pattern": "enable_function",
      "content": "enable_file: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics: bool = True",
      "file": "security/bots/components/config_manager.py",
      "line": 117,
      "pattern": "enable_function",
      "content": "enable_metrics: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\": self.logging.enable_console,",
      "file": "security/bots/components/config_manager.py",
      "line": 225,
      "pattern": "enable_function",
      "content": "\"enable_console\": self.logging.enable_console,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file\": self.logging.enable_file,",
      "file": "security/bots/components/config_manager.py",
      "line": 226,
      "pattern": "enable_function",
      "content": "\"enable_file\": self.logging.enable_file,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": self.logging.enable_metrics,",
      "file": "security/bots/components/config_manager.py",
      "line": 227,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": self.logging.enable_metrics,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\": {\"type\": \"boolean\"},",
      "file": "security/bots/components/config_manager.py",
      "line": 612,
      "pattern": "enable_function",
      "content": "\"enable_console\": {\"type\": \"boolean\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file\": {\"type\": \"boolean\"},",
      "file": "security/bots/components/config_manager.py",
      "line": 613,
      "pattern": "enable_function",
      "content": "\"enable_file\": {\"type\": \"boolean\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": {\"type\": \"boolean\"},",
      "file": "security/bots/components/config_manager.py",
      "line": 614,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": {\"type\": \"boolean\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console = logging_config.get(",
      "file": "security/bots/components/config_manager.py",
      "line": 816,
      "pattern": "enable_function",
      "content": "config.logging.enable_console = logging_config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", config.logging.enable_console",
      "file": "security/bots/components/config_manager.py",
      "line": 817,
      "pattern": "enable_function",
      "content": "\"enable_console\", config.logging.enable_console",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = logging_config.get(",
      "file": "security/bots/components/config_manager.py",
      "line": 819,
      "pattern": "enable_function",
      "content": "config.logging.enable_file = logging_config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file\", config.logging.enable_file",
      "file": "security/bots/components/config_manager.py",
      "line": 820,
      "pattern": "enable_function",
      "content": "\"enable_file\", config.logging.enable_file",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics = logging_config.get(",
      "file": "security/bots/components/config_manager.py",
      "line": 822,
      "pattern": "enable_function",
      "content": "config.logging.enable_metrics = logging_config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\", config.logging.enable_metrics",
      "file": "security/bots/components/config_manager.py",
      "line": 823,
      "pattern": "enable_function",
      "content": "\"enable_metrics\", config.logging.enable_metrics",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console: bool = True,",
      "file": "security/bots/components/advanced_logger.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "enable_console: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file: bool = True,",
      "file": "security/bots/components/advanced_logger.py",
      "line": 92,
      "pattern": "enable_function",
      "content": "enable_file: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics: bool = True,",
      "file": "security/bots/components/advanced_logger.py",
      "line": 93,
      "pattern": "enable_function",
      "content": "enable_metrics: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console = enable_console",
      "file": "security/bots/components/advanced_logger.py",
      "line": 101,
      "pattern": "enable_function",
      "content": "self.enable_console = enable_console",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = enable_file",
      "file": "security/bots/components/advanced_logger.py",
      "line": 102,
      "pattern": "enable_function",
      "content": "self.enable_file = enable_file",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics = enable_metrics",
      "file": "security/bots/components/advanced_logger.py",
      "line": 103,
      "pattern": "enable_function",
      "content": "self.enable_metrics = enable_metrics",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "security/bots/components/advanced_logger.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file and self.log_file:",
      "file": "security/bots/components/advanced_logger.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "if self.enable_file and self.log_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "CIPipelineManager",
      "file": "security/ci_cd/ci_pipeline_manager.py",
      "line": 221,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"CIPipelineManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Matrix AI",
      "file": "security/config/color_scheme.py",
      "line": 58,
      "pattern": "function_name",
      "content": "name=\"Matrix AI\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Dark Matrix",
      "file": "security/config/color_scheme.py",
      "line": 70,
      "pattern": "function_name",
      "content": "name=\"Dark Matrix\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Light Matrix",
      "file": "security/config/color_scheme.py",
      "line": 82,
      "pattern": "function_name",
      "content": "name=\"Light Matrix\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Elderly Friendly",
      "file": "security/config/color_scheme.py",
      "line": 94,
      "pattern": "function_name",
      "content": "name=\"Elderly Friendly\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Child Friendly",
      "file": "security/config/color_scheme.py",
      "line": 106,
      "pattern": "function_name",
      "content": "name=\"Child Friendly\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VPN Web Interface",
      "file": "security/vpn/sleep_mode_manager.py",
      "line": 122,
      "pattern": "function_name",
      "content": "name=\"VPN Web Interface\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_web_interface",
      "file": "security/vpn/sleep_mode_manager.py",
      "line": 124,
      "pattern": "function_name",
      "content": "process_name=\"vpn_web_interface\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VPN Premium Interface",
      "file": "security/vpn/sleep_mode_manager.py",
      "line": 129,
      "pattern": "function_name",
      "content": "name=\"VPN Premium Interface\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_web_interface_premium",
      "file": "security/vpn/sleep_mode_manager.py",
      "line": 131,
      "pattern": "function_name",
      "content": "process_name=\"vpn_web_interface_premium\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VPN API Server",
      "file": "security/vpn/sleep_mode_manager.py",
      "line": 136,
      "pattern": "function_name",
      "content": "name=\"VPN API Server\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_api_server",
      "file": "security/vpn/sleep_mode_manager.py",
      "line": 138,
      "pattern": "function_name",
      "content": "process_name=\"vpn_api_server\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "testuser",
      "file": "security/vpn/vpn_manager.py",
      "line": 264,
      "pattern": "function_name",
      "content": "username=\"testuser\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_firewall: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 125,
      "pattern": "enable_function",
      "content": "enable_firewall: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 126,
      "pattern": "enable_function",
      "content": "enable_leak_protection: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_blocking: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 127,
      "pattern": "enable_function",
      "content": "enable_malware_blocking: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ad_blocking: bool = False",
      "file": "security/vpn/vpn_configuration.py",
      "line": 128,
      "pattern": "enable_function",
      "content": "enable_ad_blocking: bool = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_tracker_blocking: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 129,
      "pattern": "enable_function",
      "content": "enable_tracker_blocking: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall\": self.enable_firewall,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 138,
      "pattern": "enable_function",
      "content": "\"enable_firewall\": self.enable_firewall,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection\": self.enable_leak_protection,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 139,
      "pattern": "enable_function",
      "content": "\"enable_leak_protection\": self.enable_leak_protection,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_blocking\": self.enable_malware_blocking,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 140,
      "pattern": "enable_function",
      "content": "\"enable_malware_blocking\": self.enable_malware_blocking,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ad_blocking\": self.enable_ad_blocking,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "\"enable_ad_blocking\": self.enable_ad_blocking,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_tracker_blocking\": self.enable_tracker_blocking,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 142,
      "pattern": "enable_function",
      "content": "\"enable_tracker_blocking\": self.enable_tracker_blocking,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ipv6\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 202,
      "pattern": "enable_function",
      "content": "\"enable_ipv6\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_killswitch\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 203,
      "pattern": "enable_function",
      "content": "\"enable_killswitch\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 208,
      "pattern": "enable_function",
      "content": "\"enable_firewall\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 209,
      "pattern": "enable_function",
      "content": "\"enable_leak_protection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_blocking\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 210,
      "pattern": "enable_function",
      "content": "\"enable_malware_blocking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall:",
      "file": "security/vpn/vpn_configuration.py",
      "line": 432,
      "pattern": "enable_function",
      "content": "if not self.security_config.enable_firewall:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection:",
      "file": "security/vpn/vpn_configuration.py",
      "line": 435,
      "pattern": "enable_function",
      "content": "if not self.security_config.enable_leak_protection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "US East Server 1",
      "file": "security/vpn/vpn_configuration.py",
      "line": 647,
      "pattern": "function_name",
      "content": "name=\"US East Server 1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "FinalIntegrationTest",
      "file": "security/vpn/test_final_integration.py",
      "line": 54,
      "pattern": "function_name",
      "content": "self.name = \"FinalIntegrationTest\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "user_data_usage",
      "file": "security/vpn/vpn_analytics.py",
      "line": 674,
      "pattern": "function_name",
      "content": "metric_name=\"user_data_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_security_component_to_sleep",
      "file": "security/vpn/sleep_mode_all_security_components.py",
      "line": 175,
      "pattern": "sleep_function",
      "content": "def put_security_component_to_sleep(self, component_name: str) -> bool:",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_split_tunneling()",
      "file": "security/vpn/test_performance_features.py",
      "line": 174,
      "pattern": "enable_function",
      "content": "split_tunnel.enable_split_tunneling()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_component(self, component_name: str) -> bool:",
      "file": "security/vpn/sleep_mode_all_components.py",
      "line": 217,
      "pattern": "wake_function",
      "content": "def wake_up_component(self, component_name: str) -> bool:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "singapore-1",
      "file": "security/vpn/core/vpn_core.py",
      "line": 173,
      "pattern": "id\":",
      "content": "\"id\": \"singapore-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "singapore-wg",
      "file": "security/vpn/core/vpn_core.py",
      "line": 184,
      "pattern": "id\":",
      "content": "\"id\": \"singapore-wg\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russia-1",
      "file": "security/vpn/core/vpn_core.py",
      "line": 196,
      "pattern": "id\":",
      "content": "\"id\": \"russia-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russia-wg",
      "file": "security/vpn/core/vpn_core.py",
      "line": 207,
      "pattern": "id\":",
      "content": "\"id\": \"russia-wg\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "europe-amsterdam",
      "file": "security/vpn/core/vpn_core.py",
      "line": 219,
      "pattern": "id\":",
      "content": "\"id\": \"europe-amsterdam\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "europe-london",
      "file": "security/vpn/core/vpn_core.py",
      "line": 230,
      "pattern": "id\":",
      "content": "\"id\": \"europe-london\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "europe-frankfurt",
      "file": "security/vpn/core/vpn_core.py",
      "line": 241,
      "pattern": "id\":",
      "content": "\"id\": \"europe-frankfurt\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "europe-wg",
      "file": "security/vpn/core/vpn_core.py",
      "line": 252,
      "pattern": "id\":",
      "content": "\"id\": \"europe-wg\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "usa-ny",
      "file": "security/vpn/core/vpn_core.py",
      "line": 264,
      "pattern": "id\":",
      "content": "\"id\": \"usa-ny\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "usa-la",
      "file": "security/vpn/core/vpn_core.py",
      "line": 275,
      "pattern": "id\":",
      "content": "\"id\": \"usa-la\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "usa-wg",
      "file": "security/vpn/core/vpn_core.py",
      "line": 286,
      "pattern": "id\":",
      "content": "\"id\": \"usa-wg\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "asia-tokyo",
      "file": "security/vpn/core/vpn_core.py",
      "line": 298,
      "pattern": "id\":",
      "content": "\"id\": \"asia-tokyo\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "asia-seoul",
      "file": "security/vpn/core/vpn_core.py",
      "line": 309,
      "pattern": "id\":",
      "content": "\"id\": \"asia-seoul\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "asia-hongkong",
      "file": "security/vpn/core/vpn_core.py",
      "line": 320,
      "pattern": "id\":",
      "content": "\"id\": \"asia-hongkong\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "asia-wg",
      "file": "security/vpn/core/vpn_core.py",
      "line": 331,
      "pattern": "id\":",
      "content": "\"id\": \"asia-wg\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "security/vpn/web/vpn_web_interface_improved.py",
      "line": 94,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "country-card",
      "file": "security/vpn/web/vpn_web_interface_improved.py",
      "line": 479,
      "pattern": "function_name",
      "content": "card.className = 'country-card';",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "security/vpn/web/vpn_web_interface_premium.py",
      "line": 77,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_split_tunneling(self):",
      "file": "security/vpn/features/split_tunneling.py",
      "line": 455,
      "pattern": "enable_function",
      "content": "def enable_split_tunneling(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_split_tunneling(self):",
      "file": "security/vpn/features/split_tunneling.py",
      "line": 460,
      "pattern": "disable_function",
      "content": "def disable_split_tunneling(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_split_tunneling()",
      "file": "security/vpn/features/split_tunneling.py",
      "line": 608,
      "pattern": "enable_function",
      "content": "split_tunnel.enable_split_tunneling()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Моя цепочка",
      "file": "security/vpn/features/multi_hop.py",
      "line": 653,
      "pattern": "function_name",
      "content": "name=\"Моя цепочка\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console: bool = Field(default=True)",
      "file": "security/vpn/models/vpn_models.py",
      "line": 474,
      "pattern": "enable_function",
      "content": "enable_console: bool = Field(default=True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_syslog: bool = Field(default=False)",
      "file": "security/vpn/models/vpn_models.py",
      "line": 475,
      "pattern": "enable_function",
      "content": "enable_syslog: bool = Field(default=False)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "ru-moscow-1",
      "file": "security/vpn/compliance/data_localization.py",
      "line": 52,
      "pattern": "id\":",
      "content": "\"id\": \"ru-moscow-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ru-spb-1",
      "file": "security/vpn/compliance/data_localization.py",
      "line": 62,
      "pattern": "id\":",
      "content": "\"id\": \"ru-spb-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ru-ekb-1",
      "file": "security/vpn/compliance/data_localization.py",
      "line": 72,
      "pattern": "id\":",
      "content": "\"id\": \"ru-ekb-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sg-singapore-1",
      "file": "security/vpn/compliance/data_localization.py",
      "line": 87,
      "pattern": "id\":",
      "content": "\"id\": \"sg-singapore-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "de-frankfurt-1",
      "file": "security/vpn/compliance/data_localization.py",
      "line": 97,
      "pattern": "id\":",
      "content": "\"id\": \"de-frankfurt-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "hk-hongkong-1",
      "file": "security/vpn/compliance/data_localization.py",
      "line": 107,
      "pattern": "id\":",
      "content": "\"id\": \"hk-hongkong-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "data_localization",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 58,
      "pattern": "function_name",
      "content": "check_name=\"data_localization\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "no_logs_policy",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 102,
      "pattern": "function_name",
      "content": "check_name=\"no_logs_policy\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "anonymization",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 143,
      "pattern": "function_name",
      "content": "check_name=\"anonymization\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "user_consent",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 173,
      "pattern": "function_name",
      "content": "check_name=\"user_consent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "data_protection",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 203,
      "pattern": "function_name",
      "content": "check_name=\"data_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ru-moscow-1",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 285,
      "pattern": "id\":",
      "content": "{\"id\": \"ru-moscow-1\", \"location\": \"Москва\", \"country\": \"RU\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ru-spb-1",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 286,
      "pattern": "id\":",
      "content": "{\"id\": \"ru-spb-1\", \"location\": \"Санкт-Петербург\", \"country\": \"RU\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ru-ekb-1",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 287,
      "pattern": "id\":",
      "content": "{\"id\": \"ru-ekb-1\", \"location\": \"Екатеринбург\", \"country\": \"RU\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sg-singapore-1",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 294,
      "pattern": "id\":",
      "content": "{\"id\": \"sg-singapore-1\", \"location\": \"Сингапур\", \"country\": \"SG\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "de-frankfurt-1",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 295,
      "pattern": "id\":",
      "content": "{\"id\": \"de-frankfurt-1\", \"location\": \"Франкфурт\", \"country\": \"DE\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "hk-hongkong-1",
      "file": "security/vpn/compliance/russia_compliance.py",
      "line": 296,
      "pattern": "id\":",
      "content": "{\"id\": \"hk-hongkong-1\", \"location\": \"Гонконг\", \"country\": \"HK\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Stripe Payment",
      "file": "security/vpn/integrations/external_services.py",
      "line": 466,
      "pattern": "function_name",
      "content": "name=\"Stripe Payment\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SendGrid Email",
      "file": "security/vpn/integrations/external_services.py",
      "line": 477,
      "pattern": "function_name",
      "content": "name=\"SendGrid Email\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Twilio SMS",
      "file": "security/vpn/integrations/external_services.py",
      "line": 488,
      "pattern": "function_name",
      "content": "name=\"Twilio SMS\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Mixpanel Analytics",
      "file": "security/vpn/integrations/external_services.py",
      "line": 499,
      "pattern": "function_name",
      "content": "name=\"Mixpanel Analytics\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "AbuseIPDB Security",
      "file": "security/vpn/integrations/external_services.py",
      "line": 510,
      "pattern": "function_name",
      "content": "name=\"AbuseIPDB Security\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_ipv6=1\"],",
      "file": "security/vpn/protection/ipv6_dns_protection.py",
      "line": 318,
      "pattern": "disable_function",
      "content": "[\"sysctl\", \"-w\", \"net.ipv6.conf.all.disable_ipv6=1\"],",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "SQL Injection - Basic",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 237,
      "pattern": "function_name",
      "content": "name=\"SQL Injection - Basic\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SQL Injection - Advanced",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 246,
      "pattern": "function_name",
      "content": "name=\"SQL Injection - Advanced\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "XSS - Script Tags",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 256,
      "pattern": "function_name",
      "content": "name=\"XSS - Script Tags\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "XSS - Event Handlers",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 265,
      "pattern": "function_name",
      "content": "name=\"XSS - Event Handlers\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Path Traversal - Basic",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 275,
      "pattern": "function_name",
      "content": "name=\"Path Traversal - Basic\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Path Traversal - Encoded",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 284,
      "pattern": "function_name",
      "content": "name=\"Path Traversal - Encoded\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Command Injection - Basic",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 294,
      "pattern": "function_name",
      "content": "name=\"Command Injection - Basic\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Command Injection - Advanced",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 303,
      "pattern": "function_name",
      "content": "name=\"Command Injection - Advanced\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Brute Force - Login",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 313,
      "pattern": "function_name",
      "content": "name=\"Brute Force - Login\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Port Scanning",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 325,
      "pattern": "function_name",
      "content": "name=\"Port Scanning\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Malware - Common Patterns",
      "file": "security/vpn/protection/intrusion_detection.py",
      "line": 337,
      "pattern": "function_name",
      "content": "name=\"Malware - Common Patterns\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "general",
      "file": "security/vpn/protection/rate_limiter.py",
      "line": 246,
      "pattern": "function_name",
      "content": "name=\"general\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "api",
      "file": "security/vpn/protection/rate_limiter.py",
      "line": 254,
      "pattern": "function_name",
      "content": "name=\"api\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "login",
      "file": "security/vpn/protection/rate_limiter.py",
      "line": 262,
      "pattern": "function_name",
      "content": "name=\"login\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "admin",
      "file": "security/vpn/protection/rate_limiter.py",
      "line": 270,
      "pattern": "function_name",
      "content": "name=\"admin\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_connect",
      "file": "security/vpn/protection/rate_limiter.py",
      "line": 278,
      "pattern": "function_name",
      "content": "name=\"vpn_connect\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_config",
      "file": "security/vpn/protection/rate_limiter.py",
      "line": 287,
      "pattern": "function_name",
      "content": "name=\"vpn_config\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Rate Limiting",
      "file": "security/vpn/protection/ddos_protection.py",
      "line": 73,
      "pattern": "function_name",
      "content": "name=\"Rate Limiting\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Burst Protection",
      "file": "security/vpn/protection/ddos_protection.py",
      "line": 79,
      "pattern": "function_name",
      "content": "name=\"Burst Protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Suspicious Activity",
      "file": "security/vpn/protection/ddos_protection.py",
      "line": 85,
      "pattern": "function_name",
      "content": "name=\"Suspicious Activity\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "High Volume Attack",
      "file": "security/vpn/protection/ddos_protection.py",
      "line": 91,
      "pattern": "function_name",
      "content": "name=\"High Volume Attack\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sg-01",
      "file": "security/vpn/api/websocket_api.py",
      "line": 305,
      "pattern": "id\":",
      "content": "{\"id\": \"sg-01\", \"name\": \"Singapore-01\", \"ping\": 25, \"load\": 15, \"status\": \"online\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "us-01",
      "file": "security/vpn/api/websocket_api.py",
      "line": 306,
      "pattern": "id\":",
      "content": "{\"id\": \"us-01\", \"name\": \"USA-01\", \"ping\": 45, \"load\": 25, \"status\": \"online\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "de-01",
      "file": "security/vpn/api/websocket_api.py",
      "line": 307,
      "pattern": "id\":",
      "content": "{\"id\": \"de-01\", \"name\": \"Germany-01\", \"ping\": 35, \"load\": 20, \"status\": \"online\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "uk-01",
      "file": "security/vpn/api/websocket_api.py",
      "line": 308,
      "pattern": "id\":",
      "content": "{\"id\": \"uk-01\", \"name\": \"UK-01\", \"ping\": 40, \"load\": 30, \"status\": \"warning\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sg-01",
      "file": "security/vpn/api/graphql_api.py",
      "line": 67,
      "pattern": "id\":",
      "content": "{\"id\": \"sg-01\", \"name\": \"Singapore-01\", \"country\": \"SG\", \"city\": \"Singapore\", \"ping\": 25, \"load\": 15},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "us-01",
      "file": "security/vpn/api/graphql_api.py",
      "line": 68,
      "pattern": "id\":",
      "content": "{\"id\": \"us-01\", \"name\": \"USA-01\", \"country\": \"US\", \"city\": \"New York\", \"ping\": 45, \"load\": 25},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "de-01",
      "file": "security/vpn/api/graphql_api.py",
      "line": 69,
      "pattern": "id\":",
      "content": "{\"id\": \"de-01\", \"name\": \"Germany-01\", \"country\": \"DE\", \"city\": \"Frankfurt\", \"ping\": 35, \"load\": 20},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "uk-01",
      "file": "security/vpn/api/graphql_api.py",
      "line": 70,
      "pattern": "id\":",
      "content": "{\"id\": \"uk-01\", \"name\": \"UK-01\", \"country\": \"GB\", \"city\": \"London\", \"ping\": 40, \"load\": 30},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "user_001",
      "file": "security/vpn/api/graphql_api.py",
      "line": 75,
      "pattern": "id\":",
      "content": "{\"id\": \"user_001\", \"name\": \"Test User\", \"email\": \"test@example.com\", \"active\": True},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "user_002",
      "file": "security/vpn/api/graphql_api.py",
      "line": 76,
      "pattern": "id\":",
      "content": "{\"id\": \"user_002\", \"name\": \"Demo User\", \"email\": \"demo@example.com\", \"active\": True},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sg-01",
      "file": "security/vpn/monitoring/vpn_metrics.py",
      "line": 183,
      "pattern": "id\":",
      "content": "\"id\": \"sg-01\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "us-01",
      "file": "security/vpn/monitoring/vpn_metrics.py",
      "line": 189,
      "pattern": "id\":",
      "content": "\"id\": \"us-01\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "de-01",
      "file": "security/vpn/monitoring/vpn_metrics.py",
      "line": 195,
      "pattern": "id\":",
      "content": "\"id\": \"de-01\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "uk-01",
      "file": "security/vpn/monitoring/vpn_metrics.py",
      "line": 201,
      "pattern": "id\":",
      "content": "\"id\": \"uk-01\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "marketing_compliance",
      "file": "security/vpn/legal/legal_protection.py",
      "line": 87,
      "pattern": "function_name",
      "content": "check_name=\"marketing_compliance\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "technical_compliance",
      "file": "security/vpn/legal/legal_protection.py",
      "line": 133,
      "pattern": "function_name",
      "content": "check_name=\"technical_compliance\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "legal_positioning",
      "file": "security/vpn/legal/legal_protection.py",
      "line": 187,
      "pattern": "function_name",
      "content": "check_name=\"legal_positioning\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сингапур-1",
      "file": "security/vpn/client/vpn_client.py",
      "line": 103,
      "pattern": "function_name",
      "content": "name=\"Сингапур-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Франкфурт-1",
      "file": "security/vpn/client/vpn_client.py",
      "line": 114,
      "pattern": "function_name",
      "content": "name=\"Франкфурт-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Гонконг-1",
      "file": "security/vpn/client/vpn_client.py",
      "line": 125,
      "pattern": "function_name",
      "content": "name=\"Гонконг-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Токио-1",
      "file": "security/vpn/client/vpn_client.py",
      "line": 136,
      "pattern": "function_name",
      "content": "name=\"Токио-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Нью-Йорк-1",
      "file": "security/vpn/client/vpn_client.py",
      "line": 147,
      "pattern": "function_name",
      "content": "name=\"Нью-Йорк-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Торонто-1",
      "file": "security/vpn/client/vpn_client.py",
      "line": 158,
      "pattern": "function_name",
      "content": "name=\"Торонто-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "aladdin_test",
      "file": "security/vpn/protocols/openvpn_server.py",
      "line": 434,
      "pattern": "function_name",
      "content": "server_name=\"aladdin_test\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_client",
      "file": "security/vpn/protocols/openvpn_server.py",
      "line": 448,
      "pattern": "function_name",
      "content": "name=\"test_client\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wg0",
      "file": "security/vpn/protocols/wireguard_server.py",
      "line": 316,
      "pattern": "function_name",
      "content": "interface_name=\"wg0\", listen_port=51820, allowed_ips=\"10.0.0.0/24\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_client",
      "file": "security/vpn/protocols/wireguard_server.py",
      "line": 326,
      "pattern": "function_name",
      "content": "name=\"test_client\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сингапур-1",
      "file": "security/vpn/servers/foreign_server_manager.py",
      "line": 68,
      "pattern": "function_name",
      "content": "name=\"Сингапур-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Франкфурт-1",
      "file": "security/vpn/servers/foreign_server_manager.py",
      "line": 81,
      "pattern": "function_name",
      "content": "name=\"Франкфурт-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Гонконг-1",
      "file": "security/vpn/servers/foreign_server_manager.py",
      "line": 94,
      "pattern": "function_name",
      "content": "name=\"Гонконг-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Токио-1",
      "file": "security/vpn/servers/foreign_server_manager.py",
      "line": 107,
      "pattern": "function_name",
      "content": "name=\"Токио-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Нью-Йорк-1",
      "file": "security/vpn/servers/foreign_server_manager.py",
      "line": 120,
      "pattern": "function_name",
      "content": "name=\"Нью-Йорк-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Торонто-1",
      "file": "security/vpn/servers/foreign_server_manager.py",
      "line": 133,
      "pattern": "function_name",
      "content": "name=\"Торонто-1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SecurityAnalytics",
      "file": "security/reactive/security_analytics.py",
      "line": 117,
      "pattern": "function_name",
      "content": "self.service_name = \"SecurityAnalytics\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ForensicsService",
      "file": "security/reactive/forensics_service.py",
      "line": 133,
      "pattern": "function_name",
      "content": "self.service_name = \"ForensicsService\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/reactive/recovery_service.py",
      "line": 1099,
      "pattern": "function_name",
      "content": "return f\"RecoveryService(name='{self.name}', config={self.config})\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ThreatIntelligence",
      "file": "security/reactive/threat_intelligence.py",
      "line": 122,
      "pattern": "function_name",
      "content": "self.service_name = \"ThreatIntelligence\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_optimization\": True,",
      "file": "security/reactive/performance_optimizer.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "\"enable_auto_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async_optimization\": True,",
      "file": "security/reactive/performance_optimizer.py",
      "line": 115,
      "pattern": "enable_function",
      "content": "\"enable_async_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_optimization\"]:",
      "file": "security/reactive/performance_optimizer.py",
      "line": 156,
      "pattern": "enable_function",
      "content": "if self.optimization_config[\"enable_auto_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_affinity()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 466,
      "pattern": "enable_function",
      "content": "self._enable_cpu_affinity()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 494,
      "pattern": "enable_function",
      "content": "self._enable_memory_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 522,
      "pattern": "enable_function",
      "content": "self._enable_disk_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 545,
      "pattern": "enable_function",
      "content": "self._enable_network_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_caching()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 556,
      "pattern": "enable_function",
      "content": "self._enable_network_caching()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_database_caching()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 578,
      "pattern": "enable_function",
      "content": "self._enable_database_caching()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cache_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 606,
      "pattern": "enable_function",
      "content": "self._enable_cache_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_query_parallelization()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 634,
      "pattern": "enable_function",
      "content": "self._enable_query_parallelization()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_reuse()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 657,
      "pattern": "enable_function",
      "content": "self._enable_connection_reuse()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 662,
      "pattern": "enable_function",
      "content": "self._enable_connection_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_pooling()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 668,
      "pattern": "enable_function",
      "content": "self._enable_connection_pooling()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_affinity(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 690,
      "pattern": "enable_function",
      "content": "def _enable_cpu_affinity(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 710,
      "pattern": "enable_function",
      "content": "def _enable_memory_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 730,
      "pattern": "enable_function",
      "content": "def _enable_disk_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 745,
      "pattern": "enable_function",
      "content": "def _enable_network_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_caching(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 755,
      "pattern": "enable_function",
      "content": "def _enable_network_caching(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_database_caching(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 770,
      "pattern": "enable_function",
      "content": "def _enable_database_caching(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cache_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 790,
      "pattern": "enable_function",
      "content": "def _enable_cache_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_query_parallelization(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 810,
      "pattern": "enable_function",
      "content": "def _enable_query_parallelization(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_reuse(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 820,
      "pattern": "enable_function",
      "content": "def _enable_connection_reuse(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 825,
      "pattern": "enable_function",
      "content": "def _enable_connection_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_pooling(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 830,
      "pattern": "enable_function",
      "content": "def _enable_connection_pooling(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml: bool = True",
      "file": "security/managers/analytics_manager.py",
      "line": 79,
      "pattern": "enable_function",
      "content": "enable_ml: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering: bool = True",
      "file": "security/managers/analytics_manager.py",
      "line": 80,
      "pattern": "enable_function",
      "content": "enable_clustering: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prediction: bool = True",
      "file": "security/managers/analytics_manager.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "enable_prediction: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml:",
      "file": "security/managers/analytics_manager.py",
      "line": 320,
      "pattern": "enable_function",
      "content": "if self.config.enable_ml:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering:",
      "file": "security/managers/analytics_manager.py",
      "line": 331,
      "pattern": "enable_function",
      "content": "if self.config.enable_clustering:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml=True,",
      "file": "security/managers/analytics_manager.py",
      "line": 523,
      "pattern": "enable_function",
      "content": "enable_ml=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering=True,",
      "file": "security/managers/analytics_manager.py",
      "line": 524,
      "pattern": "enable_function",
      "content": "enable_clustering=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prediction=True,",
      "file": "security/managers/analytics_manager.py",
      "line": 525,
      "pattern": "enable_function",
      "content": "enable_prediction=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_on_demand\": True,",
      "file": "security/managers/integrate_all_bots_to_sleep.py",
      "line": 146,
      "pattern": "wake_function",
      "content": "\"wake_up_on_demand\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_bot_to_sleep",
      "file": "security/managers/integrate_all_bots_to_sleep.py",
      "line": 272,
      "pattern": "sleep_function",
      "content": "async def put_bot_to_sleep(self, bot_name: str, bot_instance: Any) -> bool:",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_on_demand\": True,",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 52,
      "pattern": "wake_function",
      "content": "\"wake_up_on_demand\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_bot_to_sleep",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 133,
      "pattern": "sleep_function",
      "content": "async def put_bot_to_sleep(",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_bot(self, bot_name: str) -> bool:",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 204,
      "pattern": "wake_function",
      "content": "async def wake_up_bot(self, bot_name: str) -> bool:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\"] = datetime.utcnow()",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 232,
      "pattern": "wake_function",
      "content": "bot_info[\"wake_up_time\"] = datetime.utcnow()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": bot_info[\"wake_up_time\"].isoformat(),",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 236,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": bot_info[\"wake_up_time\"].isoformat(),",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\"] - bot_info[\"sleep_time\"]",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 238,
      "pattern": "wake_function",
      "content": "bot_info[\"wake_up_time\"] - bot_info[\"sleep_time\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_all_bots_to_sleep",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 300,
      "pattern": "sleep_function",
      "content": "async def put_all_bots_to_sleep(",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_all_bots(self) -> Dict[str, bool]:",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 328,
      "pattern": "wake_function",
      "content": "async def wake_up_all_bots(self) -> Dict[str, bool]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_bot(bot_name)",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 339,
      "pattern": "wake_function",
      "content": "success = await self.wake_up_bot(bot_name)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_all_bots()",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 748,
      "pattern": "wake_function",
      "content": "wake_results = await sleep_manager.wake_up_all_bots()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_usage",
      "file": "security/managers/monitor_manager.py",
      "line": 134,
      "pattern": "function_name",
      "content": "name=\"cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "memory_usage",
      "file": "security/managers/monitor_manager.py",
      "line": 147,
      "pattern": "function_name",
      "content": "name=\"memory_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disk_usage",
      "file": "security/managers/monitor_manager.py",
      "line": 161,
      "pattern": "function_name",
      "content": "name=\"disk_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "network_bytes_sent",
      "file": "security/managers/monitor_manager.py",
      "line": 174,
      "pattern": "function_name",
      "content": "name=\"network_bytes_sent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "network_bytes_recv",
      "file": "security/managers/monitor_manager.py",
      "line": 184,
      "pattern": "function_name",
      "content": "name=\"network_bytes_recv\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "high_cpu_usage",
      "file": "security/managers/monitor_manager.py",
      "line": 396,
      "pattern": "function_name",
      "content": "name=\"high_cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "high_memory_usage",
      "file": "security/managers/monitor_manager.py",
      "line": 403,
      "pattern": "function_name",
      "content": "name=\"high_memory_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "high_disk_usage",
      "file": "security/managers/monitor_manager.py",
      "line": 410,
      "pattern": "function_name",
      "content": "name=\"high_disk_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_ml_analysis = self.config.get(\"enable_ml_analysis\", True)",
      "file": "security/managers/alert_manager.py",
      "line": 182,
      "pattern": "enable_function",
      "content": "self.enable_ml_analysis = self.config.get(\"enable_ml_analysis\", True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiting = self.config.get(",
      "file": "security/managers/alert_manager.py",
      "line": 183,
      "pattern": "enable_function",
      "content": "self.enable_rate_limiting = self.config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiting\", True",
      "file": "security/managers/alert_manager.py",
      "line": 184,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiting\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "security_breach",
      "file": "security/managers/alert_manager.py",
      "line": 221,
      "pattern": "function_name",
      "content": "name=\"security_breach\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "system_warning",
      "file": "security/managers/alert_manager.py",
      "line": 233,
      "pattern": "function_name",
      "content": "name=\"system_warning\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "performance_issue",
      "file": "security/managers/alert_manager.py",
      "line": 241,
      "pattern": "function_name",
      "content": "name=\"performance_issue\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "anomaly_detected",
      "file": "security/managers/alert_manager.py",
      "line": 249,
      "pattern": "function_name",
      "content": "name=\"anomaly_detected\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SCUMWARE.org",
      "file": "security/managers/external_api_manager.py",
      "line": 109,
      "pattern": "function_name",
      "content": "name=\"SCUMWARE.org\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Open Threat Exchange",
      "file": "security/managers/external_api_manager.py",
      "line": 118,
      "pattern": "function_name",
      "content": "name=\"Open Threat Exchange\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "APIP.cc",
      "file": "security/managers/external_api_manager.py",
      "line": 128,
      "pattern": "function_name",
      "content": "name=\"APIP.cc\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ReallyFreeGeoIP",
      "file": "security/managers/external_api_manager.py",
      "line": 137,
      "pattern": "function_name",
      "content": "name=\"ReallyFreeGeoIP\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Rapid Email Verifier",
      "file": "security/managers/external_api_manager.py",
      "line": 147,
      "pattern": "function_name",
      "content": "name=\"Rapid Email Verifier\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "NoParam Email Validator",
      "file": "security/managers/external_api_manager.py",
      "line": 156,
      "pattern": "function_name",
      "content": "name=\"NoParam Email Validator\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Главная панель безопасности",
      "file": "security/managers/dashboard_manager.py",
      "line": 571,
      "pattern": "function_name",
      "content": "name=\"Главная панель безопасности\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_on_demand\": True,",
      "file": "security/managers/check_and_sleep_bots.py",
      "line": 106,
      "pattern": "wake_function",
      "content": "\"wake_up_on_demand\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_bot_to_sleep",
      "file": "security/managers/check_and_sleep_bots.py",
      "line": 197,
      "pattern": "sleep_function",
      "content": "async def put_bot_to_sleep(self, bot_name: str, bot_instance: Any) -> bool:",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/managers/voice_control_manager.py",
      "line": 156,
      "pattern": "function_name",
      "content": "f\"MessengerIntegration(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Telegram",
      "file": "security/managers/voice_control_manager.py",
      "line": 259,
      "pattern": "function_name",
      "content": "name=\"Telegram\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "WhatsApp",
      "file": "security/managers/voice_control_manager.py",
      "line": 272,
      "pattern": "function_name",
      "content": "name=\"WhatsApp\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Viber",
      "file": "security/managers/voice_control_manager.py",
      "line": 282,
      "pattern": "function_name",
      "content": "name=\"Viber\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SmartNotificationManager",
      "file": "security/managers/smart_notification_manager.py",
      "line": 189,
      "pattern": "function_name",
      "content": "name=\"SmartNotificationManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ElderlyInterfaceManager",
      "file": "security/managers/elderly_interface_manager_enhanced.py",
      "line": 77,
      "pattern": "function_name",
      "content": "self.name = \"ElderlyInterfaceManager\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_internal: bool = True",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 41,
      "pattern": "enable_function",
      "content": "enable_internal: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clamav: bool = True",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_clamav: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_scanner: bool = True",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "enable_malware_scanner: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_internal:",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "if self.config.enable_internal:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clamav:",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 86,
      "pattern": "enable_function",
      "content": "if self.config.enable_clamav:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_scanner:",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "if self.config.enable_malware_scanner:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "sig_001",
      "file": "security/antivirus/core/antivirus_core.py",
      "line": 163,
      "pattern": "id\":",
      "content": "\"id\": \"sig_001\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sig_002",
      "file": "security/antivirus/core/antivirus_core.py",
      "line": 174,
      "pattern": "id\":",
      "content": "\"id\": \"sig_002\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sig_003",
      "file": "security/antivirus/core/antivirus_core.py",
      "line": 184,
      "pattern": "id\":",
      "content": "\"id\": \"sig_003\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "sig_004",
      "file": "security/antivirus/core/antivirus_core.py",
      "line": 192,
      "pattern": "id\":",
      "content": "\"id\": \"sig_004\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ransomware Extension",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 80,
      "pattern": "function_name",
      "content": "name=\"Ransomware Extension\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ransomware Note",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 88,
      "pattern": "function_name",
      "content": "name=\"Ransomware Note\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Suspicious PowerShell",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 97,
      "pattern": "function_name",
      "content": "name=\"Suspicious PowerShell\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Suspicious Download",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 105,
      "pattern": "function_name",
      "content": "name=\"Suspicious Download\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Keylogger Pattern",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 117,
      "pattern": "function_name",
      "content": "name=\"Keylogger Pattern\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Screen Capture",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 125,
      "pattern": "function_name",
      "content": "name=\"Screen Capture\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Reverse Shell",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 134,
      "pattern": "function_name",
      "content": "name=\"Reverse Shell\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Suspicious Network",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 142,
      "pattern": "function_name",
      "content": "name=\"Suspicious Network\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "C&C Communication",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 153,
      "pattern": "function_name",
      "content": "name=\"C&C Communication\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Adware Behavior",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 162,
      "pattern": "function_name",
      "content": "name=\"Adware Behavior\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Rootkit Hiding",
      "file": "security/antivirus/scanners/malware_scanner.py",
      "line": 171,
      "pattern": "function_name",
      "content": "name=\"Rootkit Hiding\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function('family_registration_system')\")",
      "file": "security/family/check_family_system_status.py",
      "line": 104,
      "pattern": "enable_function",
      "content": "print(\"   sfm.enable_function('family_registration_system')\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function('family_notification_system')\")",
      "file": "security/family/check_family_system_status.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "print(\"   sfm.enable_function('family_notification_system')\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = config.get(",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 191,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging\", True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 192,
      "pattern": "enable_function",
      "content": "\"enable_audit_logging\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = config.get(",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 194,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis\", True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 195,
      "pattern": "enable_function",
      "content": "\"enable_ai_analysis\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 200,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 201,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis:",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 216,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis and self.is_ml_initialized:",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 485,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis and self.is_ml_initialized:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "family_registration_system",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 51,
      "pattern": "function_id",
      "content": "function_id=\"family_registration_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система анонимной регистрации семей",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 52,
      "pattern": "function_name",
      "content": "name=\"Система анонимной регистрации семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_notification_system",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 84,
      "pattern": "function_id",
      "content": "function_id=\"family_notification_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система анонимных уведомлений семей",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 85,
      "pattern": "function_name",
      "content": "name=\"Система анонимных уведомлений семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_testing_system",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 117,
      "pattern": "function_id",
      "content": "function_id=\"family_testing_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система тестирования семей",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 118,
      "pattern": "function_name",
      "content": "name=\"Система тестирования семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_152_fz_compliance",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 151,
      "pattern": "function_id",
      "content": "function_id=\"family_152_fz_compliance\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система соответствия 152-ФЗ для семей",
      "file": "security/family/register_family_system_in_sfm_correct.py",
      "line": 152,
      "pattern": "function_name",
      "content": "name=\"Система соответствия 152-ФЗ для семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Emergency Messages",
      "file": "security/family/family_communication_hub_enhanced.py",
      "line": 370,
      "pattern": "function_name",
      "content": "name=\"Emergency Messages\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Normal Messages",
      "file": "security/family/family_communication_hub_enhanced.py",
      "line": 398,
      "pattern": "function_name",
      "content": "name=\"Normal Messages\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Иван Иванов",
      "file": "security/family/family_communication_hub_enhanced.py",
      "line": 723,
      "pattern": "function_name",
      "content": "name=\"Иван Иванов\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Анна Иванова",
      "file": "security/family/family_communication_hub_enhanced.py",
      "line": 731,
      "pattern": "function_name",
      "content": "name=\"Анна Иванова\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_audit_logging = config.get(",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 340,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging\", True",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 341,
      "pattern": "enable_function",
      "content": "\"enable_audit_logging\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = config.get(\"enable_ai_analysis\", True)",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 343,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = config.get(\"enable_ai_analysis\", True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = True",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 347,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = True",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 348,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis:",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 361,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis and self.is_ml_initialized:",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 653,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis and self.is_ml_initialized:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "viewport",
      "file": "security/family/parent_child_elderly_web_interface.py",
      "line": 155,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_registration_system",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 51,
      "pattern": "function_id",
      "content": "function_id=\"family_registration_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система анонимной регистрации семей",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 52,
      "pattern": "function_name",
      "content": "name=\"Система анонимной регистрации семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_notification_system",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 84,
      "pattern": "function_id",
      "content": "function_id=\"family_notification_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система анонимных уведомлений семей",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 85,
      "pattern": "function_name",
      "content": "name=\"Система анонимных уведомлений семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_testing_system",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 117,
      "pattern": "function_id",
      "content": "function_id=\"family_testing_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система тестирования семей",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 118,
      "pattern": "function_name",
      "content": "name=\"Система тестирования семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_152_fz_compliance",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 150,
      "pattern": "function_id",
      "content": "function_id=\"family_152_fz_compliance\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Система соответствия 152-ФЗ для семей",
      "file": "security/family/register_family_system_in_sfm.py",
      "line": 151,
      "pattern": "function_name",
      "content": "name=\"Система соответствия 152-ФЗ для семей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Russian Banking Integration",
      "file": "security/integrations/russian_banking_integration.py",
      "line": 75,
      "pattern": "function_name",
      "content": "self.name = \"Russian Banking Integration\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/scaling/auto_scaling_engine.py",
      "line": 281,
      "pattern": "function_name",
      "content": "f\"AutoScalingEngine(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "CPU Scale Up",
      "file": "security/scaling/auto_scaling_engine.py",
      "line": 642,
      "pattern": "function_name",
      "content": "name=\"CPU Scale Up\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_usage",
      "file": "security/scaling/auto_scaling_engine.py",
      "line": 644,
      "pattern": "function_name",
      "content": "metric_name=\"cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "CPU Scale Down",
      "file": "security/scaling/auto_scaling_engine.py",
      "line": 654,
      "pattern": "function_name",
      "content": "name=\"CPU Scale Down\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Memory Scale Up",
      "file": "security/scaling/auto_scaling_engine.py",
      "line": 666,
      "pattern": "function_name",
      "content": "name=\"Memory Scale Up\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "memory_usage",
      "file": "security/scaling/auto_scaling_engine.py",
      "line": 668,
      "pattern": "function_name",
      "content": "metric_name=\"memory_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_only",
      "file": "security/mobile/mobile_api.py",
      "line": 108,
      "pattern": "id\":",
      "content": "\"id\": \"vpn_only\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "antivirus_only",
      "file": "security/mobile/mobile_api.py",
      "line": 119,
      "pattern": "id\":",
      "content": "\"id\": \"antivirus_only\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_antivirus",
      "file": "security/mobile/mobile_api.py",
      "line": 130,
      "pattern": "id\":",
      "content": "\"id\": \"vpn_antivirus\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "smart_protection",
      "file": "security/mobile/mobile_api.py",
      "line": 141,
      "pattern": "id\":",
      "content": "\"id\": \"smart_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "fast",
      "file": "security/mobile/mobile_api.py",
      "line": 154,
      "pattern": "id\":",
      "content": "\"id\": \"fast\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "balanced",
      "file": "security/mobile/mobile_api.py",
      "line": 160,
      "pattern": "id\":",
      "content": "\"id\": \"balanced\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "secure",
      "file": "security/mobile/mobile_api.py",
      "line": 166,
      "pattern": "id\":",
      "content": "\"id\": \"secure\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "singapore",
      "file": "security/mobile/mobile_api.py",
      "line": 173,
      "pattern": "id\":",
      "content": "{\"id\": \"singapore\", \"name\": \"🇸🇬 Singapore\", \"flag\": \"🇸🇬\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russia",
      "file": "security/mobile/mobile_api.py",
      "line": 174,
      "pattern": "id\":",
      "content": "{\"id\": \"russia\", \"name\": \"🇷🇺 Russia\", \"flag\": \"🇷🇺\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "netherlands",
      "file": "security/mobile/mobile_api.py",
      "line": 175,
      "pattern": "id\":",
      "content": "{\"id\": \"netherlands\", \"name\": \"🇳🇱 Netherlands\", \"flag\": \"🇳🇱\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "usa",
      "file": "security/mobile/mobile_api.py",
      "line": 176,
      "pattern": "id\":",
      "content": "{\"id\": \"usa\", \"name\": \"🇺🇸 USA\", \"flag\": \"🇺🇸\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "japan",
      "file": "security/mobile/mobile_api.py",
      "line": 177,
      "pattern": "id\":",
      "content": "{\"id\": \"japan\", \"name\": \"🇯🇵 Japan\", \"flag\": \"🇯🇵\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai/super_ai_support_assistant_improved.py",
      "line": 123,
      "pattern": "function_name",
      "content": "return f\"UserProfile(user_id='{self.user_id}', name='{self.name}', age={self.age})\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SuperAISupportAssistant",
      "file": "security/ai/super_ai_support_assistant_improved.py",
      "line": 478,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"SuperAISupportAssistant\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тестовый Пользователь",
      "file": "security/ai/super_ai_support_assistant_improved.py",
      "line": 1484,
      "pattern": "function_name",
      "content": "name=\"Тестовый Пользователь\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai/super_ai_support_assistant.py",
      "line": 139,
      "pattern": "function_name",
      "content": "f\"UserProfile(user_id='{self.user_id}', name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SuperAISupportAssistant",
      "file": "security/ai/super_ai_support_assistant.py",
      "line": 534,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"SuperAISupportAssistant\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тестовый Пользователь",
      "file": "security/ai/super_ai_support_assistant.py",
      "line": 1547,
      "pattern": "function_name",
      "content": "name=\"Тестовый Пользователь\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/preliminary/context_aware_access.py",
      "line": 192,
      "pattern": "function_name",
      "content": "f\"ContextAwareAccess(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Полный доступ в домашней сети",
      "file": "security/preliminary/context_aware_access.py",
      "line": 270,
      "pattern": "function_name",
      "content": "name=\"Полный доступ в домашней сети\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ограниченный доступ в публичной сети",
      "file": "security/preliminary/context_aware_access.py",
      "line": 287,
      "pattern": "function_name",
      "content": "name=\"Ограниченный доступ в публичной сети\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ограничения в ночные часы",
      "file": "security/preliminary/context_aware_access.py",
      "line": 298,
      "pattern": "function_name",
      "content": "name=\"Ограничения в ночные часы\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка в школьные часы",
      "file": "security/preliminary/context_aware_access.py",
      "line": 312,
      "pattern": "function_name",
      "content": "name=\"Блокировка в школьные часы\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Запрет при высоком риске",
      "file": "security/preliminary/context_aware_access.py",
      "line": 328,
      "pattern": "function_name",
      "content": "name=\"Запрет при высоком риске\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Дополнительная аутентификация при низком доверии",
      "file": "security/preliminary/context_aware_access.py",
      "line": 339,
      "pattern": "function_name",
      "content": "name=\"Дополнительная аутентификация при низком доверии\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_caching = True",
      "file": "security/preliminary/policy_engine.py",
      "line": 172,
      "pattern": "enable_function",
      "content": "self.enable_caching = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching,",
      "file": "security/preliminary/policy_engine.py",
      "line": 936,
      "pattern": "enable_function",
      "content": "\"cache_enabled\": self.enable_caching,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Домашняя сеть",
      "file": "security/preliminary/zero_trust_service.py",
      "line": 160,
      "pattern": "function_name",
      "content": "name=\"Домашняя сеть\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Публичная сеть",
      "file": "security/preliminary/zero_trust_service.py",
      "line": 177,
      "pattern": "function_name",
      "content": "name=\"Публичная сеть\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "IoT устройства",
      "file": "security/preliminary/zero_trust_service.py",
      "line": 194,
      "pattern": "function_name",
      "content": "name=\"IoT устройства\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_scaling\": True,",
      "file": "security/orchestration/kubernetes_orchestrator.py",
      "line": 216,
      "pattern": "enable_function",
      "content": "\"enable_auto_scaling\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\": True,",
      "file": "security/orchestration/kubernetes_orchestrator.py",
      "line": 217,
      "pattern": "enable_function",
      "content": "\"enable_health_checks\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_resource_monitoring\": True,",
      "file": "security/orchestration/kubernetes_orchestrator.py",
      "line": 218,
      "pattern": "enable_function",
      "content": "\"enable_resource_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Реагирование на вредоносное ПО",
      "file": "security/active/incident_response.py",
      "line": 194,
      "pattern": "function_name",
      "content": "name=\"Реагирование на вредоносное ПО\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на вторжение",
      "file": "security/active/incident_response.py",
      "line": 204,
      "pattern": "function_name",
      "content": "name=\"Реагирование на вторжение\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на эксплуатацию детей",
      "file": "security/active/incident_response.py",
      "line": 214,
      "pattern": "function_name",
      "content": "name=\"Реагирование на эксплуатацию детей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на мошенничество с пожилыми",
      "file": "security/active/incident_response.py",
      "line": 225,
      "pattern": "function_name",
      "content": "name=\"Реагирование на мошенничество с пожилыми\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на фишинг",
      "file": "security/active/incident_response.py",
      "line": 236,
      "pattern": "function_name",
      "content": "name=\"Реагирование на фишинг\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на утечку данных",
      "file": "security/active/incident_response.py",
      "line": 246,
      "pattern": "function_name",
      "content": "name=\"Реагирование на утечку данных\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на сетевые атаки",
      "file": "security/active/incident_response.py",
      "line": 256,
      "pattern": "function_name",
      "content": "name=\"Реагирование на сетевые атаки\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Реагирование на компрометацию устройства",
      "file": "security/active/incident_response.py",
      "line": 266,
      "pattern": "function_name",
      "content": "name=\"Реагирование на компрометацию устройства\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_async = (",
      "file": "security/active/malware_protection.py",
      "line": 177,
      "pattern": "enable_function",
      "content": "self.enable_async = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async\", True) if config else True",
      "file": "security/active/malware_protection.py",
      "line": 178,
      "pattern": "enable_function",
      "content": "config.get(\"enable_async\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Универсальный вирус",
      "file": "security/active/malware_protection.py",
      "line": 191,
      "pattern": "function_name",
      "content": "name=\"Универсальный вирус\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Крипто-вымогатель",
      "file": "security/active/malware_protection.py",
      "line": 201,
      "pattern": "function_name",
      "content": "name=\"Крипто-вымогатель\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Шпионское ПО и кейлоггеры",
      "file": "security/active/malware_protection.py",
      "line": 211,
      "pattern": "function_name",
      "content": "name=\"Шпионское ПО и кейлоггеры\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Рекламное ПО",
      "file": "security/active/malware_protection.py",
      "line": 221,
      "pattern": "function_name",
      "content": "name=\"Рекламное ПО\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Фишинговые сайты",
      "file": "security/active/malware_protection.py",
      "line": 231,
      "pattern": "function_name",
      "content": "name=\"Фишинговые сайты\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Эксплуатация детей",
      "file": "security/active/malware_protection.py",
      "line": 241,
      "pattern": "function_name",
      "content": "name=\"Эксплуатация детей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мошенничество с пожилыми",
      "file": "security/active/malware_protection.py",
      "line": 252,
      "pattern": "function_name",
      "content": "name=\"Мошенничество с пожилыми\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Руткит",
      "file": "security/active/malware_protection.py",
      "line": 262,
      "pattern": "function_name",
      "content": "name=\"Руткит\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Карантин вирусов",
      "file": "security/active/malware_protection.py",
      "line": 282,
      "pattern": "function_name",
      "content": "name=\"Карантин вирусов\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка вымогателей",
      "file": "security/active/malware_protection.py",
      "line": 295,
      "pattern": "function_name",
      "content": "name=\"Блокировка вымогателей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Удаление шпионского ПО",
      "file": "security/active/malware_protection.py",
      "line": 309,
      "pattern": "function_name",
      "content": "name=\"Удаление шпионского ПО\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка рекламного ПО",
      "file": "security/active/malware_protection.py",
      "line": 319,
      "pattern": "function_name",
      "content": "name=\"Блокировка рекламного ПО\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Защита детей",
      "file": "security/active/malware_protection.py",
      "line": 332,
      "pattern": "function_name",
      "content": "name=\"Защита детей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Защита пожилых",
      "file": "security/active/malware_protection.py",
      "line": 350,
      "pattern": "function_name",
      "content": "name=\"Защита пожилых\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сканирование системы",
      "file": "security/active/malware_protection.py",
      "line": 365,
      "pattern": "function_name",
      "content": "name=\"Сканирование системы\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_async\" in new_config:",
      "file": "security/active/malware_protection.py",
      "line": 1319,
      "pattern": "enable_function",
      "content": "if \"enable_async\" in new_config:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async = new_config[\"enable_async\"]",
      "file": "security/active/malware_protection.py",
      "line": 1320,
      "pattern": "enable_function",
      "content": "self.enable_async = new_config[\"enable_async\"]",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_notifications: bool = True",
      "file": "security/active/intrusion_prevention.py",
      "line": 73,
      "pattern": "enable_function",
      "content": "enable_notifications: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_api_integration: bool = True",
      "file": "security/active/intrusion_prevention.py",
      "line": 78,
      "pattern": "enable_function",
      "content": "enable_api_integration: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_webhook_notifications: bool = False",
      "file": "security/active/intrusion_prevention.py",
      "line": 80,
      "pattern": "enable_function",
      "content": "enable_webhook_notifications: bool = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Брутфорс атака на вход",
      "file": "security/active/intrusion_prevention.py",
      "line": 2173,
      "pattern": "function_name",
      "content": "name=\"Брутфорс атака на вход\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "DDoS атака",
      "file": "security/active/intrusion_prevention.py",
      "line": 2186,
      "pattern": "function_name",
      "content": "name=\"DDoS атака\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сканирование портов",
      "file": "security/active/intrusion_prevention.py",
      "line": 2199,
      "pattern": "function_name",
      "content": "name=\"Сканирование портов\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SQL инъекция",
      "file": "security/active/intrusion_prevention.py",
      "line": 2212,
      "pattern": "function_name",
      "content": "name=\"SQL инъекция\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "XSS атака",
      "file": "security/active/intrusion_prevention.py",
      "line": 2225,
      "pattern": "function_name",
      "content": "name=\"XSS атака\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Несанкционированный доступ",
      "file": "security/active/intrusion_prevention.py",
      "line": 2238,
      "pattern": "function_name",
      "content": "name=\"Несанкционированный доступ\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Эксплуатация детей",
      "file": "security/active/intrusion_prevention.py",
      "line": 2251,
      "pattern": "function_name",
      "content": "name=\"Эксплуатация детей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мошенничество с пожилыми",
      "file": "security/active/intrusion_prevention.py",
      "line": 2264,
      "pattern": "function_name",
      "content": "name=\"Мошенничество с пожилыми\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка брутфорс атак",
      "file": "security/active/intrusion_prevention.py",
      "line": 2287,
      "pattern": "function_name",
      "content": "name=\"Блокировка брутфорс атак\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ограничение DDoS атак",
      "file": "security/active/intrusion_prevention.py",
      "line": 2300,
      "pattern": "function_name",
      "content": "name=\"Ограничение DDoS атак\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка сканирования портов",
      "file": "security/active/intrusion_prevention.py",
      "line": 2316,
      "pattern": "function_name",
      "content": "name=\"Блокировка сканирования портов\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Предотвращение SQL инъекций",
      "file": "security/active/intrusion_prevention.py",
      "line": 2329,
      "pattern": "function_name",
      "content": "name=\"Предотвращение SQL инъекций\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Предотвращение XSS атак",
      "file": "security/active/intrusion_prevention.py",
      "line": 2342,
      "pattern": "function_name",
      "content": "name=\"Предотвращение XSS атак\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Защита детей",
      "file": "security/active/intrusion_prevention.py",
      "line": 2355,
      "pattern": "function_name",
      "content": "name=\"Защита детей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Защита пожилых",
      "file": "security/active/intrusion_prevention.py",
      "line": 2373,
      "pattern": "function_name",
      "content": "name=\"Защита пожилых\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ML Prediction",
      "file": "security/active/intrusion_prevention.py",
      "line": 3391,
      "pattern": "function_name",
      "content": "name=\"ML Prediction\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/active/intrusion_prevention.py",
      "line": 3417,
      "pattern": "function_name",
      "content": "f\"IntrusionPreventionService(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_notifications:",
      "file": "security/active/intrusion_prevention.py",
      "line": 4651,
      "pattern": "enable_function",
      "content": "if not config.enable_notifications:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Сканирование на вредоносное ПО",
      "file": "security/active/device_security.py",
      "line": 595,
      "pattern": "function_name",
      "content": "name=\"Сканирование на вредоносное ПО\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Обновление программного обеспечения",
      "file": "security/active/device_security.py",
      "line": 605,
      "pattern": "function_name",
      "content": "name=\"Обновление программного обеспечения\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Контроль детских устройств",
      "file": "security/active/device_security.py",
      "line": 615,
      "pattern": "function_name",
      "content": "name=\"Контроль детских устройств\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Защита устройств пожилых",
      "file": "security/active/device_security.py",
      "line": 632,
      "pattern": "function_name",
      "content": "name=\"Защита устройств пожилых\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Безопасность IoT устройств",
      "file": "security/active/device_security.py",
      "line": 649,
      "pattern": "function_name",
      "content": "name=\"Безопасность IoT устройств\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мониторинг сетевых устройств",
      "file": "security/active/device_security.py",
      "line": 665,
      "pattern": "function_name",
      "content": "name=\"Мониторинг сетевых устройств\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Безопасность мобильных устройств",
      "file": "security/active/device_security.py",
      "line": 682,
      "pattern": "function_name",
      "content": "name=\"Безопасность мобильных устройств\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Критические уязвимости",
      "file": "security/active/device_security.py",
      "line": 695,
      "pattern": "function_name",
      "content": "name=\"Критические уязвимости\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка вредоносных IP",
      "file": "security/active/network_monitoring.py",
      "line": 876,
      "pattern": "function_name",
      "content": "name=\"Блокировка вредоносных IP\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мониторинг игрового трафика детей",
      "file": "security/active/network_monitoring.py",
      "line": 884,
      "pattern": "function_name",
      "content": "name=\"Мониторинг игрового трафика детей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мониторинг финансового трафика пожилых",
      "file": "security/active/network_monitoring.py",
      "line": 899,
      "pattern": "function_name",
      "content": "name=\"Мониторинг финансового трафика пожилых\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Блокировка неподходящего контента",
      "file": "security/active/network_monitoring.py",
      "line": 914,
      "pattern": "function_name",
      "content": "name=\"Блокировка неподходящего контента\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ограничение высокой пропускной способности",
      "file": "security/active/network_monitoring.py",
      "line": 925,
      "pattern": "function_name",
      "content": "name=\"Ограничение высокой пропускной способности\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мониторинг социальных сетей",
      "file": "security/active/network_monitoring.py",
      "line": 936,
      "pattern": "function_name",
      "content": "name=\"Мониторинг социальных сетей\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Обнаружение утечки данных",
      "file": "security/active/network_monitoring.py",
      "line": 947,
      "pattern": "function_name",
      "content": "name=\"Обнаружение утечки данных\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мониторинг использования VPN",
      "file": "security/active/network_monitoring.py",
      "line": 959,
      "pattern": "function_name",
      "content": "name=\"Мониторинг использования VPN\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_child_monitoring(self, user_id: str) -> bool:",
      "file": "security/active/network_monitoring.py",
      "line": 1624,
      "pattern": "enable_function",
      "content": "def enable_child_monitoring(self, user_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_child_monitoring(self, user_id: str) -> bool:",
      "file": "security/active/network_monitoring.py",
      "line": 1636,
      "pattern": "disable_function",
      "content": "def disable_child_monitoring(self, user_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_elderly_monitoring(self, user_id: str) -> bool:",
      "file": "security/active/network_monitoring.py",
      "line": 1648,
      "pattern": "enable_function",
      "content": "def enable_elderly_monitoring(self, user_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_elderly_monitoring(self, user_id: str) -> bool:",
      "file": "security/active/network_monitoring.py",
      "line": 1660,
      "pattern": "disable_function",
      "content": "def disable_elderly_monitoring(self, user_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "MobileSecurityAgent",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 321,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"MobileSecurityAgent\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_location_tracking = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 375,
      "pattern": "enable_function",
      "content": "self.enable_location_tracking = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 376,
      "pattern": "enable_function",
      "content": "self.enable_app_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 377,
      "pattern": "enable_function",
      "content": "self.enable_network_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "self.enable_permission_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 379,
      "pattern": "enable_function",
      "content": "self.enable_encryption_check = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 380,
      "pattern": "enable_function",
      "content": "self.enable_root_jailbreak_detection = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1429,
      "pattern": "enable_function",
      "content": "if self.enable_encryption_check:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1433,
      "pattern": "enable_function",
      "content": "if self.enable_root_jailbreak_detection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1437,
      "pattern": "enable_function",
      "content": "if self.enable_app_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1441,
      "pattern": "enable_function",
      "content": "if self.enable_permission_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1445,
      "pattern": "enable_function",
      "content": "if self.enable_network_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_tracking:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1963,
      "pattern": "enable_function",
      "content": "if not self.enable_location_tracking:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 381,
      "pattern": "enable_function",
      "content": "\"enable_cpu_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 382,
      "pattern": "enable_function",
      "content": "\"enable_memory_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 383,
      "pattern": "enable_function",
      "content": "\"enable_network_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 384,
      "pattern": "enable_function",
      "content": "\"enable_disk_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cache_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 385,
      "pattern": "enable_function",
      "content": "\"enable_cache_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 386,
      "pattern": "enable_function",
      "content": "\"enable_ai_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 833,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_cpu_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 848,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_memory_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 863,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_network_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 877,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_disk_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml_detection\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 375,
      "pattern": "enable_function",
      "content": "\"enable_ml_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_behavioral_analysis\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 376,
      "pattern": "enable_function",
      "content": "\"enable_behavioral_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_realtime_analysis\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 377,
      "pattern": "enable_function",
      "content": "\"enable_realtime_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_threat_intelligence\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "\"enable_threat_intelligence\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response\": False,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 379,
      "pattern": "enable_function",
      "content": "\"enable_auto_response\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml_detection\"]:",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 579,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_ml_detection\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_behavioral_analysis\"]:",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 584,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_behavioral_analysis\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "PasswordSecurityAgent",
      "file": "security/ai_agents/password_security_agent.py",
      "line": 379,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"PasswordSecurityAgent\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/password_security_agent.py",
      "line": 1183,
      "pattern": "function_name",
      "content": "f\"PasswordSecurityAgent(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function\",",
      "file": "security/ai_agents/security_quality_analyzer.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "\"enable_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function\",",
      "file": "security/ai_agents/security_quality_analyzer.py",
      "line": 106,
      "pattern": "disable_function",
      "content": "\"disable_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "ContextualAlertSystem",
      "file": "security/ai_agents/contextual_alert_system.py",
      "line": 119,
      "pattern": "function_name",
      "content": "name=\"ContextualAlertSystem\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_function\",",
      "file": "security/ai_agents/security_quality_analyzer_enhanced.py",
      "line": 51,
      "pattern": "disable_function",
      "content": "\"register_function\", \"unregister_function\", \"enable_function\", \"disable_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function\", \"disable_function\",",
      "file": "security/ai_agents/security_quality_analyzer_enhanced.py",
      "line": 51,
      "pattern": "enable_function",
      "content": "\"register_function\", \"unregister_function\", \"enable_function\", \"disable_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "РБК",
      "file": "security/ai_agents/news_scraper.py",
      "line": 131,
      "pattern": "function_name",
      "content": "name=\"РБК\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ведомости",
      "file": "security/ai_agents/news_scraper.py",
      "line": 154,
      "pattern": "function_name",
      "content": "name=\"Ведомости\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Коммерсантъ",
      "file": "security/ai_agents/news_scraper.py",
      "line": 177,
      "pattern": "function_name",
      "content": "name=\"Коммерсантъ\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "РИА Новости",
      "file": "security/ai_agents/news_scraper.py",
      "line": 200,
      "pattern": "function_name",
      "content": "name=\"РИА Новости\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_response = (",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 326,
      "pattern": "enable_function",
      "content": "self.enable_auto_response = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response\", True) if config else True",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 327,
      "pattern": "enable_function",
      "content": "config.get(\"enable_auto_response\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response:",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 469,
      "pattern": "enable_function",
      "content": "if self.enable_auto_response:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response = False",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1532,
      "pattern": "enable_function",
      "content": "self.enable_auto_response = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1558,
      "pattern": "function_name",
      "content": "f\"IncidentResponseManager(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_response})\"",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1560,
      "pattern": "enable_function",
      "content": "f\"auto_response={self.enable_auto_response})\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response,",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1954,
      "pattern": "enable_function",
      "content": "\"auto_response_enabled\": self.enable_auto_response,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "ThreatIntelligenceAgent",
      "file": "security/ai_agents/threat_intelligence_agent.py",
      "line": 443,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"ThreatIntelligenceAgent\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/network_security_agent.py",
      "line": 300,
      "pattern": "function_name",
      "content": "f\"NetworkSecurityAgent(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VoiceResponseGenerator",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 102,
      "pattern": "function_name",
      "content": "name=\"VoiceResponseGenerator\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_emotion_detection\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 159,
      "pattern": "enable_function",
      "content": "\"enable_emotion_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_pronunciation_correction\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 160,
      "pattern": "enable_function",
      "content": "\"enable_pronunciation_correction\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_voice_optimization\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 161,
      "pattern": "enable_function",
      "content": "\"enable_voice_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audio_compression\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 162,
      "pattern": "enable_function",
      "content": "\"enable_audio_compression\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_pronunciation_correction\"]:",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 448,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_pronunciation_correction\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_family_notifications: bool = True",
      "file": "security/ai_agents/anti_fraud_master_ai.py",
      "line": 138,
      "pattern": "enable_function",
      "content": "enable_family_notifications: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emergency_alerts: bool = True",
      "file": "security/ai_agents/anti_fraud_master_ai.py",
      "line": 139,
      "pattern": "enable_function",
      "content": "enable_emergency_alerts: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Тестовый звонящий",
      "file": "security/ai_agents/anti_fraud_master_ai.py",
      "line": 2376,
      "pattern": "function_name",
      "content": "caller_name=\"Тестовый звонящий\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сбербанк",
      "file": "security/ai_agents/financial_protection_hub.py",
      "line": 181,
      "pattern": "function_name",
      "content": "bank_name=\"Сбербанк\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ВТБ",
      "file": "security/ai_agents/financial_protection_hub.py",
      "line": 189,
      "pattern": "function_name",
      "content": "bank_name=\"ВТБ\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тинькофф",
      "file": "security/ai_agents/financial_protection_hub.py",
      "line": 197,
      "pattern": "function_name",
      "content": "bank_name=\"Тинькофф\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Альфа-Банк",
      "file": "security/ai_agents/financial_protection_hub.py",
      "line": 205,
      "pattern": "function_name",
      "content": "bank_name=\"Альфа-Банк\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Райффайзенбанк",
      "file": "security/ai_agents/financial_protection_hub.py",
      "line": 213,
      "pattern": "function_name",
      "content": "bank_name=\"Райффайзенбанк\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Подозрительные URL паттерны",
      "file": "security/ai_agents/phishing_protection_agent.py",
      "line": 417,
      "pattern": "function_name",
      "content": "name=\"Подозрительные URL паттерны\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Поддельные банковские домены",
      "file": "security/ai_agents/phishing_protection_agent.py",
      "line": 427,
      "pattern": "function_name",
      "content": "name=\"Поддельные банковские домены\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Срочные финансовые сообщения",
      "file": "security/ai_agents/phishing_protection_agent.py",
      "line": 437,
      "pattern": "function_name",
      "content": "name=\"Срочные финансовые сообщения\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Подозрительные вложения",
      "file": "security/ai_agents/phishing_protection_agent.py",
      "line": 447,
      "pattern": "function_name",
      "content": "name=\"Подозрительные вложения\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Фишинговые ключевые слова",
      "file": "security/ai_agents/phishing_protection_agent.py",
      "line": 457,
      "pattern": "function_name",
      "content": "name=\"Фишинговые ключевые слова\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "MobileSecurityAgent",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 321,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"MobileSecurityAgent\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_location_tracking = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 375,
      "pattern": "enable_function",
      "content": "self.enable_location_tracking = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 376,
      "pattern": "enable_function",
      "content": "self.enable_app_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 377,
      "pattern": "enable_function",
      "content": "self.enable_network_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "self.enable_permission_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 379,
      "pattern": "enable_function",
      "content": "self.enable_encryption_check = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 380,
      "pattern": "enable_function",
      "content": "self.enable_root_jailbreak_detection = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1429,
      "pattern": "enable_function",
      "content": "if self.enable_encryption_check:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1433,
      "pattern": "enable_function",
      "content": "if self.enable_root_jailbreak_detection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1437,
      "pattern": "enable_function",
      "content": "if self.enable_app_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1441,
      "pattern": "enable_function",
      "content": "if self.enable_permission_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1445,
      "pattern": "enable_function",
      "content": "if self.enable_network_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_tracking:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1963,
      "pattern": "enable_function",
      "content": "if not self.enable_location_tracking:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/malware_detection_agent.py",
      "line": 123,
      "pattern": "function_name",
      "content": "f\"name='{self.name}', malware_type={self.malware_type}, \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Generic Trojan",
      "file": "security/ai_agents/malware_detection_agent.py",
      "line": 322,
      "pattern": "function_name",
      "content": "name=\"Generic Trojan\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ransomware Pattern",
      "file": "security/ai_agents/malware_detection_agent.py",
      "line": 331,
      "pattern": "function_name",
      "content": "name=\"Ransomware Pattern\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Suspicious File Extensions",
      "file": "security/ai_agents/malware_detection_agent.py",
      "line": 340,
      "pattern": "function_name",
      "content": "name=\"Suspicious File Extensions\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SpeechRecognitionEngine",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 107,
      "pattern": "function_name",
      "content": "name=\"SpeechRecognitionEngine\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_noise_reduction\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 160,
      "pattern": "enable_function",
      "content": "\"enable_noise_reduction\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_voice_activity_detection\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 161,
      "pattern": "enable_function",
      "content": "\"enable_voice_activity_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_speaker_diarization\": False,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 162,
      "pattern": "enable_function",
      "content": "\"enable_speaker_diarization\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotion_recognition\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 163,
      "pattern": "enable_function",
      "content": "\"enable_emotion_recognition\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sentiment_analysis\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 164,
      "pattern": "enable_function",
      "content": "\"enable_sentiment_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_keyword_detection\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "\"enable_keyword_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_noise_reduction\"]:",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 396,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_noise_reduction\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/password_security_agent_enhanced_v2.py",
      "line": 1332,
      "pattern": "function_name",
      "content": "f\"PasswordSecurityAgent(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "NaturalLanguageProcessor",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 108,
      "pattern": "function_name",
      "content": "name=\"NaturalLanguageProcessor\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_entity_recognition\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 153,
      "pattern": "enable_function",
      "content": "\"enable_entity_recognition\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sentiment_analysis\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 154,
      "pattern": "enable_function",
      "content": "\"enable_sentiment_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_intent_classification\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 155,
      "pattern": "enable_function",
      "content": "\"enable_intent_classification\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_context_analysis\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 156,
      "pattern": "enable_function",
      "content": "\"enable_context_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_keyword_extraction\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "\"enable_keyword_extraction\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotion_detection\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 158,
      "pattern": "enable_function",
      "content": "\"enable_emotion_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Уведомление о безопасности",
      "file": "security/ai_agents/notification_bot.py",
      "line": 1185,
      "pattern": "function_name",
      "content": "name=\"Уведомление о безопасности\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Семейное уведомление",
      "file": "security/ai_agents/notification_bot.py",
      "line": 1205,
      "pattern": "function_name",
      "content": "name=\"Семейное уведомление\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Экстренное уведомление",
      "file": "security/ai_agents/notification_bot.py",
      "line": 1228,
      "pattern": "function_name",
      "content": "name=\"Экстренное уведомление\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/malware_detection_agent_enhanced.py",
      "line": 119,
      "pattern": "function_name",
      "content": "f\"name='{self.name}', malware_type={self.malware_type}, \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Generic Trojan",
      "file": "security/ai_agents/malware_detection_agent_enhanced.py",
      "line": 297,
      "pattern": "function_name",
      "content": "name=\"Generic Trojan\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ransomware Pattern",
      "file": "security/ai_agents/malware_detection_agent_enhanced.py",
      "line": 306,
      "pattern": "function_name",
      "content": "name=\"Ransomware Pattern\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Suspicious File Extensions",
      "file": "security/ai_agents/malware_detection_agent_enhanced.py",
      "line": 315,
      "pattern": "function_name",
      "content": "name=\"Suspicious File Extensions\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сбербанк",
      "file": "security/ai_agents/financial_protection_hub_enhanced.py",
      "line": 181,
      "pattern": "function_name",
      "content": "bank_name=\"Сбербанк\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ВТБ",
      "file": "security/ai_agents/financial_protection_hub_enhanced.py",
      "line": 189,
      "pattern": "function_name",
      "content": "bank_name=\"ВТБ\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тинькофф",
      "file": "security/ai_agents/financial_protection_hub_enhanced.py",
      "line": 197,
      "pattern": "function_name",
      "content": "bank_name=\"Тинькофф\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Альфа-Банк",
      "file": "security/ai_agents/financial_protection_hub_enhanced.py",
      "line": 205,
      "pattern": "function_name",
      "content": "bank_name=\"Альфа-Банк\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Райффайзенбанк",
      "file": "security/ai_agents/financial_protection_hub_enhanced.py",
      "line": 213,
      "pattern": "function_name",
      "content": "bank_name=\"Райффайзенбанк\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/family_communication_replacement.py",
      "line": 90,
      "pattern": "function_name",
      "content": "return f\"FamilyMember(name='{self.name}', role={self.role.value})\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Иван Иванов",
      "file": "security/ai_agents/family_communication_replacement.py",
      "line": 811,
      "pattern": "function_name",
      "content": "name=\"Иван Иванов\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Анна Иванова",
      "file": "security/ai_agents/family_communication_replacement.py",
      "line": 821,
      "pattern": "function_name",
      "content": "name=\"Анна Иванова\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VoiceSecurityValidator",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 105,
      "pattern": "function_name",
      "content": "name=\"VoiceSecurityValidator\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_time_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 252,
      "pattern": "enable_function",
      "content": "\"enable_time_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 253,
      "pattern": "enable_function",
      "content": "\"enable_location_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_behavior_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 254,
      "pattern": "enable_function",
      "content": "\"enable_user_behavior_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_device_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 255,
      "pattern": "enable_function",
      "content": "\"enable_device_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_pattern_matching\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 260,
      "pattern": "enable_function",
      "content": "\"enable_pattern_matching\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_keyword_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 261,
      "pattern": "enable_function",
      "content": "\"enable_keyword_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_context_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 262,
      "pattern": "enable_function",
      "content": "\"enable_context_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml_detection\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 263,
      "pattern": "enable_function",
      "content": "\"enable_ml_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/parent_control_panel.py",
      "line": 1224,
      "pattern": "function_name",
      "content": "f\"ParentControlPanel(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сын/Дочь",
      "file": "security/ai_agents/emergency_response_system.py",
      "line": 160,
      "pattern": "function_name",
      "content": "name=\"Сын/Дочь\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Внук/Внучка",
      "file": "security/ai_agents/emergency_response_system.py",
      "line": 174,
      "pattern": "function_name",
      "content": "name=\"Внук/Внучка\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Экстренный контакт",
      "file": "security/ai_agents/emergency_response_system.py",
      "line": 187,
      "pattern": "function_name",
      "content": "name=\"Экстренный контакт\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_enhanced_monitoring\",",
      "file": "security/ai_agents/emergency_response_system.py",
      "line": 529,
      "pattern": "enable_function",
      "content": "\"enable_enhanced_monitoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "MobileUserAIAgent",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 135,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"MobileUserAIAgent\", config=None):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Temporal Analysis Engine",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 189,
      "pattern": "function_name",
      "content": "english_name=\"Temporal Analysis Engine\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Движок временного анализа",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 190,
      "pattern": "function_name",
      "content": "russian_name=\"Движок временного анализа\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Advanced Threat Detection",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 215,
      "pattern": "function_name",
      "content": "english_name=\"Advanced Threat Detection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Умный детектор угроз",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 216,
      "pattern": "function_name",
      "content": "russian_name=\"Умный детектор угроз\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Family Security Manager",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 240,
      "pattern": "function_name",
      "content": "english_name=\"Family Security Manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Семейный защитник",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 241,
      "pattern": "function_name",
      "content": "russian_name=\"Семейный защитник\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "VPN Security System",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 264,
      "pattern": "function_name",
      "content": "english_name=\"VPN Security System\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Защитный туннель",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 265,
      "pattern": "function_name",
      "content": "russian_name=\"Защитный туннель\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Antivirus Protection",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 285,
      "pattern": "function_name",
      "content": "english_name=\"Antivirus Protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Антивирусный щит",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 286,
      "pattern": "function_name",
      "content": "russian_name=\"Антивирусный щит\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Behavioral Analysis Engine",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 306,
      "pattern": "function_name",
      "content": "english_name=\"Behavioral Analysis Engine\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Анализатор поведения",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 307,
      "pattern": "function_name",
      "content": "russian_name=\"Анализатор поведения\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Data Encryption Manager",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 331,
      "pattern": "function_name",
      "content": "english_name=\"Data Encryption Manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Шифровальщик данных",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 332,
      "pattern": "function_name",
      "content": "russian_name=\"Шифровальщик данных\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Network Security Monitor",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 354,
      "pattern": "function_name",
      "content": "english_name=\"Network Security Monitor\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Сетевой страж",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 355,
      "pattern": "function_name",
      "content": "russian_name=\"Сетевой страж\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Child Safety Manager",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 377,
      "pattern": "function_name",
      "content": "english_name=\"Child Safety Manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Детский защитник",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 378,
      "pattern": "function_name",
      "content": "russian_name=\"Детский защитник\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Smart Notification System",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 398,
      "pattern": "function_name",
      "content": "english_name=\"Smart Notification System\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Умные уведомления",
      "file": "security/ai_agents/mobile_user_ai_agent.py",
      "line": 399,
      "pattern": "function_name",
      "content": "russian_name=\"Умные уведомления\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "security/ai_agents/behavioral_analytics_engine.py",
      "line": 126,
      "pattern": "function_name",
      "content": "f\"BehavioralAnalyticsEngine(name='{self.name}', \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "security/ai_agents/fraud_detection_api.py",
      "line": 43,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ComplianceAgent",
      "file": "security/ai_agents/compliance_agent.py",
      "line": 295,
      "pattern": "function_name",
      "content": "def __init__(self, name=\"ComplianceAgent\"):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 67,
      "pattern": "enable_function",
      "content": "auto_enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': auto_enable_count,",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': auto_enable_count,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 147,
      "pattern": "enable_function",
      "content": "print(f\"🔄 Автоматически включаемые: {stats['auto_enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "writer.writerow(['Автоматически включаемые', stats['auto_enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_docker_monitoring\": True,",
      "file": "architecture/real_time_visualizer.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "\"enable_docker_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_process_monitoring\": True,",
      "file": "architecture/real_time_visualizer.py",
      "line": 82,
      "pattern": "enable_function",
      "content": "\"enable_process_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring\": True",
      "file": "architecture/real_time_visualizer.py",
      "line": 83,
      "pattern": "enable_function",
      "content": "\"enable_network_monitoring\": True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "ALADDIN-Security-System",
      "file": "cloud/cloud_migration_manager.py",
      "line": 167,
      "pattern": "function_name",
      "content": "StackName='ALADDIN-Security-System',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "advanced_alerting_system",
      "file": "scripts/integrate_advanced_alerting.py",
      "line": 25,
      "pattern": "function_id",
      "content": "function_id=\"advanced_alerting_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Advanced Alerting System",
      "file": "scripts/integrate_advanced_alerting.py",
      "line": 26,
      "pattern": "function_name",
      "content": "name=\"Advanced Alerting System\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_functions_to_sleep",
      "file": "scripts/put_functions_to_sleep.py",
      "line": 12,
      "pattern": "sleep_function",
      "content": "def put_functions_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "IntegrateAdvancedMonitoringSimple",
      "file": "scripts/integrate_advanced_monitoring_simple.py",
      "line": 14,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"IntegrateAdvancedMonitoringSimple\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Test Integration Rule",
      "file": "scripts/integrate_advanced_monitoring_simple.py",
      "line": 69,
      "pattern": "function_name",
      "content": "name=\"Test Integration Rule\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test.integration",
      "file": "scripts/integrate_advanced_monitoring_simple.py",
      "line": 70,
      "pattern": "function_name",
      "content": "metric_name=\"test.integration\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_contextual_alert_to_sleep",
      "file": "scripts/put_contextual_alert_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_contextual_alert_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_functions\": sum(1 for f in functions.values()",
      "file": "scripts/final_sfm_registry_fix.py",
      "line": 332,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "network_monitoring",
      "file": "scripts/update_network_monitoring_sfm.py",
      "line": 96,
      "pattern": "function_id",
      "content": "function_id = \"network_monitoring\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "RegisterRussianIntegrations",
      "file": "scripts/register_russian_integrations.py",
      "line": 47,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"RegisterRussianIntegrations\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "load_balancer",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 28,
      "pattern": "id\":",
      "content": "\"id\": \"load_balancer\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "api_gateway",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 37,
      "pattern": "id\":",
      "content": "\"id\": \"api_gateway\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "rate_limiter",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 46,
      "pattern": "id\":",
      "content": "\"id\": \"rate_limiter\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "circuit_breaker",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 55,
      "pattern": "id\":",
      "content": "\"id\": \"circuit_breaker\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "analytics_manager",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 66,
      "pattern": "id\":",
      "content": "\"id\": \"analytics_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "dashboard_manager",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 75,
      "pattern": "id\":",
      "content": "\"id\": \"dashboard_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "monitor_manager",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 84,
      "pattern": "id\":",
      "content": "\"id\": \"monitor_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "report_manager",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 93,
      "pattern": "id\":",
      "content": "\"id\": \"report_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "behavioral_analysis_agent",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 102,
      "pattern": "id\":",
      "content": "\"id\": \"behavioral_analysis_agent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "privacy_manager",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 113,
      "pattern": "id\":",
      "content": "\"id\": \"privacy_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "trust_scoring",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 122,
      "pattern": "id\":",
      "content": "\"id\": \"trust_scoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "behavioral_analysis",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 131,
      "pattern": "id\":",
      "content": "\"id\": \"behavioral_analysis\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "child_protection",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 142,
      "pattern": "id\":",
      "content": "\"id\": \"child_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "network_security_bot",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 153,
      "pattern": "id\":",
      "content": "\"id\": \"network_security_bot\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "device_security_bot",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 162,
      "pattern": "id\":",
      "content": "\"id\": \"device_security_bot\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "analytics_bot",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 171,
      "pattern": "id\":",
      "content": "\"id\": \"analytics_bot\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "antivirus_core",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 182,
      "pattern": "id\":",
      "content": "\"id\": \"antivirus_core\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_core",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 193,
      "pattern": "id\":",
      "content": "\"id\": \"vpn_core\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "coppa_compliance",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 204,
      "pattern": "id\":",
      "content": "\"id\": \"coppa_compliance\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_child_protection",
      "file": "scripts/register_all_functions_in_sfm.py",
      "line": 213,
      "pattern": "id\":",
      "content": "\"id\": \"russian_child_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "external_api_manager",
      "file": "scripts/integrate_external_apis_simple.py",
      "line": 27,
      "pattern": "function_id",
      "content": "function_id=\"external_api_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "External API Manager",
      "file": "scripts/integrate_external_apis_simple.py",
      "line": 28,
      "pattern": "function_name",
      "content": "name=\"External API Manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_basic_protection\",",
      "file": "scripts/simplify_interface.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "\"action\": \"enable_basic_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_function', 'get_function_status', 'execute_function',",
      "file": "scripts/precise_count_analysis.py",
      "line": 133,
      "pattern": "disable_function",
      "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "file": "scripts/precise_count_analysis.py",
      "line": 133,
      "pattern": "enable_function",
      "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_elderly_interface_to_sleep",
      "file": "scripts/put_elderly_interface_to_sleep.py",
      "line": 15,
      "pattern": "sleep_function",
      "content": "def put_elderly_interface_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_voice_security_to_sleep",
      "file": "scripts/put_voice_security_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_voice_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "context_aware_access",
      "file": "scripts/integrate_context_aware_access.py",
      "line": 24,
      "pattern": "function_id",
      "content": "function_id=\"context_aware_access\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ContextAwareAccess",
      "file": "scripts/integrate_context_aware_access.py",
      "line": 25,
      "pattern": "function_name",
      "content": "name=\"ContextAwareAccess\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_messenger_integration_to_sleep",
      "file": "scripts/put_messenger_integration_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_messenger_integration_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_all_critical(self) -> Dict[str, Any]:",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 59,
      "pattern": "wake_function",
      "content": "async def emergency_wake_up_all_critical(self) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_attempts\": 0,",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 66,
      "pattern": "wake_function",
      "content": "\"wake_up_attempts\": 0,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_from_state_files(results)",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 77,
      "pattern": "wake_function",
      "content": "await self._wake_up_from_state_files(results)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function_by_name(func_name)",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 82,
      "pattern": "wake_function",
      "content": "result = await self._wake_up_function_by_name(func_name)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_attempts\"] += 1",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 83,
      "pattern": "wake_function",
      "content": "results[\"wake_up_attempts\"] += 1",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 106,
      "pattern": "wake_function",
      "content": "report_path = f\"logs/emergency_wake_up_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_from_state_files(self, results: Dict[str, Any]) -> None:",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 146,
      "pattern": "wake_function",
      "content": "async def _wake_up_from_state_files(self, results: Dict[str, Any]) -> None:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function_by_name(self, function_name: str) -> Dict[str, Any]:",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 175,
      "pattern": "wake_function",
      "content": "async def _wake_up_function_by_name(self, function_name: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_system = EmergencyWakeUpSystem()",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 235,
      "pattern": "wake_function",
      "content": "wake_up_system = EmergencyWakeUpSystem()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_system.verify_critical_functions_status()",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 239,
      "pattern": "wake_function",
      "content": "status_before = await wake_up_system.verify_critical_functions_status()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_system.emergency_wake_up_all_critical()",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 245,
      "pattern": "wake_function",
      "content": "results = await wake_up_system.emergency_wake_up_all_critical()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_attempts']}\")",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 254,
      "pattern": "wake_function",
      "content": "print(f\"   Попыток пробуждения: {results['wake_up_attempts']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "scripts/real_vpn_api_server.py",
      "line": 52,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_function', 'get_function_status', 'execute_function',",
      "file": "scripts/corrected_integration_plan.py",
      "line": 157,
      "pattern": "disable_function",
      "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "file": "scripts/corrected_integration_plan.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "circuit_breaker",
      "file": "scripts/update_circuit_breaker_sfm.py",
      "line": 93,
      "pattern": "function_id",
      "content": "function_id = \"circuit_breaker\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_functions': sum(1 for f in functions.values() if isinstance(f, dict) and f.get('auto_enable', False))",
      "file": "scripts/sfm_fix_and_validate.py",
      "line": 197,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': sum(1 for f in functions.values() if isinstance(f, dict) and f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']}\")",
      "file": "scripts/sfm_fix_and_validate.py",
      "line": 208,
      "pattern": "enable_function",
      "content": "print(f\"  - Автовключение: {stats['auto_enable_functions']}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_time': '< 1 секунда',",
      "file": "scripts/integrate_load_balancer_to_safe_manager.py",
      "line": 44,
      "pattern": "wake_function",
      "content": "'wake_up_time': '< 1 секунда',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time']}\")",
      "file": "scripts/integrate_load_balancer_to_safe_manager.py",
      "line": 178,
      "pattern": "wake_function",
      "content": "print(f\"  ⏰ Время пробуждения: {function_config['wake_up_time']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_parent_control_to_sleep",
      "file": "scripts/put_parent_control_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_parent_control_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN",
      "file": "scripts/test_apigateway_integration.py",
      "line": 28,
      "pattern": "function_name",
      "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "api_gateway",
      "file": "scripts/test_apigateway_integration.py",
      "line": 33,
      "pattern": "function_id",
      "content": "function_id=\"api_gateway\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "APIGateway",
      "file": "scripts/test_apigateway_integration.py",
      "line": 34,
      "pattern": "function_name",
      "content": "name=\"APIGateway\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"api_gateway\")",
      "file": "scripts/test_apigateway_integration.py",
      "line": 44,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"api_gateway\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_apigateway_integration.py",
      "line": 45,
      "pattern": "enable_function",
      "content": "print(f\"✅ APIGateway включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and init_success:",
      "file": "scripts/test_apigateway_integration.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and init_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "child_protection",
      "file": "scripts/test_child_protection_integration.py",
      "line": 30,
      "pattern": "function_id",
      "content": "function_id=\"child_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ChildProtection",
      "file": "scripts/test_child_protection_integration.py",
      "line": 31,
      "pattern": "function_name",
      "content": "name=\"ChildProtection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"child_protection\")",
      "file": "scripts/test_child_protection_integration.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"child_protection\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/test_child_protection_integration.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_russian_child_protection_to_sleep",
      "file": "scripts/put_russian_child_protection_to_sleep.py",
      "line": 15,
      "pattern": "sleep_function",
      "content": "def put_russian_child_protection_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_threat_intelligence_to_sleep",
      "file": "scripts/test_threat_intelligence_simple.py",
      "line": 134,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_threat_intelligence_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_speech_recognition_to_sleep",
      "file": "scripts/put_speech_recognition_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_speech_recognition_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_management: {sfm.enable_auto_management}\")",
      "file": "scripts/test_sfm_fix.py",
      "line": 35,
      "pattern": "enable_function",
      "content": "print(f\"   • enable_auto_management: {sfm.enable_auto_management}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode: {sfm.enable_sleep_mode}\")",
      "file": "scripts/test_sfm_fix.py",
      "line": 36,
      "pattern": "enable_function",
      "content": "print(f\"   • enable_sleep_mode: {sfm.enable_sleep_mode}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "test_function",
      "file": "scripts/test_sfm_fix.py",
      "line": 46,
      "pattern": "function_id",
      "content": "function_id=\"test_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Test Function",
      "file": "scripts/test_sfm_fix.py",
      "line": 47,
      "pattern": "function_name",
      "content": "name=\"Test Function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time'] = datetime.now().isoformat()",
      "file": "scripts/safe_sleep_mode_implementation.py",
      "line": 204,
      "pattern": "wake_function",
      "content": "self.sfm_registry['functions'][function_id]['wake_up_time'] = datetime.now().isoformat()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_existing_loggers\": False,",
      "file": "scripts/one_click_installer.py",
      "line": 201,
      "pattern": "disable_function",
      "content": "\"disable_existing_loggers\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_functions\": sum(1 for f in merged_registry[\"functions\"].values() if f.get(\"auto_enable\", False))",
      "file": "scripts/registry_merge_manager.py",
      "line": 211,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in merged_registry[\"functions\"].values() if f.get(\"auto_enable\", False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "load_balancer",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 28,
      "pattern": "function_id",
      "content": "function_id='load_balancer',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "LoadBalancer",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 29,
      "pattern": "function_name",
      "content": "name='LoadBalancer',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_result = sfm.enable_function('load_balancer')",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 40,
      "pattern": "enable_function",
      "content": "enable_result = sfm.enable_function('load_balancer')",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result}\")",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 41,
      "pattern": "enable_function",
      "content": "print(f\"✅ LoadBalancer включен! Результат: {enable_result}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "test_service",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 61,
      "pattern": "function_name",
      "content": "name=\"test_service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Enhanced API Docs",
      "file": "scripts/deactivate_enhanced_services.py",
      "line": 57,
      "pattern": "function_name",
      "content": "service_name = \"Enhanced API Docs\" if 'enhanced_api_docs.py' in line else \"Enhanced Architecture Visualizer\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_priority_queue=True) as pool:",
      "file": "scripts/optimize_system_performance.py",
      "line": 68,
      "pattern": "enable_function",
      "content": "with ThreadPoolManager(max_workers=8, enable_priority_queue=True) as pool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "TestLoadBalancer",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 74,
      "pattern": "function_name",
      "content": "self.load_balancer = LoadBalancer(name=\"TestLoadBalancer\", config=config)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Test Service 1",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 97,
      "pattern": "function_name",
      "content": "name=\"Test Service 1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Test Service 2",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 108,
      "pattern": "function_name",
      "content": "name=\"Test Service 2\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "LB Service 1",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 184,
      "pattern": "function_name",
      "content": "name=\"LB Service 1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "LB Service 2",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 196,
      "pattern": "function_name",
      "content": "name=\"LB Service 2\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "default",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 216,
      "pattern": "function_name",
      "content": "service_name=\"default\",  # Используем группу 'default'",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Health Check Service",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 269,
      "pattern": "function_name",
      "content": "name=\"Health Check Service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_adaptive_balancing()",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "await self.load_balancer.enable_adaptive_balancing()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_adaptive_balancing()",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 388,
      "pattern": "disable_function",
      "content": "await self.load_balancer.disable_adaptive_balancing()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "nonexistent_service",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 406,
      "pattern": "function_name",
      "content": "service_name=\"nonexistent_service\",  # Несуществующая группа",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_family_communication_to_sleep",
      "file": "scripts/put_family_communication_to_sleep.py",
      "line": 14,
      "pattern": "sleep_function",
      "content": "def put_family_communication_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_communication_hub",
      "file": "scripts/put_family_communication_to_sleep.py",
      "line": 26,
      "pattern": "function_id",
      "content": "function_id = \"family_communication_hub\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "FamilyCommunicationHub",
      "file": "scripts/put_family_communication_to_sleep.py",
      "line": 29,
      "pattern": "function_name",
      "content": "name=\"FamilyCommunicationHub\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_function(function_id)",
      "file": "scripts/put_family_communication_to_sleep.py",
      "line": 39,
      "pattern": "disable_function",
      "content": "sleep_success = manager.disable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "wake_up_critical():",
      "file": "scripts/emergency_wake_up_all_critical.py",
      "line": 14,
      "pattern": "wake_function",
      "content": "def emergency_wake_up_critical():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_critical()",
      "file": "scripts/emergency_wake_up_all_critical.py",
      "line": 76,
      "pattern": "wake_function",
      "content": "emergency_wake_up_critical()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py', 'MICROSERVICE - Системы пробуждения'),",
      "file": "scripts/quick_flake8_report.py",
      "line": 117,
      "pattern": "wake_function",
      "content": "('security/microservices/wake_up_systems.py', 'MICROSERVICE - Системы пробуждения'),",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "scripts/fix_stage7_add_missing_methods.py",
      "line": 51,
      "pattern": "function_name",
      "content": "return f\"RecoveryService(name='{self.name}', config={self.config})\"'''",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = self.sfm.enable_function(func_id)",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 222,
      "pattern": "enable_function",
      "content": "enable_success = self.sfm.enable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 223,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_success = self.sfm.disable_function(func_id)",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 255,
      "pattern": "disable_function",
      "content": "disable_success = self.sfm.disable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_success:",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 256,
      "pattern": "disable_function",
      "content": "if disable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_function',",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 338,
      "pattern": "disable_function",
      "content": "'enable_function', 'disable_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function', 'disable_function',",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 338,
      "pattern": "enable_function",
      "content": "'enable_function', 'disable_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_time'] = datetime.now().isoformat()",
      "file": "scripts/implement_safe_sleep_mode.py",
      "line": 226,
      "pattern": "wake_function",
      "content": "self.sfm_registry['functions'][function_id]['wake_up_time'] = datetime.now().isoformat()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TestAPIGateway",
      "file": "scripts/test_api_gateway.py",
      "line": 32,
      "pattern": "function_name",
      "content": "gateway = APIGateway(name=\"TestAPIGateway\", config=config)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_key",
      "file": "scripts/test_api_gateway.py",
      "line": 39,
      "pattern": "function_name",
      "content": "name=\"test_key\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_service",
      "file": "scripts/test_api_gateway.py",
      "line": 54,
      "pattern": "function_name",
      "content": "service_name=\"test_service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Иван",
      "file": "scripts/auto_fix_152_fz_violations.py",
      "line": 183,
      "pattern": "function_name",
      "content": "r'name\\s*=\\s*[\"\\'][^\"\\']+[\"\\']',  # name = \"Иван\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "notification_bot_main",
      "file": "scripts/integrate_notification_bot_main.py",
      "line": 76,
      "pattern": "function_id",
      "content": "function_id=\"notification_bot_main\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "NotificationBotMain",
      "file": "scripts/integrate_notification_bot_main.py",
      "line": 77,
      "pattern": "function_name",
      "content": "name=\"NotificationBotMain\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function('notification_bot_main')",
      "file": "scripts/integrate_notification_bot_main.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "sfm.enable_function('notification_bot_main')",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_emergency_response_to_sleep",
      "file": "scripts/put_emergency_response_to_sleep.py",
      "line": 14,
      "pattern": "sleep_function",
      "content": "def put_emergency_response_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "emergency_response_interface",
      "file": "scripts/put_emergency_response_to_sleep.py",
      "line": 26,
      "pattern": "function_id",
      "content": "function_id = \"emergency_response_interface\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "EmergencyResponseInterface",
      "file": "scripts/put_emergency_response_to_sleep.py",
      "line": 29,
      "pattern": "function_name",
      "content": "name=\"EmergencyResponseInterface\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_function(function_id)",
      "file": "scripts/put_emergency_response_to_sleep.py",
      "line": 39,
      "pattern": "disable_function",
      "content": "sleep_success = manager.disable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_functions\": sum(1 for f in functions.values()",
      "file": "scripts/complete_registry_fix.py",
      "line": 191,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Тест высокой нагрузки CPU",
      "file": "scripts/test_enhanced_alerting.py",
      "line": 38,
      "pattern": "function_name",
      "content": "name=\"Тест высокой нагрузки CPU\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_to_sleep(recommendations['put_to_sleep",
      "file": "scripts/safe_sleep_mode_optimizer.py",
      "line": 167,
      "pattern": "sleep_function",
      "content": "sleep_results = self.safe_put_to_sleep(recommendations['put_to_sleep'])",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "scripts/safe_sleep_mode_optimizer.py",
      "line": 213,
      "pattern": "wake_function",
      "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "scripts/plan_a_plus_work_optimizer.py",
      "line": 207,
      "pattern": "enable_function",
      "content": "success = self.sfm.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "scripts/plan_a_plus_work_optimizer.py",
      "line": 327,
      "pattern": "wake_function",
      "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "DEPENDENCY_MAP_REPORT.md",
      "file": "scripts/create_dependency_map.py",
      "line": 363,
      "pattern": "function_name",
      "content": "report_filename = \"DEPENDENCY_MAP_REPORT.md\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_elderly_interface_to_sleep",
      "file": "scripts/test_elderly_interface_quality.py",
      "line": 137,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_elderly_interface_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "scripts/minimal_system_optimizer.py",
      "line": 129,
      "pattern": "enable_function",
      "content": "success = self.sfm.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "scripts/minimal_system_optimizer.py",
      "line": 245,
      "pattern": "wake_function",
      "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_behavioral_analytics_to_sleep",
      "file": "scripts/put_behavioral_analytics_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_behavioral_analytics_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_data_protection_agent_to_sleep",
      "file": "scripts/put_data_protection_agent_to_sleep.py",
      "line": 7,
      "pattern": "sleep_function",
      "content": "def put_data_protection_agent_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_natural_language_to_sleep",
      "file": "scripts/put_natural_language_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_natural_language_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_mobile_security_to_sleep",
      "file": "scripts/put_mobile_security_to_sleep_simple.py",
      "line": 12,
      "pattern": "sleep_function",
      "content": "def put_mobile_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "EnhancedAlertingSystem",
      "file": "scripts/integrate_enhanced_alerting.py",
      "line": 134,
      "pattern": "function_name",
      "content": "function_name=\"EnhancedAlertingSystem\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тестовое правило",
      "file": "scripts/integrate_enhanced_alerting.py",
      "line": 240,
      "pattern": "function_name",
      "content": "name=\"Тестовое правило\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TestLoadBalancer",
      "file": "scripts/test_load_balancer.py",
      "line": 31,
      "pattern": "function_name",
      "content": "lb = LoadBalancer(name=\"TestLoadBalancer\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_services",
      "file": "scripts/test_load_balancer.py",
      "line": 42,
      "pattern": "function_name",
      "content": "service_name=\"test_services\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "test_service_1",
      "file": "scripts/test_load_balancer.py",
      "line": 54,
      "pattern": "function_name",
      "content": "name=\"test_service_1\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function()",
      "file": "scripts/simple_disable_functions.py",
      "line": 60,
      "pattern": "enable_function",
      "content": "- Легко восстановить через enable_function()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(func_id)",
      "file": "scripts/simple_disable_functions.py",
      "line": 68,
      "pattern": "enable_function",
      "content": "manager.enable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_report_{}.md'.format(",
      "file": "scripts/simple_disable_functions.py",
      "line": 78,
      "pattern": "disable_function",
      "content": "report_path = os.path.join('logs', 'disable_report_{}.md'.format(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_result = safe_manager.enable_function(func_id)",
      "file": "scripts/integrate_external_apis.py",
      "line": 73,
      "pattern": "enable_function",
      "content": "enable_result = safe_manager.enable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result:",
      "file": "scripts/integrate_external_apis.py",
      "line": 74,
      "pattern": "enable_function",
      "content": "if enable_result:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_notification_bot_to_sleep",
      "file": "scripts/put_notification_bot_to_sleep.py",
      "line": 14,
      "pattern": "sleep_function",
      "content": "def put_notification_bot_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "notification_bot",
      "file": "scripts/put_notification_bot_to_sleep.py",
      "line": 26,
      "pattern": "function_id",
      "content": "function_id = \"notification_bot\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "NotificationBot",
      "file": "scripts/put_notification_bot_to_sleep.py",
      "line": 29,
      "pattern": "function_name",
      "content": "name=\"NotificationBot\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_function(function_id)",
      "file": "scripts/put_notification_bot_to_sleep.py",
      "line": 39,
      "pattern": "disable_function",
      "content": "sleep_success = manager.disable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_function(func_id)",
      "file": "scripts/disable_12_functions.py",
      "line": 52,
      "pattern": "disable_function",
      "content": "success = manager.disable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_report_{}.md'.format(datetime.now().strftime(\"%Y%m%d_%H%M%S\")))",
      "file": "scripts/disable_12_functions.py",
      "line": 80,
      "pattern": "disable_function",
      "content": "'disable_report_{}.md'.format(datetime.now().strftime(\"%Y%m%d_%H%M%S\")))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py'",
      "file": "scripts/fast_flake8_analysis.py",
      "line": 114,
      "pattern": "wake_function",
      "content": "'security/microservices/wake_up_systems.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тестовый мошенник",
      "file": "scripts/integrate_anti_fraud_master_ai.py",
      "line": 43,
      "pattern": "function_name",
      "content": "caller_name=\"Тестовый мошенник\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Поддельный знакомый",
      "file": "scripts/integrate_anti_fraud_master_ai.py",
      "line": 53,
      "pattern": "function_name",
      "content": "caller_name=\"Поддельный знакомый\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тестовый звонящий",
      "file": "scripts/integrate_anti_fraud_master_ai.py",
      "line": 105,
      "pattern": "function_name",
      "content": "caller_name=\"Тестовый звонящий\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_api_gateway_to_sleep",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 16,
      "pattern": "sleep_function",
      "content": "def put_api_gateway_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SleepTestAPIGateway",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 31,
      "pattern": "function_name",
      "content": "gateway = APIGateway(name=\"SleepTestAPIGateway\", config=config)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time': '< 1 секунда',",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 48,
      "pattern": "wake_function",
      "content": "'wake_up_time': '< 1 секунда',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_instructions': [",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 129,
      "pattern": "wake_function",
      "content": "'wake_up_instructions': [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority': 'HIGH'",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 138,
      "pattern": "wake_function",
      "content": "'wake_up_priority': 'HIGH'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time']}\")",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 149,
      "pattern": "wake_function",
      "content": "print(f\"  ⚡ Время пробуждения: {sleep_config['wake_up_time']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Identity Verification Coverage",
      "file": "scripts/advanced_security_metrics.py",
      "line": 75,
      "pattern": "function_name",
      "content": "name=\"Identity Verification Coverage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Device Trust Score",
      "file": "scripts/advanced_security_metrics.py",
      "line": 91,
      "pattern": "function_name",
      "content": "name=\"Device Trust Score\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Network Segmentation Coverage",
      "file": "scripts/advanced_security_metrics.py",
      "line": 107,
      "pattern": "function_name",
      "content": "name=\"Network Segmentation Coverage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Perimeter Security Strength",
      "file": "scripts/advanced_security_metrics.py",
      "line": 129,
      "pattern": "function_name",
      "content": "name=\"Perimeter Security Strength\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Internal Security Controls",
      "file": "scripts/advanced_security_metrics.py",
      "line": 145,
      "pattern": "function_name",
      "content": "name=\"Internal Security Controls\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Data Protection Layers",
      "file": "scripts/advanced_security_metrics.py",
      "line": 161,
      "pattern": "function_name",
      "content": "name=\"Data Protection Layers\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Advanced Persistent Threats",
      "file": "scripts/advanced_security_metrics.py",
      "line": 184,
      "pattern": "function_name",
      "content": "name=\"Advanced Persistent Threats\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Ransomware Attacks",
      "file": "scripts/advanced_security_metrics.py",
      "line": 200,
      "pattern": "function_name",
      "content": "name=\"Ransomware Attacks\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Insider Threats",
      "file": "scripts/advanced_security_metrics.py",
      "line": 216,
      "pattern": "function_name",
      "content": "name=\"Insider Threats\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Supply Chain Attacks",
      "file": "scripts/advanced_security_metrics.py",
      "line": 232,
      "pattern": "function_name",
      "content": "name=\"Supply Chain Attacks\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "scripts/simple_vpn_server.py",
      "line": 48,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "advanced_alerting_system",
      "file": "scripts/integrate_alerting_simple.py",
      "line": 25,
      "pattern": "function_id",
      "content": "function_id=\"advanced_alerting_system\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Advanced Alerting System",
      "file": "scripts/integrate_alerting_simple.py",
      "line": 26,
      "pattern": "function_name",
      "content": "name=\"Advanced Alerting System\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_result = safe_manager.enable_function(\"advanced_alerting_system\")",
      "file": "scripts/integrate_alerting_simple.py",
      "line": 45,
      "pattern": "enable_function",
      "content": "enable_result = safe_manager.enable_function(\"advanced_alerting_system\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result:",
      "file": "scripts/integrate_alerting_simple.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "if enable_result:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': 0",
      "file": "scripts/sfm_stats_universal.py",
      "line": 113,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': 0",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions'] += 1",
      "file": "scripts/sfm_stats_universal.py",
      "line": 142,
      "pattern": "enable_function",
      "content": "analysis['security_analysis']['auto_enable_functions'] += 1",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']}\")",
      "file": "scripts/sfm_stats_universal.py",
      "line": 204,
      "pattern": "enable_function",
      "content": "print(f\"  Автовключение: {analysis['security_analysis']['auto_enable_functions']}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': sum(1 for f in functions.values() if f.get('auto_enable', False))",
      "file": "scripts/sfm_add_function.py",
      "line": 137,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': sum(1 for f in functions.values() if f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "russian_yandex_maps",
      "file": "scripts/simple_register_russian.py",
      "line": 23,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_yandex_maps\", \"name\": \"Яндекс.Карты\", \"type\": \"api\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_2gis",
      "file": "scripts/simple_register_russian.py",
      "line": 24,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_2gis\", \"name\": \"2GIS\", \"type\": \"api\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_glonass",
      "file": "scripts/simple_register_russian.py",
      "line": 25,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_glonass\", \"name\": \"ГЛОНАСС\", \"type\": \"api\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_vk",
      "file": "scripts/simple_register_russian.py",
      "line": 26,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_vk\", \"name\": \"VK API\", \"type\": \"api\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_telegram",
      "file": "scripts/simple_register_russian.py",
      "line": 29,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_telegram\", \"name\": \"Telegram (Россия)\", \"type\": \"messenger\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_whatsapp",
      "file": "scripts/simple_register_russian.py",
      "line": 30,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_whatsapp\", \"name\": \"WhatsApp (Россия)\", \"type\": \"messenger\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_viber",
      "file": "scripts/simple_register_russian.py",
      "line": 31,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_viber\", \"name\": \"Viber (Россия)\", \"type\": \"messenger\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_vk_messenger",
      "file": "scripts/simple_register_russian.py",
      "line": 32,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_vk_messenger\", \"name\": \"VK Messenger\", \"type\": \"messenger\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_sberbank",
      "file": "scripts/simple_register_russian.py",
      "line": 35,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_sberbank\", \"name\": \"Сбербанк\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_vtb",
      "file": "scripts/simple_register_russian.py",
      "line": 36,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_vtb\", \"name\": \"ВТБ\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_tinkoff",
      "file": "scripts/simple_register_russian.py",
      "line": 37,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_tinkoff\", \"name\": \"Тинькофф\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_alfa",
      "file": "scripts/simple_register_russian.py",
      "line": 38,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_alfa\", \"name\": \"Альфа-Банк\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_raiffeisen",
      "file": "scripts/simple_register_russian.py",
      "line": 39,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_raiffeisen\", \"name\": \"Райффайзен\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_gazprom",
      "file": "scripts/simple_register_russian.py",
      "line": 40,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_gazprom\", \"name\": \"Газпромбанк\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_rshb",
      "file": "scripts/simple_register_russian.py",
      "line": 41,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_rshb\", \"name\": \"Россельхозбанк\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_vtb24",
      "file": "scripts/simple_register_russian.py",
      "line": 42,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_vtb24\", \"name\": \"ВТБ24\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_unicredit",
      "file": "scripts/simple_register_russian.py",
      "line": 43,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_unicredit\", \"name\": \"ЮниКредит\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_rsb",
      "file": "scripts/simple_register_russian.py",
      "line": 44,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_rsb\", \"name\": \"Русский Стандарт\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_mkb",
      "file": "scripts/simple_register_russian.py",
      "line": 45,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_mkb\", \"name\": \"МКБ\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_open",
      "file": "scripts/simple_register_russian.py",
      "line": 46,
      "pattern": "id\":",
      "content": "{\"id\": \"russian_open\", \"name\": \"Открытие\", \"type\": \"bank\", \"status\": \"ready\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/one_click_installer.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 164,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/one_click_installer.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/auto_configuration.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 171,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/auto_configuration.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/simplify_interface.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 178,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/simplify_interface.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/configuration_templates.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 185,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/configuration_templates.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/push_notifications.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 192,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/push_notifications.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "scripts/create_vpn_qr.py",
      "line": 73,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "vpn_test_simple.html",
      "file": "scripts/create_vpn_qr.py",
      "line": 179,
      "pattern": "function_name",
      "content": "html_filename = \"vpn_test_simple.html\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "file": "scripts/sleep_mode_monitoring_system.py",
      "line": 240,
      "pattern": "wake_function",
      "content": "async def wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "trust_scoring",
      "file": "scripts/test_trust_scoring_integration.py",
      "line": 30,
      "pattern": "function_id",
      "content": "function_id=\"trust_scoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TrustScoring",
      "file": "scripts/test_trust_scoring_integration.py",
      "line": 31,
      "pattern": "function_name",
      "content": "name=\"TrustScoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "file": "scripts/test_trust_scoring_integration.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/test_trust_scoring_integration.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_family_functions(self, file_path: str) -> bool:",
      "file": "scripts/disable_personal_functions.py",
      "line": 89,
      "pattern": "disable_function",
      "content": "def disable_family_functions(self, file_path: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_functions_in_content(content)",
      "file": "scripts/disable_personal_functions.py",
      "line": 105,
      "pattern": "disable_function",
      "content": "disabled_content = self._disable_functions_in_content(content)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_functions_in_content(self, content: str) -> str:",
      "file": "scripts/disable_personal_functions.py",
      "line": 117,
      "pattern": "disable_function",
      "content": "def _disable_functions_in_content(self, content: str) -> str:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_patterns = [",
      "file": "scripts/disable_personal_functions.py",
      "line": 120,
      "pattern": "disable_function",
      "content": "disable_patterns = [",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_patterns:",
      "file": "scripts/disable_personal_functions.py",
      "line": 133,
      "pattern": "disable_function",
      "content": "for pattern, replacement in disable_patterns:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_family_functions(func_info[\"file\"]):",
      "file": "scripts/disable_personal_functions.py",
      "line": 313,
      "pattern": "disable_function",
      "content": "if self.disable_family_functions(func_info[\"file\"]):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "put_function_to_sleep",
      "file": "scripts/minimal_active_system.py",
      "line": 113,
      "pattern": "sleep_function",
      "content": "result = await self._put_function_to_sleep(func_id, func_data, sfm_registry)",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_manager(manager_type)",
      "file": "scripts/test_managers_integration.py",
      "line": 40,
      "pattern": "enable_function",
      "content": "result = await sfm.enable_manager(manager_type)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_{manager_type}\"] = result",
      "file": "scripts/test_managers_integration.py",
      "line": 41,
      "pattern": "enable_function",
      "content": "test_results[f\"enable_{manager_type}\"] = result",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_manager(manager_type)",
      "file": "scripts/test_managers_integration.py",
      "line": 59,
      "pattern": "disable_function",
      "content": "result = await sfm.disable_manager(manager_type)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "disable_{manager_type}\"] = result",
      "file": "scripts/test_managers_integration.py",
      "line": 60,
      "pattern": "disable_function",
      "content": "test_results[f\"disable_{manager_type}\"] = result",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "trust_scoring",
      "file": "scripts/integrate_trust_scoring.py",
      "line": 24,
      "pattern": "function_id",
      "content": "function_id=\"trust_scoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TrustScoring",
      "file": "scripts/integrate_trust_scoring.py",
      "line": 25,
      "pattern": "function_name",
      "content": "name=\"TrustScoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{self.name}",
      "file": "scripts/stage7_auto_method_fixer.py",
      "line": 110,
      "pattern": "function_name",
      "content": "return f\"RecoveryService(name='{self.name}', config={self.config})\"'''",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "system_wide",
      "file": "scripts/integrate_optimization_components.py",
      "line": 117,
      "pattern": "function_id",
      "content": "function_id=\"system_wide\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_zero_trust\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 156,
      "pattern": "enable_function",
      "content": "\"enable_zero_trust\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 158,
      "pattern": "enable_function",
      "content": "\"enable_auto_scaling\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaking\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 159,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "ALADDIN",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 26,
      "pattern": "function_name",
      "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "monitor_manager",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 31,
      "pattern": "function_id",
      "content": "function_id=\"monitor_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "MonitorManager",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 32,
      "pattern": "function_name",
      "content": "name=\"MonitorManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"monitor_manager\")",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"monitor_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ MonitorManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "test_high_cpu",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 90,
      "pattern": "function_name",
      "content": "name=\"test_high_cpu\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "cpu_usage",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 91,
      "pattern": "function_name",
      "content": "metric_name=\"cpu_usage\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success and init_success:",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 127,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and init_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "IntegrateRussianAPIsSimple",
      "file": "scripts/integrate_russian_apis_simple.py",
      "line": 16,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"IntegrateRussianAPIsSimple\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_api_manager",
      "file": "scripts/integrate_russian_apis_simple.py",
      "line": 33,
      "pattern": "function_id",
      "content": "function_id=\"russian_api_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Russian API Manager",
      "file": "scripts/integrate_russian_apis_simple.py",
      "line": 34,
      "pattern": "function_name",
      "content": "name=\"Russian API Manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_mobile_security_to_sleep",
      "file": "scripts/put_mobile_security_to_sleep.py",
      "line": 16,
      "pattern": "sleep_function",
      "content": "def put_mobile_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "{component_name}",
      "file": "scripts/PHASE1_CRITICAL_COMPONENTS_PLAN.py",
      "line": 326,
      "pattern": "function_name",
      "content": "self.name = \"{component_name}\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_incident_response_to_sleep",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_incident_response_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 58,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"CRITICAL\",",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 105,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"CRITICAL\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 163,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_function_to_sleep",
      "file": "scripts/auto_sleep_mode_implementation.py",
      "line": 150,
      "pattern": "sleep_function",
      "content": "result = await self._put_function_to_sleep(func)",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "file": "scripts/auto_sleep_mode_implementation.py",
      "line": 224,
      "pattern": "wake_function",
      "content": "async def wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_child_interface_to_sleep",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_child_interface_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 71,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"HIGH\",",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 152,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"HIGH\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 227,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN_APIGateway",
      "file": "scripts/integrate_api_gateway.py",
      "line": 32,
      "pattern": "function_name",
      "content": "gateway = APIGateway(name=\"ALADDIN_APIGateway\", config=config)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "aladdin_mobile_app",
      "file": "scripts/integrate_api_gateway.py",
      "line": 44,
      "pattern": "function_name",
      "content": "name=\"aladdin_mobile_app\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "security_service",
      "file": "scripts/integrate_api_gateway.py",
      "line": 56,
      "pattern": "function_name",
      "content": "service_name=\"security_service\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_super_ai_to_sleep",
      "file": "scripts/put_super_ai_to_sleep.py",
      "line": 19,
      "pattern": "sleep_function",
      "content": "def put_super_ai_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SafeFunctionManager",
      "file": "scripts/test_constructor_exception.py",
      "line": 16,
      "pattern": "function_name",
      "content": "def debug_init(self, name=\"SafeFunctionManager\", config=None):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_management = config.get('enable_auto_management', True) if config else True",
      "file": "scripts/test_constructor_exception.py",
      "line": 28,
      "pattern": "enable_function",
      "content": "self.enable_auto_management = config.get('enable_auto_management', True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence = config.get(\"enable_persistence\", True) if config else True",
      "file": "scripts/test_constructor_exception.py",
      "line": 34,
      "pattern": "enable_function",
      "content": "self.enable_persistence = config.get(\"enable_persistence\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence:",
      "file": "scripts/test_constructor_exception.py",
      "line": 82,
      "pattern": "enable_function",
      "content": "if self.enable_persistence:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_threat_intelligence_to_sleep",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_threat_intelligence_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 57,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"HIGH\",",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 100,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"HIGH\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 153,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_universal_privacy_to_sleep",
      "file": "scripts/put_universal_privacy_to_sleep.py",
      "line": 12,
      "pattern": "sleep_function",
      "content": "def put_universal_privacy_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 26,
      "pattern": "function_name",
      "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "privacy_manager",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 31,
      "pattern": "function_id",
      "content": "function_id=\"privacy_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "UniversalPrivacyManager",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 32,
      "pattern": "function_name",
      "content": "name=\"UniversalPrivacyManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"privacy_manager\")",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"privacy_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ UniversalPrivacyManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and register_success and",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 140,
      "pattern": "enable_function",
      "content": "if (registration_success and enable_success and register_success and",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "load_balancer",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 47,
      "pattern": "id\":",
      "content": "\"id\": \"load_balancer\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "api_gateway",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 54,
      "pattern": "id\":",
      "content": "\"id\": \"api_gateway\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "analytics_manager",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 61,
      "pattern": "id\":",
      "content": "\"id\": \"analytics_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "dashboard_manager",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 68,
      "pattern": "id\":",
      "content": "\"id\": \"dashboard_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "monitor_manager",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 75,
      "pattern": "id\":",
      "content": "\"id\": \"monitor_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "privacy_manager",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 82,
      "pattern": "id\":",
      "content": "\"id\": \"privacy_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "trust_scoring",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 89,
      "pattern": "id\":",
      "content": "\"id\": \"trust_scoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "child_protection",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 96,
      "pattern": "id\":",
      "content": "\"id\": \"child_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "report_manager",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 103,
      "pattern": "id\":",
      "content": "\"id\": \"report_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "behavioral_analysis",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 110,
      "pattern": "id\":",
      "content": "\"id\": \"behavioral_analysis\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "behavioral_analysis_agent",
      "file": "scripts/analyze_all_sfm_functions.py",
      "line": 117,
      "pattern": "id\":",
      "content": "\"id\": \"behavioral_analysis_agent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_sleep_manager():",
      "file": "scripts/wake_up_sleep_manager.py",
      "line": 14,
      "pattern": "wake_function",
      "content": "def wake_up_sleep_manager():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_sleep_manager()",
      "file": "scripts/wake_up_sleep_manager.py",
      "line": 70,
      "pattern": "wake_function",
      "content": "wake_up_sleep_manager()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_compliance_to_sleep",
      "file": "scripts/put_compliance_to_sleep_final.py",
      "line": 15,
      "pattern": "sleep_function",
      "content": "def put_compliance_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "anti_fraud_master_ai",
      "file": "scripts/update_anti_fraud_master_ai_sfm.py",
      "line": 91,
      "pattern": "function_id",
      "content": "function_id = \"anti_fraud_master_ai\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_ml_components():",
      "file": "scripts/wake_up_ml_components.py",
      "line": 15,
      "pattern": "wake_function",
      "content": "def wake_up_ml_components():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_ml_components()",
      "file": "scripts/wake_up_ml_components.py",
      "line": 99,
      "pattern": "wake_function",
      "content": "wake_up_ml_components()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enhanced_alerting_system",
      "file": "scripts/integrate_enhanced_alerting_fixed.py",
      "line": 34,
      "pattern": "function_id",
      "content": "function_id='enhanced_alerting_system',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "EnhancedAlertingSystem",
      "file": "scripts/integrate_enhanced_alerting_fixed.py",
      "line": 35,
      "pattern": "function_name",
      "content": "name='EnhancedAlertingSystem',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_voice_response_to_sleep",
      "file": "scripts/put_voice_response_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_voice_response_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "family_profile_manager",
      "file": "scripts/integrate_family_functions.py",
      "line": 31,
      "pattern": "function_id",
      "content": "function_id=\"family_profile_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "FamilyProfileManager",
      "file": "scripts/integrate_family_functions.py",
      "line": 32,
      "pattern": "function_name",
      "content": "name=\"FamilyProfileManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "child_protection",
      "file": "scripts/integrate_family_functions.py",
      "line": 44,
      "pattern": "function_id",
      "content": "function_id=\"child_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ChildProtection",
      "file": "scripts/integrate_family_functions.py",
      "line": 45,
      "pattern": "function_name",
      "content": "name=\"ChildProtection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "elderly_protection",
      "file": "scripts/integrate_family_functions.py",
      "line": 57,
      "pattern": "function_id",
      "content": "function_id=\"elderly_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ElderlyProtection",
      "file": "scripts/integrate_family_functions.py",
      "line": 58,
      "pattern": "function_name",
      "content": "name=\"ElderlyProtection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_.*_to_sleep",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 54,
      "pattern": "sleep_function",
      "content": "'sleep_function': r'put_.*_to_sleep',",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_.*',",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 55,
      "pattern": "wake_function",
      "content": "'wake_function': r'wake_up_.*',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_function': r'disable_.*',",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 56,
      "pattern": "disable_function",
      "content": "'disable_function': r'disable_.*',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_function': r'enable_.*'",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 57,
      "pattern": "enable_function",
      "content": "'enable_function': r'enable_.*'",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_incident_response_to_sleep",
      "file": "scripts/test_incident_response_quality.py",
      "line": 205,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_incident_response_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "trust_scoring",
      "file": "scripts/test_trust_scoring_integration_fixed.py",
      "line": 30,
      "pattern": "function_id",
      "content": "function_id=\"trust_scoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "TrustScoring",
      "file": "scripts/test_trust_scoring_integration_fixed.py",
      "line": 31,
      "pattern": "function_name",
      "content": "name=\"TrustScoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "file": "scripts/test_trust_scoring_integration_fixed.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/test_trust_scoring_integration_fixed.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "file": "scripts/sfm_analyzer.py",
      "line": 67,
      "pattern": "enable_function",
      "content": "auto_enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': auto_enable_count,",
      "file": "scripts/sfm_analyzer.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': auto_enable_count,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "file": "scripts/sfm_analyzer.py",
      "line": 147,
      "pattern": "enable_function",
      "content": "print(f\"🔄 Автоматически включаемые: {stats['auto_enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "file": "scripts/sfm_analyzer.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "writer.writerow(['Автоматически включаемые', stats['auto_enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_child_interface_to_sleep",
      "file": "scripts/test_child_interface_quality.py",
      "line": 151,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_child_interface_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_compliance_to_sleep",
      "file": "scripts/test_compliance_quality.py",
      "line": 201,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_compliance_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_functions_sleep_mode():",
      "file": "scripts/disable_12_functions_sleep_mode.py",
      "line": 21,
      "pattern": "disable_function",
      "content": "def disable_functions_sleep_mode():",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "enable_functions_wake_up.py\")",
      "file": "scripts/disable_12_functions_sleep_mode.py",
      "line": 176,
      "pattern": "enable_function",
      "content": "print(\"   python scripts/enable_functions_wake_up.py\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "disable_functions_sleep_mode()",
      "file": "scripts/disable_12_functions_sleep_mode.py",
      "line": 182,
      "pattern": "disable_function",
      "content": "disable_functions_sleep_mode()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "IntegrateAdvancedMonitoring",
      "file": "scripts/integrate_advanced_monitoring.py",
      "line": 16,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"IntegrateAdvancedMonitoring\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_voice_control_to_sleep",
      "file": "scripts/put_voice_control_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_voice_control_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Тестовая семья с современными функциями",
      "file": "scripts/test_family_modern_integration.py",
      "line": 48,
      "pattern": "function_name",
      "content": "family_name=\"Тестовая семья с современными функциями\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Анна (тест)",
      "file": "scripts/test_family_modern_integration.py",
      "line": 55,
      "pattern": "function_name",
      "content": "name=\"Анна (тест)\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Мама (тест)",
      "file": "scripts/test_family_modern_integration.py",
      "line": 65,
      "pattern": "function_name",
      "content": "name=\"Мама (тест)\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Palo Alto Networks",
      "file": "scripts/competitive_analysis.py",
      "line": 53,
      "pattern": "function_name",
      "content": "name=\"Palo Alto Networks\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "CrowdStrike",
      "file": "scripts/competitive_analysis.py",
      "line": 81,
      "pattern": "function_name",
      "content": "name=\"CrowdStrike\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Norton 360",
      "file": "scripts/competitive_analysis.py",
      "line": 110,
      "pattern": "function_name",
      "content": "name=\"Norton 360\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "McAfee Total Protection",
      "file": "scripts/competitive_analysis.py",
      "line": 140,
      "pattern": "function_name",
      "content": "name=\"McAfee Total Protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Kaspersky Total Security",
      "file": "scripts/competitive_analysis.py",
      "line": 169,
      "pattern": "function_name",
      "content": "name=\"Kaspersky Total Security\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Bitdefender Total Security",
      "file": "scripts/competitive_analysis.py",
      "line": 198,
      "pattern": "function_name",
      "content": "name=\"Bitdefender Total Security\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SentinelOne",
      "file": "scripts/competitive_analysis.py",
      "line": 228,
      "pattern": "function_name",
      "content": "name=\"SentinelOne\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Darktrace",
      "file": "scripts/competitive_analysis.py",
      "line": 256,
      "pattern": "function_name",
      "content": "name=\"Darktrace\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "threat_intelligence_agent",
      "file": "scripts/update_threat_intelligence_agent_sfm.py",
      "line": 90,
      "pattern": "function_id",
      "content": "function_id = \"threat_intelligence_agent\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_password_security_to_sleep",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_password_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 60,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"CRITICAL\",",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 132,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"CRITICAL\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 200,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time': '< 1 секунда',",
      "file": "scripts/integrate_api_gateway_to_safe_manager.py",
      "line": 43,
      "pattern": "wake_function",
      "content": "'wake_up_time': '< 1 секунда',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time']}\")",
      "file": "scripts/integrate_api_gateway_to_safe_manager.py",
      "line": 180,
      "pattern": "wake_function",
      "content": "print(f\"  ⏰ Время пробуждения: {function_config['wake_up_time']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "scripts/ultra_simple_server.py",
      "line": 49,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "core_base",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 22,
      "pattern": "id\":",
      "content": "{\"id\": \"core_base\", \"name\": \"CoreBase\", \"file\": \"core/base.py\", \"type\": \"Core\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "core_service_base",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 23,
      "pattern": "id\":",
      "content": "{\"id\": \"core_service_base\", \"name\": \"ServiceBase\", \"file\": \"core/service_base.py\", \"type\": \"Core\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "core_database",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 24,
      "pattern": "id\":",
      "content": "{\"id\": \"core_database\", \"name\": \"Database\", \"file\": \"core/database.py\", \"type\": \"Core\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "core_configuration",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 25,
      "pattern": "id\":",
      "content": "{\"id\": \"core_configuration\", \"name\": \"Configuration\", \"file\": \"core/configuration.py\", \"type\": \"Core\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "core_logging",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 26,
      "pattern": "id\":",
      "content": "{\"id\": \"core_logging\", \"name\": \"LoggingModule\", \"file\": \"core/logging_module.py\", \"type\": \"Core\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "core_security_base",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 27,
      "pattern": "id\":",
      "content": "{\"id\": \"core_security_base\", \"name\": \"SecurityBase\", \"file\": \"core/security_base.py\", \"type\": \"Core\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_1",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 30,
      "pattern": "id\":",
      "content": "{\"id\": \"function_1\", \"name\": \"SafeFunctionManager\", \"file\": \"security/safe_function_manager.py\", \"type\": \"Security\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_2",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 31,
      "pattern": "id\":",
      "content": "{\"id\": \"function_2\", \"name\": \"SecurityMonitoring\", \"file\": \"security/security_monitoring.py\", \"type\": \"Security\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_3",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 32,
      "pattern": "id\":",
      "content": "{\"id\": \"function_3\", \"name\": \"Authentication\", \"file\": \"security/authentication.py\", \"type\": \"Security\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_4",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 33,
      "pattern": "id\":",
      "content": "{\"id\": \"function_4\", \"name\": \"AccessControl\", \"file\": \"security/access_control.py\", \"type\": \"Security\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_5",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 34,
      "pattern": "id\":",
      "content": "{\"id\": \"function_5\", \"name\": \"SecurityPolicy\", \"file\": \"security/security_policy.py\", \"type\": \"Security\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_6",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 35,
      "pattern": "id\":",
      "content": "{\"id\": \"function_6\", \"name\": \"SecurityReporting\", \"file\": \"security/security_reporting.py\", \"type\": \"Security\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_7",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 38,
      "pattern": "id\":",
      "content": "{\"id\": \"function_7\", \"name\": \"FamilyProfileManager\", \"file\": \"security/family/family_profile_manager.py\", \"type\": \"Family\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_8",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 39,
      "pattern": "id\":",
      "content": "{\"id\": \"function_8\", \"name\": \"ChildProtection\", \"file\": \"security/family/child_protection.py\", \"type\": \"Family\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_9",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 40,
      "pattern": "id\":",
      "content": "{\"id\": \"function_9\", \"name\": \"ElderlyProtection\", \"file\": \"security/family/elderly_protection.py\", \"type\": \"Family\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_10",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 43,
      "pattern": "id\":",
      "content": "{\"id\": \"function_10\", \"name\": \"PolicyEngine\", \"file\": \"security/preliminary/policy_engine.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_11",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 44,
      "pattern": "id\":",
      "content": "{\"id\": \"function_11\", \"name\": \"RiskAssessment\", \"file\": \"security/preliminary/risk_assessment.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_12",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 45,
      "pattern": "id\":",
      "content": "{\"id\": \"function_12\", \"name\": \"BehavioralAnalysis\", \"file\": \"security/preliminary/behavioral_analysis.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_13",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 46,
      "pattern": "id\":",
      "content": "{\"id\": \"function_13\", \"name\": \"MFAService\", \"file\": \"security/preliminary/mfa_service.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_14",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 47,
      "pattern": "id\":",
      "content": "{\"id\": \"function_14\", \"name\": \"ZeroTrustService\", \"file\": \"security/preliminary/zero_trust_service.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_15",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 48,
      "pattern": "id\":",
      "content": "{\"id\": \"function_15\", \"name\": \"TrustScoring\", \"file\": \"security/preliminary/trust_scoring.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_16",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 49,
      "pattern": "id\":",
      "content": "{\"id\": \"function_16\", \"name\": \"ContextAwareAccess\", \"file\": \"security/preliminary/context_aware_access.py\", \"type\": \"Preliminary\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_17",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 52,
      "pattern": "id\":",
      "content": "{\"id\": \"function_17\", \"name\": \"RecoveryService\", \"file\": \"security/reactive/recovery_service.py\", \"type\": \"Reactive\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_18",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 53,
      "pattern": "id\":",
      "content": "{\"id\": \"function_18\", \"name\": \"ThreatIntelligence\", \"file\": \"security/reactive/threat_intelligence.py\", \"type\": \"Reactive\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_19",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 54,
      "pattern": "id\":",
      "content": "{\"id\": \"function_19\", \"name\": \"ForensicsService\", \"file\": \"security/reactive/forensics_service.py\", \"type\": \"Reactive\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_20",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 57,
      "pattern": "id\":",
      "content": "{\"id\": \"function_20\", \"name\": \"APIGateway\", \"file\": \"security/microservices/api_gateway.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_21",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 58,
      "pattern": "id\":",
      "content": "{\"id\": \"function_21\", \"name\": \"LoadBalancer\", \"file\": \"security/microservices/load_balancer.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_22",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 59,
      "pattern": "id\":",
      "content": "{\"id\": \"function_22\", \"name\": \"RateLimiter\", \"file\": \"security/microservices/rate_limiter.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_23",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 60,
      "pattern": "id\":",
      "content": "{\"id\": \"function_23\", \"name\": \"CircuitBreaker\", \"file\": \"security/microservices/circuit_breaker.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_24",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 61,
      "pattern": "id\":",
      "content": "{\"id\": \"function_24\", \"name\": \"UserInterfaceManager\", \"file\": \"security/microservices/user_interface_manager.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_25",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 62,
      "pattern": "id\":",
      "content": "{\"id\": \"function_25\", \"name\": \"RedisCacheManager\", \"file\": \"security/microservices/redis_cache_manager.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_26",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 63,
      "pattern": "id\":",
      "content": "{\"id\": \"function_26\", \"name\": \"ServiceMeshManager\", \"file\": \"security/microservices/service_mesh_manager.py\", \"type\": \"Microservices\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_27",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 66,
      "pattern": "id\":",
      "content": "{\"id\": \"function_27\", \"name\": \"MonitorManager\", \"file\": \"security/managers/monitor_manager.py\", \"type\": \"Managers\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_28",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 67,
      "pattern": "id\":",
      "content": "{\"id\": \"function_28\", \"name\": \"AlertManager\", \"file\": \"security/managers/alert_manager.py\", \"type\": \"Managers\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_29",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 68,
      "pattern": "id\":",
      "content": "{\"id\": \"function_29\", \"name\": \"ReportManager\", \"file\": \"security/ai_agents/report_manager.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_30",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 69,
      "pattern": "id\":",
      "content": "{\"id\": \"function_30\", \"name\": \"AnalyticsManager\", \"file\": \"security/managers/analytics_manager.py\", \"type\": \"Managers\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_31",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 70,
      "pattern": "id\":",
      "content": "{\"id\": \"function_31\", \"name\": \"DashboardManager\", \"file\": \"security/ai_agents/dashboard_manager.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_32",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 71,
      "pattern": "id\":",
      "content": "{\"id\": \"function_32\", \"name\": \"DataProtectionAgent\", \"file\": \"security/ai_agents/data_protection_agent.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_33",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 72,
      "pattern": "id\":",
      "content": "{\"id\": \"function_33\", \"name\": \"MobileSecurityAgent\", \"file\": \"security/ai_agents/mobile_security_agent.py\", \"type\": \"AI Agents\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_34",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 75,
      "pattern": "id\":",
      "content": "{\"id\": \"function_34\", \"name\": \"MobileNavigationBot\", \"file\": \"security/bots/mobile_navigation_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_35",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 76,
      "pattern": "id\":",
      "content": "{\"id\": \"function_35\", \"name\": \"GamingSecurityBot\", \"file\": \"security/bots/gaming_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_36",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 77,
      "pattern": "id\":",
      "content": "{\"id\": \"function_36\", \"name\": \"EmergencyResponseBot\", \"file\": \"security/bots/emergency_response_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_37",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 78,
      "pattern": "id\":",
      "content": "{\"id\": \"function_37\", \"name\": \"ParentalControlBot\", \"file\": \"security/bots/parental_control_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_38",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 79,
      "pattern": "id\":",
      "content": "{\"id\": \"function_38\", \"name\": \"NotificationBot\", \"file\": \"security/bots/notification_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_39",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 80,
      "pattern": "id\":",
      "content": "{\"id\": \"function_39\", \"name\": \"WhatsAppSecurityBot\", \"file\": \"security/bots/whatsapp_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_40",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 81,
      "pattern": "id\":",
      "content": "{\"id\": \"function_40\", \"name\": \"TelegramSecurityBot\", \"file\": \"security/bots/telegram_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_41",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 82,
      "pattern": "id\":",
      "content": "{\"id\": \"function_41\", \"name\": \"InstagramSecurityBot\", \"file\": \"security/bots/instagram_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_42",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 83,
      "pattern": "id\":",
      "content": "{\"id\": \"function_42\", \"name\": \"AnalyticsBot\", \"file\": \"security/bots/analytics_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_43",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 84,
      "pattern": "id\":",
      "content": "{\"id\": \"function_43\", \"name\": \"WebsiteNavigationBot\", \"file\": \"security/bots/website_navigation_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_44",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 85,
      "pattern": "id\":",
      "content": "{\"id\": \"function_44\", \"name\": \"BrowserSecurityBot\", \"file\": \"security/bots/browser_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_45",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 86,
      "pattern": "id\":",
      "content": "{\"id\": \"function_45\", \"name\": \"CloudStorageSecurityBot\", \"file\": \"security/bots/cloud_storage_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_46",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 87,
      "pattern": "id\":",
      "content": "{\"id\": \"function_46\", \"name\": \"NetworkSecurityBot\", \"file\": \"security/bots/network_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_47",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 88,
      "pattern": "id\":",
      "content": "{\"id\": \"function_47\", \"name\": \"DeviceSecurityBot\", \"file\": \"security/bots/device_security_bot.py\", \"type\": \"Bots\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_48",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 91,
      "pattern": "id\":",
      "content": "{\"id\": \"function_48\", \"name\": \"UniversalPrivacyManager\", \"file\": \"security/privacy/universal_privacy_manager.py\", \"type\": \"Privacy\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_49",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 94,
      "pattern": "id\":",
      "content": "{\"id\": \"function_49\", \"name\": \"RussianChildProtectionManager\", \"file\": \"security/compliance/russian_child_protection_manager.py\", \"type\": \"Compliance\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_152_fz_compliance",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 95,
      "pattern": "id\":",
      "content": "{\"id\": \"function_152_fz_compliance\", \"name\": \"RussianDataProtectionManager\", \"file\": \"security/compliance/russian_data_protection_manager.py\", \"type\": \"Compliance\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_50",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 98,
      "pattern": "id\":",
      "content": "{\"id\": \"function_50\", \"name\": \"CIPipelineManager\", \"file\": \"security/ci_cd/ci_pipeline_manager.py\", \"type\": \"CI/CD\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_51",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 101,
      "pattern": "id\":",
      "content": "{\"id\": \"function_51\", \"name\": \"AutoScalingEngine\", \"file\": \"security/scaling/auto_scaling_engine.py\", \"type\": \"Scaling\", \"status\": \"Active\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "function_52",
      "file": "scripts/sfm_complete_statistics.py",
      "line": 104,
      "pattern": "id\":",
      "content": "{\"id\": \"function_52\", \"name\": \"KubernetesOrchestrator\", \"file\": \"security/orchestration/kubernetes_orchestrator.py\", \"type\": \"Orchestration\", \"status\": \"Active\"}",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_gamification\": True,",
      "file": "scripts/integrate_mobile_agent.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "\"enable_gamification\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotions\": True,",
      "file": "scripts/integrate_mobile_agent.py",
      "line": 44,
      "pattern": "enable_function",
      "content": "\"enable_emotions\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_command\": \"python3 -c \\\"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent активирован')\\\"\",",
      "file": "scripts/integrate_mobile_agent.py",
      "line": 91,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 -c \\\"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent активирован')\\\"\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_functions\": sum(1 for f in merged_registry[\"functions\"].values()",
      "file": "scripts/fixed_registry_merge_manager.py",
      "line": 193,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in merged_registry[\"functions\"].values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_152_fz_to_sleep",
      "file": "scripts/put_152_fz_to_sleep.py",
      "line": 29,
      "pattern": "sleep_function",
      "content": "\"../scripts/put_152_fz_to_sleep.py\"",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 26,
      "pattern": "function_name",
      "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "analytics_manager",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 31,
      "pattern": "function_id",
      "content": "function_id=\"analytics_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "AnalyticsManager",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 32,
      "pattern": "function_name",
      "content": "name=\"AnalyticsManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"analytics_manager\")",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"analytics_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ AnalyticsManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml=True,",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 57,
      "pattern": "enable_function",
      "content": "enable_ml=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering=True,",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 58,
      "pattern": "enable_function",
      "content": "enable_clustering=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prediction=True",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 59,
      "pattern": "enable_function",
      "content": "enable_prediction=True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and result.status.value == \"completed\":",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and result.status.value == \"completed\":",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions\": sum(1 for f in functions.values()",
      "file": "scripts/ultimate_sfm_fix.py",
      "line": 184,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']}\")",
      "file": "scripts/ultimate_sfm_fix.py",
      "line": 297,
      "pattern": "enable_function",
      "content": "print(f\"  Автовключение: {stats['auto_enable_functions']}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "IntegrateRussianAPIs",
      "file": "scripts/integrate_russian_apis.py",
      "line": 16,
      "pattern": "function_name",
      "content": "logger = LoggingManager(name=\"IntegrateRussianAPIs\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_yandex_maps",
      "file": "scripts/integrate_russian_apis.py",
      "line": 32,
      "pattern": "function_id",
      "content": "function_id=\"russian_yandex_maps\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Яндекс Карты API",
      "file": "scripts/integrate_russian_apis.py",
      "line": 33,
      "pattern": "function_name",
      "content": "name=\"Яндекс Карты API\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_glonass",
      "file": "scripts/integrate_russian_apis.py",
      "line": 50,
      "pattern": "function_id",
      "content": "function_id=\"russian_glonass\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ГЛОНАСС API",
      "file": "scripts/integrate_russian_apis.py",
      "line": 51,
      "pattern": "function_name",
      "content": "name=\"ГЛОНАСС API\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_free_glonass",
      "file": "scripts/integrate_russian_apis.py",
      "line": 68,
      "pattern": "function_id",
      "content": "function_id=\"russian_free_glonass\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Открытый ГЛОНАСС",
      "file": "scripts/integrate_russian_apis.py",
      "line": 69,
      "pattern": "function_name",
      "content": "name=\"Открытый ГЛОНАСС\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "russian_altox_server",
      "file": "scripts/integrate_russian_apis.py",
      "line": 86,
      "pattern": "function_id",
      "content": "function_id=\"russian_altox_server\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALTOX Server",
      "file": "scripts/integrate_russian_apis.py",
      "line": 87,
      "pattern": "function_name",
      "content": "name=\"ALTOX Server\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "ALADDIN",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 26,
      "pattern": "function_name",
      "content": "sfm = SafeFunctionManager(name=\"ALADDIN\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "dashboard_manager",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 31,
      "pattern": "function_id",
      "content": "function_id=\"dashboard_manager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "DashboardManager",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 32,
      "pattern": "function_name",
      "content": "name=\"DashboardManager\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"dashboard_manager\")",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"dashboard_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ DashboardManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "Тестовая панель безопасности",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 79,
      "pattern": "function_name",
      "content": "name=\"Тестовая панель безопасности\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success and init_success:",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 146,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and init_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_smart_notification_to_sleep",
      "file": "scripts/put_smart_notification_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_smart_notification_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "viewport",
      "file": "scripts/fixed_vpn_server.py",
      "line": 48,
      "pattern": "function_name",
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_procedures\": {",
      "file": "scripts/put_vpn_antivirus_to_sleep.py",
      "line": 106,
      "pattern": "wake_function",
      "content": "\"wake_up_procedures\": {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Broken Access Control",
      "file": "scripts/world_class_security_analysis.py",
      "line": 86,
      "pattern": "function_name",
      "content": "name=\"Broken Access Control\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Cryptographic Failures",
      "file": "scripts/world_class_security_analysis.py",
      "line": 102,
      "pattern": "function_name",
      "content": "name=\"Cryptographic Failures\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Injection",
      "file": "scripts/world_class_security_analysis.py",
      "line": 118,
      "pattern": "function_name",
      "content": "name=\"Injection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Asset Management",
      "file": "scripts/world_class_security_analysis.py",
      "line": 140,
      "pattern": "function_name",
      "content": "name=\"Asset Management\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Identity Management and Access Control",
      "file": "scripts/world_class_security_analysis.py",
      "line": 152,
      "pattern": "function_name",
      "content": "name=\"Identity Management and Access Control\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Security Continuous Monitoring",
      "file": "scripts/world_class_security_analysis.py",
      "line": 164,
      "pattern": "function_name",
      "content": "name=\"Security Continuous Monitoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Information Security Policies",
      "file": "scripts/world_class_security_analysis.py",
      "line": 182,
      "pattern": "function_name",
      "content": "name=\"Information Security Policies\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Organization of Information Security",
      "file": "scripts/world_class_security_analysis.py",
      "line": 194,
      "pattern": "function_name",
      "content": "name=\"Organization of Information Security\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Inventory and Control of Enterprise Assets",
      "file": "scripts/world_class_security_analysis.py",
      "line": 212,
      "pattern": "function_name",
      "content": "name=\"Inventory and Control of Enterprise Assets\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Inventory and Control of Software Assets",
      "file": "scripts/world_class_security_analysis.py",
      "line": 224,
      "pattern": "function_name",
      "content": "name=\"Inventory and Control of Software Assets\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Cross-site Scripting (XSS)",
      "file": "scripts/world_class_security_analysis.py",
      "line": 242,
      "pattern": "function_name",
      "content": "name=\"Cross-site Scripting (XSS)\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "SQL Injection",
      "file": "scripts/world_class_security_analysis.py",
      "line": 254,
      "pattern": "function_name",
      "content": "name=\"SQL Injection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Security of Processing",
      "file": "scripts/world_class_security_analysis.py",
      "line": 272,
      "pattern": "function_name",
      "content": "name=\"Security of Processing\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "Data Protection by Design",
      "file": "scripts/world_class_security_analysis.py",
      "line": 288,
      "pattern": "function_name",
      "content": "name=\"Data Protection by Design\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_password_security_to_sleep",
      "file": "scripts/test_password_security_quality.py",
      "line": 195,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_password_security_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_ci_pipeline_to_sleep",
      "file": "scripts/put_ci_pipeline_to_sleep.py",
      "line": 19,
      "pattern": "sleep_function",
      "content": "def put_ci_pipeline_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_condition\": \"При необходимости автоматизации развертывания\",",
      "file": "scripts/put_ci_pipeline_to_sleep.py",
      "line": 112,
      "pattern": "wake_function",
      "content": "\"wake_up_condition\": \"При необходимости автоматизации развертывания\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "behavioral_analysis_agent",
      "file": "scripts/test_behavioral_analysis_agent_integration.py",
      "line": 34,
      "pattern": "function_id",
      "content": "function_id=\"behavioral_analysis_agent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "BehavioralAnalysisAgent",
      "file": "scripts/test_behavioral_analysis_agent_integration.py",
      "line": 35,
      "pattern": "function_name",
      "content": "name=\"BehavioralAnalysisAgent\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(\"behavioral_analysis_agent\")",
      "file": "scripts/test_behavioral_analysis_agent_integration.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "sfm.enable_function(\"behavioral_analysis_agent\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management\": False,  # Отключаем для теста",
      "file": "scripts/test_sfm_optimizations.py",
      "line": 29,
      "pattern": "enable_function",
      "content": "\"enable_auto_management\": False,  # Отключаем для теста",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode\": False",
      "file": "scripts/test_sfm_optimizations.py",
      "line": 30,
      "pattern": "enable_function",
      "content": "\"enable_sleep_mode\": False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "put_mobile_security_100_percent_to_sleep",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_mobile_security_100_percent_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 61,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"HIGH\",",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 112,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"HIGH\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 165,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command': 'python3 scripts/setup_wizard.py'",
      "file": "scripts/integrate_new_components.py",
      "line": 183,
      "pattern": "wake_function",
      "content": "'wake_up_command': 'python3 scripts/setup_wizard.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command': 'python3 mobile/mobile_api.py'",
      "file": "scripts/integrate_new_components.py",
      "line": 193,
      "pattern": "wake_function",
      "content": "'wake_up_command': 'python3 mobile/mobile_api.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command': 'python3 scripts/ultra_fast_test.py'",
      "file": "scripts/integrate_new_components.py",
      "line": 198,
      "pattern": "wake_function",
      "content": "'wake_up_command': 'python3 scripts/ultra_fast_test.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "disable_existing_loggers\": False,",
      "file": "scripts/auto_configuration.py",
      "line": 226,
      "pattern": "disable_function",
      "content": "\"disable_existing_loggers\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": true,
      "is_enable": false
    },
    {
      "function_id": "static",
      "file": "api_docs/secure_api_docs.py",
      "line": 145,
      "pattern": "function_name",
      "content": "app.mount(\"/static\", StaticFiles(directory=\"api_docs/static\"), name=\"static\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console = config.get(",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 88,
      "pattern": "enable_function",
      "content": "self.enable_console = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", True) if config else True",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 89,
      "pattern": "enable_function",
      "content": "\"enable_console\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 90,
      "pattern": "enable_function",
      "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file:",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 173,
      "pattern": "enable_function",
      "content": "if self.enable_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console = config.get(",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 88,
      "pattern": "enable_function",
      "content": "self.enable_console = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", True) if config else True",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 89,
      "pattern": "enable_function",
      "content": "\"enable_console\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 90,
      "pattern": "enable_function",
      "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file:",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 173,
      "pattern": "enable_function",
      "content": "if self.enable_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    }
  ],
  "sleep_functions": [
    {
      "function_id": "put_systems_to_sleep",
      "file": "security/microservices/simple_sleep.py",
      "line": 167,
      "pattern": "sleep_function",
      "content": "def put_systems_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_systems_to_sleep",
      "file": "security/microservices/put_to_sleep_enhanced.py",
      "line": 32,
      "pattern": "sleep_function",
      "content": "async def put_systems_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_security_component_to_sleep",
      "file": "security/vpn/sleep_mode_all_security_components.py",
      "line": 175,
      "pattern": "sleep_function",
      "content": "def put_security_component_to_sleep(self, component_name: str) -> bool:",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_bot_to_sleep",
      "file": "security/managers/integrate_all_bots_to_sleep.py",
      "line": 272,
      "pattern": "sleep_function",
      "content": "async def put_bot_to_sleep(self, bot_name: str, bot_instance: Any) -> bool:",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_bot_to_sleep",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 133,
      "pattern": "sleep_function",
      "content": "async def put_bot_to_sleep(",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_all_bots_to_sleep",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 300,
      "pattern": "sleep_function",
      "content": "async def put_all_bots_to_sleep(",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_bot_to_sleep",
      "file": "security/managers/check_and_sleep_bots.py",
      "line": 197,
      "pattern": "sleep_function",
      "content": "async def put_bot_to_sleep(self, bot_name: str, bot_instance: Any) -> bool:",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_functions_to_sleep",
      "file": "scripts/put_functions_to_sleep.py",
      "line": 12,
      "pattern": "sleep_function",
      "content": "def put_functions_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_contextual_alert_to_sleep",
      "file": "scripts/put_contextual_alert_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_contextual_alert_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_elderly_interface_to_sleep",
      "file": "scripts/put_elderly_interface_to_sleep.py",
      "line": 15,
      "pattern": "sleep_function",
      "content": "def put_elderly_interface_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_voice_security_to_sleep",
      "file": "scripts/put_voice_security_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_voice_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_messenger_integration_to_sleep",
      "file": "scripts/put_messenger_integration_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_messenger_integration_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_parent_control_to_sleep",
      "file": "scripts/put_parent_control_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_parent_control_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_russian_child_protection_to_sleep",
      "file": "scripts/put_russian_child_protection_to_sleep.py",
      "line": 15,
      "pattern": "sleep_function",
      "content": "def put_russian_child_protection_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_threat_intelligence_to_sleep",
      "file": "scripts/test_threat_intelligence_simple.py",
      "line": 134,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_threat_intelligence_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_speech_recognition_to_sleep",
      "file": "scripts/put_speech_recognition_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_speech_recognition_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_family_communication_to_sleep",
      "file": "scripts/put_family_communication_to_sleep.py",
      "line": 14,
      "pattern": "sleep_function",
      "content": "def put_family_communication_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_emergency_response_to_sleep",
      "file": "scripts/put_emergency_response_to_sleep.py",
      "line": 14,
      "pattern": "sleep_function",
      "content": "def put_emergency_response_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_to_sleep(recommendations['put_to_sleep",
      "file": "scripts/safe_sleep_mode_optimizer.py",
      "line": 167,
      "pattern": "sleep_function",
      "content": "sleep_results = self.safe_put_to_sleep(recommendations['put_to_sleep'])",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_elderly_interface_to_sleep",
      "file": "scripts/test_elderly_interface_quality.py",
      "line": 137,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_elderly_interface_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_behavioral_analytics_to_sleep",
      "file": "scripts/put_behavioral_analytics_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_behavioral_analytics_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_data_protection_agent_to_sleep",
      "file": "scripts/put_data_protection_agent_to_sleep.py",
      "line": 7,
      "pattern": "sleep_function",
      "content": "def put_data_protection_agent_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_natural_language_to_sleep",
      "file": "scripts/put_natural_language_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_natural_language_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_mobile_security_to_sleep",
      "file": "scripts/put_mobile_security_to_sleep_simple.py",
      "line": 12,
      "pattern": "sleep_function",
      "content": "def put_mobile_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_notification_bot_to_sleep",
      "file": "scripts/put_notification_bot_to_sleep.py",
      "line": 14,
      "pattern": "sleep_function",
      "content": "def put_notification_bot_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_api_gateway_to_sleep",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 16,
      "pattern": "sleep_function",
      "content": "def put_api_gateway_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_function_to_sleep",
      "file": "scripts/minimal_active_system.py",
      "line": 113,
      "pattern": "sleep_function",
      "content": "result = await self._put_function_to_sleep(func_id, func_data, sfm_registry)",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_mobile_security_to_sleep",
      "file": "scripts/put_mobile_security_to_sleep.py",
      "line": 16,
      "pattern": "sleep_function",
      "content": "def put_mobile_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_incident_response_to_sleep",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_incident_response_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_function_to_sleep",
      "file": "scripts/auto_sleep_mode_implementation.py",
      "line": 150,
      "pattern": "sleep_function",
      "content": "result = await self._put_function_to_sleep(func)",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_child_interface_to_sleep",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_child_interface_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_super_ai_to_sleep",
      "file": "scripts/put_super_ai_to_sleep.py",
      "line": 19,
      "pattern": "sleep_function",
      "content": "def put_super_ai_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_threat_intelligence_to_sleep",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_threat_intelligence_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_universal_privacy_to_sleep",
      "file": "scripts/put_universal_privacy_to_sleep.py",
      "line": 12,
      "pattern": "sleep_function",
      "content": "def put_universal_privacy_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_compliance_to_sleep",
      "file": "scripts/put_compliance_to_sleep_final.py",
      "line": 15,
      "pattern": "sleep_function",
      "content": "def put_compliance_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_voice_response_to_sleep",
      "file": "scripts/put_voice_response_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_voice_response_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_.*_to_sleep",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 54,
      "pattern": "sleep_function",
      "content": "'sleep_function': r'put_.*_to_sleep',",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_incident_response_to_sleep",
      "file": "scripts/test_incident_response_quality.py",
      "line": 205,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_incident_response_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_child_interface_to_sleep",
      "file": "scripts/test_child_interface_quality.py",
      "line": 151,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_child_interface_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_compliance_to_sleep",
      "file": "scripts/test_compliance_quality.py",
      "line": 201,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_compliance_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_voice_control_to_sleep",
      "file": "scripts/put_voice_control_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_voice_control_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_password_security_to_sleep",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_password_security_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_152_fz_to_sleep",
      "file": "scripts/put_152_fz_to_sleep.py",
      "line": 29,
      "pattern": "sleep_function",
      "content": "\"../scripts/put_152_fz_to_sleep.py\"",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_smart_notification_to_sleep",
      "file": "scripts/put_smart_notification_to_sleep.py",
      "line": 17,
      "pattern": "sleep_function",
      "content": "def put_smart_notification_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_password_security_to_sleep",
      "file": "scripts/test_password_security_quality.py",
      "line": 195,
      "pattern": "sleep_function",
      "content": "\"Спящий режим\": os.path.exists(\"scripts/put_password_security_to_sleep.py\"),",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_ci_pipeline_to_sleep",
      "file": "scripts/put_ci_pipeline_to_sleep.py",
      "line": 19,
      "pattern": "sleep_function",
      "content": "def put_ci_pipeline_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "put_mobile_security_100_percent_to_sleep",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 13,
      "pattern": "sleep_function",
      "content": "def put_mobile_security_100_percent_to_sleep():",
      "is_sleep": true,
      "is_wake": false,
      "is_disable": false,
      "is_enable": false
    }
  ],
  "active_functions": [
    {
      "function_id": "enable_real_time\": True",
      "file": "test_security_analytics_comprehensive.py",
      "line": 121,
      "pattern": "enable_function",
      "content": "\"enable_real_time\": True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time\": True,",
      "file": "test_security_analytics_comprehensive.py",
      "line": 196,
      "pattern": "enable_function",
      "content": "\"enable_real_time\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence}\")",
      "file": "test_sfm_persistence_final.py",
      "line": 48,
      "pattern": "enable_function",
      "content": "print(f\"   Персистентность включена: {sfm.enable_persistence}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems():",
      "file": "wake_up_systems.py",
      "line": 7,
      "pattern": "wake_function",
      "content": "def wake_up_systems():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config = {",
      "file": "wake_up_systems.py",
      "line": 11,
      "pattern": "wake_function",
      "content": "wake_up_config = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time()",
      "file": "wake_up_systems.py",
      "line": 16,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "file": "wake_up_systems.py",
      "line": 33,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
      "file": "wake_up_systems.py",
      "line": 34,
      "pattern": "wake_function",
      "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems()",
      "file": "wake_up_systems.py",
      "line": 40,
      "pattern": "wake_function",
      "content": "wake_up_systems()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console = config.get(",
      "file": "core/logging_module.py",
      "line": 88,
      "pattern": "enable_function",
      "content": "self.enable_console = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", True) if config else True",
      "file": "core/logging_module.py",
      "line": 89,
      "pattern": "enable_function",
      "content": "\"enable_console\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
      "file": "core/logging_module.py",
      "line": 90,
      "pattern": "enable_function",
      "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "core/logging_module.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file:",
      "file": "core/logging_module.py",
      "line": 173,
      "pattern": "enable_function",
      "content": "if self.enable_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_destructive_operations = False",
      "file": "config/safe_config.py",
      "line": 29,
      "pattern": "enable_function",
      "content": "self.enable_destructive_operations = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file_operations = False",
      "file": "config/safe_config.py",
      "line": 30,
      "pattern": "enable_function",
      "content": "self.enable_file_operations = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_system_commands = False",
      "file": "config/safe_config.py",
      "line": 31,
      "pattern": "enable_function",
      "content": "self.enable_system_commands = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_operations = False",
      "file": "config/safe_config.py",
      "line": 32,
      "pattern": "enable_function",
      "content": "self.enable_network_operations = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_logging\": True,",
      "file": "config/safe_config.py",
      "line": 121,
      "pattern": "enable_function",
      "content": "\"enable_logging\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_trail\": True,",
      "file": "config/safe_config.py",
      "line": 126,
      "pattern": "enable_function",
      "content": "\"enable_audit_trail\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_database\": False,  # Отключена - может изменять данные",
      "file": "config/safe_config.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "\"enable_database\": False,  # Отключена - может изменять данные",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_backups\": False,  # Отключены - могут удалять файлы",
      "file": "config/safe_config.py",
      "line": 134,
      "pattern": "enable_function",
      "content": "\"enable_backups\": False,  # Отключены - могут удалять файлы",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cleanup\": False,  # Отключена - может удалять данные",
      "file": "config/safe_config.py",
      "line": 135,
      "pattern": "enable_function",
      "content": "\"enable_cleanup\": False,  # Отключена - может удалять данные",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_migrations\": False,  # Отключены - могут изменять схему",
      "file": "config/safe_config.py",
      "line": 136,
      "pattern": "enable_function",
      "content": "\"enable_migrations\": False,  # Отключены - могут изменять схему",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network\": False,",
      "file": "config/safe_config.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "\"enable_network\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_external_apis\": False,",
      "file": "config/safe_config.py",
      "line": 142,
      "pattern": "enable_function",
      "content": "\"enable_external_apis\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_webhooks\": False,",
      "file": "config/safe_config.py",
      "line": 143,
      "pattern": "enable_function",
      "content": "\"enable_webhooks\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_remote_commands\": False,",
      "file": "config/safe_config.py",
      "line": 144,
      "pattern": "enable_function",
      "content": "\"enable_remote_commands\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file_operations\": False,",
      "file": "config/safe_config.py",
      "line": 149,
      "pattern": "enable_function",
      "content": "\"enable_file_operations\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_backups\": False,",
      "file": "config/safe_config.py",
      "line": 151,
      "pattern": "enable_function",
      "content": "\"enable_backups\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cleanup\": False,",
      "file": "config/safe_config.py",
      "line": 152,
      "pattern": "enable_function",
      "content": "\"enable_cleanup\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_temp_files\": False,",
      "file": "config/safe_config.py",
      "line": 153,
      "pattern": "enable_function",
      "content": "\"enable_temp_files\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_destructive_operations\": (",
      "file": "config/safe_config.py",
      "line": 184,
      "pattern": "enable_function",
      "content": "\"enable_destructive_operations\": (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_destructive_operations",
      "file": "config/safe_config.py",
      "line": 185,
      "pattern": "enable_function",
      "content": "self.enable_destructive_operations",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file_operations\": self.enable_file_operations,",
      "file": "config/safe_config.py",
      "line": 187,
      "pattern": "enable_function",
      "content": "\"enable_file_operations\": self.enable_file_operations,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_system_commands\": self.enable_system_commands,",
      "file": "config/safe_config.py",
      "line": 188,
      "pattern": "enable_function",
      "content": "\"enable_system_commands\": self.enable_system_commands,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_operations\": self.enable_network_operations,",
      "file": "config/safe_config.py",
      "line": 189,
      "pattern": "enable_function",
      "content": "\"enable_network_operations\": self.enable_network_operations,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue: bool = True,",
      "file": "security/thread_pool_manager.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_priority_queue: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue: Включить очередь с приоритетами",
      "file": "security/thread_pool_manager.py",
      "line": 54,
      "pattern": "enable_function",
      "content": "enable_priority_queue: Включить очередь с приоритетами",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue = enable_priority_queue",
      "file": "security/thread_pool_manager.py",
      "line": 58,
      "pattern": "enable_function",
      "content": "self.enable_priority_queue = enable_priority_queue",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue:",
      "file": "security/thread_pool_manager.py",
      "line": 84,
      "pattern": "enable_function",
      "content": "if enable_priority_queue:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue,",
      "file": "security/thread_pool_manager.py",
      "line": 234,
      "pattern": "enable_function",
      "content": "\"queue_enabled\": self.enable_priority_queue,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers = False",
      "file": "security/minimal_security_integration.py",
      "line": 29,
      "pattern": "enable_function",
      "content": "self.enable_wrappers = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers\": self.enable_wrappers,",
      "file": "security/minimal_security_integration.py",
      "line": 204,
      "pattern": "enable_function",
      "content": "\"enable_wrappers\": self.enable_wrappers,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_continuous_audit = config.get(\"enable_continuous_audit\", True) if config else True",
      "file": "security/security_audit.py",
      "line": 231,
      "pattern": "enable_function",
      "content": "self.enable_continuous_audit = config.get(\"enable_continuous_audit\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_continuous_audit:",
      "file": "security/security_audit.py",
      "line": 257,
      "pattern": "enable_function",
      "content": "if self.enable_continuous_audit:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_continuous_audit = False",
      "file": "security/security_audit.py",
      "line": 768,
      "pattern": "enable_function",
      "content": "self.enable_continuous_audit = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_reporting = (",
      "file": "security/compliance_manager.py",
      "line": 230,
      "pattern": "enable_function",
      "content": "self.enable_reporting = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_reporting\", True) if config else True",
      "file": "security/compliance_manager.py",
      "line": 231,
      "pattern": "enable_function",
      "content": "config.get(\"enable_reporting\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_reporting:",
      "file": "security/compliance_manager.py",
      "line": 266,
      "pattern": "enable_function",
      "content": "if self.enable_reporting:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_zero_trust\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 58,
      "pattern": "enable_function",
      "content": "\"enable_zero_trust\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 59,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 60,
      "pattern": "enable_function",
      "content": "\"enable_auto_scaling\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaking\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 61,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_mesh\": True,",
      "file": "security/unified_security_orchestrator.py",
      "line": 62,
      "pattern": "enable_function",
      "content": "\"enable_service_mesh\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_zero_trust\"]",
      "file": "security/unified_security_orchestrator.py",
      "line": 155,
      "pattern": "enable_function",
      "content": "self.integration_config[\"enable_zero_trust\"]",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaking\"]:",
      "file": "security/unified_security_orchestrator.py",
      "line": 171,
      "pattern": "enable_function",
      "content": "if self.integration_config[\"enable_circuit_breaking\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\"]:",
      "file": "security/unified_security_orchestrator.py",
      "line": 179,
      "pattern": "enable_function",
      "content": "if self.integration_config[\"enable_load_balancing\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\"]:",
      "file": "security/unified_security_orchestrator.py",
      "line": 188,
      "pattern": "enable_function",
      "content": "if self.integration_config[\"enable_auto_scaling\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa(self, user_id: str, mfa_type: MFAType) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 119,
      "pattern": "enable_function",
      "content": "def enable_mfa(self, user_id: str, mfa_type: MFAType) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_totp(user_id)",
      "file": "security/mfa_service.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "return self._enable_totp(user_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sms(user_id)",
      "file": "security/mfa_service.py",
      "line": 134,
      "pattern": "enable_function",
      "content": "return self._enable_sms(user_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_email(user_id)",
      "file": "security/mfa_service.py",
      "line": 136,
      "pattern": "enable_function",
      "content": "return self._enable_email(user_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_totp(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 148,
      "pattern": "enable_function",
      "content": "def _enable_totp(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sms(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 182,
      "pattern": "enable_function",
      "content": "def _enable_sms(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_email(self, user_id: str) -> Dict[str, Any]:",
      "file": "security/mfa_service.py",
      "line": 198,
      "pattern": "enable_function",
      "content": "def _enable_email(self, user_id: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa(user_id, MFAType.TOTP)",
      "file": "security/mfa_service.py",
      "line": 618,
      "pattern": "enable_function",
      "content": "result = mfa_service.enable_mfa(user_id, MFAType.TOTP)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update = (",
      "file": "security/threat_intelligence.py",
      "line": 159,
      "pattern": "enable_function",
      "content": "self.enable_auto_update = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update\", True) if config else True",
      "file": "security/threat_intelligence.py",
      "line": 160,
      "pattern": "enable_function",
      "content": "config.get(\"enable_auto_update\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update:",
      "file": "security/threat_intelligence.py",
      "line": 195,
      "pattern": "enable_function",
      "content": "if self.enable_auto_update:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_update = False",
      "file": "security/threat_intelligence.py",
      "line": 879,
      "pattern": "enable_function",
      "content": "self.enable_auto_update = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug\",",
      "file": "security/smart_monitoring.py",
      "line": 270,
      "pattern": "enable_function",
      "content": "\"enable_debug\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation\",",
      "file": "security/smart_monitoring.py",
      "line": 271,
      "pattern": "enable_function",
      "content": "\"enable_validation\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: Включение отладочного режима",
      "file": "security/smart_monitoring.py",
      "line": 313,
      "pattern": "enable_function",
      "content": "enable_debug: Включение отладочного режима",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation: Включение валидации",
      "file": "security/smart_monitoring.py",
      "line": 314,
      "pattern": "enable_function",
      "content": "enable_validation: Включение валидации",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: bool = False",
      "file": "security/smart_monitoring.py",
      "line": 380,
      "pattern": "enable_function",
      "content": "self.enable_debug: bool = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation: bool = True",
      "file": "security/smart_monitoring.py",
      "line": 383,
      "pattern": "enable_function",
      "content": "self.enable_validation: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug\": self.enable_debug,",
      "file": "security/smart_monitoring.py",
      "line": 1084,
      "pattern": "enable_function",
      "content": "\"enable_debug\": self.enable_debug,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation\": self.enable_validation,",
      "file": "security/smart_monitoring.py",
      "line": 1085,
      "pattern": "enable_function",
      "content": "\"enable_validation\": self.enable_validation,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug or level in [\"ERROR\", \"CRITICAL\"]:",
      "file": "security/smart_monitoring.py",
      "line": 2316,
      "pattern": "enable_function",
      "content": "if self.enable_debug or level in [\"ERROR\", \"CRITICAL\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: bool = False,",
      "file": "security/smart_monitoring.py",
      "line": 2401,
      "pattern": "enable_function",
      "content": "enable_debug: bool = False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug: Включить отладочный вывод",
      "file": "security/smart_monitoring.py",
      "line": 2410,
      "pattern": "enable_function",
      "content": "enable_debug: Включить отладочный вывод",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug = enable_debug",
      "file": "security/smart_monitoring.py",
      "line": 2431,
      "pattern": "enable_function",
      "content": "self.enable_debug = enable_debug",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug=enable_debug,",
      "file": "security/smart_monitoring.py",
      "line": 2438,
      "pattern": "enable_function",
      "content": "enable_debug=enable_debug,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug = settings.get(\"enable_debug\", self.enable_debug)",
      "file": "security/smart_monitoring.py",
      "line": 3167,
      "pattern": "enable_function",
      "content": "self.enable_debug = settings.get(\"enable_debug\", self.enable_debug)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation = settings.get(",
      "file": "security/smart_monitoring.py",
      "line": 3168,
      "pattern": "enable_function",
      "content": "self.enable_validation = settings.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_validation\", self.enable_validation",
      "file": "security/smart_monitoring.py",
      "line": 3169,
      "pattern": "enable_function",
      "content": "\"enable_validation\", self.enable_validation",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_policy_enforcement = config.get(\"enable_policy_enforcement\", True) if config else True",
      "file": "security/security_policy.py",
      "line": 293,
      "pattern": "enable_function",
      "content": "self.enable_policy_enforcement = config.get(\"enable_policy_enforcement\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_policy_enforcement = False",
      "file": "security/security_policy.py",
      "line": 793,
      "pattern": "enable_function",
      "content": "self.enable_policy_enforcement = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time = config.get(\"enable_real_time\", True) if config else True",
      "file": "security/safe_security_monitoring.py",
      "line": 137,
      "pattern": "enable_function",
      "content": "self.enable_real_time = config.get(\"enable_real_time\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time:",
      "file": "security/safe_security_monitoring.py",
      "line": 177,
      "pattern": "enable_function",
      "content": "if self.enable_real_time:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time,",
      "file": "security/safe_security_monitoring.py",
      "line": 405,
      "pattern": "enable_function",
      "content": "\"monitoring_enabled\": self.enable_real_time,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management = config.get(\"enable_auto_management\", False) if config else False",
      "file": "security/safe_function_manager.py",
      "line": 217,
      "pattern": "enable_function",
      "content": "self.enable_auto_management = config.get(\"enable_auto_management\", False) if config else False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode = config.get(\"enable_sleep_mode\", False) if config else False",
      "file": "security/safe_function_manager.py",
      "line": 221,
      "pattern": "enable_function",
      "content": "self.enable_sleep_mode = config.get(\"enable_sleep_mode\", False) if config else False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management:",
      "file": "security/safe_function_manager.py",
      "line": 358,
      "pattern": "enable_function",
      "content": "if self.enable_auto_management:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode and self.auto_sleep_enabled:",
      "file": "security/safe_function_manager.py",
      "line": 362,
      "pattern": "enable_function",
      "content": "if self.enable_sleep_mode and self.auto_sleep_enabled:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/safe_function_manager.py",
      "line": 432,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "security/safe_function_manager.py",
      "line": 433,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\": True,",
      "file": "security/safe_function_manager.py",
      "line": 434,
      "pattern": "enable_function",
      "content": "\"enable_health_checks\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": True,",
      "file": "security/safe_function_manager.py",
      "line": 435,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\": True,",
      "file": "security/safe_function_manager.py",
      "line": 436,
      "pattern": "enable_function",
      "content": "\"enable_caching\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async\": True,",
      "file": "security/safe_function_manager.py",
      "line": 437,
      "pattern": "enable_function",
      "content": "\"enable_async\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prometheus\": True,",
      "file": "security/safe_function_manager.py",
      "line": 438,
      "pattern": "enable_function",
      "content": "\"enable_prometheus\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_redis\": self.redis_enabled,",
      "file": "security/safe_function_manager.py",
      "line": 439,
      "pattern": "enable_function",
      "content": "\"enable_redis\": self.redis_enabled,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(func_data[\"function_id\"])",
      "file": "security/safe_function_manager.py",
      "line": 768,
      "pattern": "enable_function",
      "content": "self.enable_function(func_data[\"function_id\"])",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function.function_id)",
      "file": "security/safe_function_manager.py",
      "line": 794,
      "pattern": "enable_function",
      "content": "self.enable_function(function.function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "security/safe_function_manager.py",
      "line": 878,
      "pattern": "enable_function",
      "content": "self.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(self, function_id: str) -> bool:",
      "file": "security/safe_function_manager.py",
      "line": 936,
      "pattern": "enable_function",
      "content": "def enable_function(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode: bool = None,",
      "file": "security/safe_function_manager.py",
      "line": 1846,
      "pattern": "enable_function",
      "content": "enable_sleep_mode: bool = None,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode is not None:",
      "file": "security/safe_function_manager.py",
      "line": 1855,
      "pattern": "enable_function",
      "content": "if enable_sleep_mode is not None:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode = enable_sleep_mode",
      "file": "security/safe_function_manager.py",
      "line": 1856,
      "pattern": "enable_function",
      "content": "self.enable_sleep_mode = enable_sleep_mode",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_mesh(self) -> bool:",
      "file": "security/safe_function_manager.py",
      "line": 3217,
      "pattern": "enable_function",
      "content": "def enable_service_mesh(self) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_compression = config.get(\"enable_compression\", True) if config else True",
      "file": "security/smart_data_manager.py",
      "line": 60,
      "pattern": "enable_function",
      "content": "self.enable_compression = config.get(\"enable_compression\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_archiving = config.get(\"enable_archiving\", True) if config else True",
      "file": "security/smart_data_manager.py",
      "line": 61,
      "pattern": "enable_function",
      "content": "self.enable_archiving = config.get(\"enable_archiving\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_archiving:",
      "file": "security/smart_data_manager.py",
      "line": 298,
      "pattern": "enable_function",
      "content": "if not self.enable_archiving:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_compression\": self.enable_compression,",
      "file": "security/smart_data_manager.py",
      "line": 404,
      "pattern": "enable_function",
      "content": "\"enable_compression\": self.enable_compression,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_archiving\": self.enable_archiving,",
      "file": "security/smart_data_manager.py",
      "line": 405,
      "pattern": "enable_function",
      "content": "\"enable_archiving\": self.enable_archiving,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management = config.get(",
      "file": "security/safe_function_manager_fixed.py",
      "line": 94,
      "pattern": "enable_function",
      "content": "self.enable_auto_management = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management\", True) if config else True",
      "file": "security/safe_function_manager_fixed.py",
      "line": 95,
      "pattern": "enable_function",
      "content": "\"enable_auto_management\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management:",
      "file": "security/safe_function_manager_fixed.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "if self.enable_auto_management:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function.function_id)",
      "file": "security/safe_function_manager_fixed.py",
      "line": 252,
      "pattern": "enable_function",
      "content": "self.enable_function(function.function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "security/safe_function_manager_fixed.py",
      "line": 307,
      "pattern": "enable_function",
      "content": "self.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(self, function_id: str) -> bool:",
      "file": "security/safe_function_manager_fixed.py",
      "line": 363,
      "pattern": "enable_function",
      "content": "def enable_function(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "file": "security/security_integration.py",
      "line": 39,
      "pattern": "enable_function",
      "content": "self.enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers:",
      "file": "security/security_integration.py",
      "line": 56,
      "pattern": "enable_function",
      "content": "if self.enable_wrappers:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers else \"direct\"),",
      "file": "security/security_integration.py",
      "line": 148,
      "pattern": "enable_function",
      "content": "\"integration_method\": (\"secure_wrapper\" if self.enable_wrappers else \"direct\"),",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers\": self.enable_wrappers,",
      "file": "security/security_integration.py",
      "line": 342,
      "pattern": "enable_function",
      "content": "\"enable_wrappers\": self.enable_wrappers,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_debug=True)",
      "file": "security/test_enhanced_features.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "result = system.set_logging_config(\"DEBUG\", enable_debug=True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection = config.get(\"enable_real_time_protection\", True) if config else True",
      "file": "security/security_layer.py",
      "line": 85,
      "pattern": "enable_function",
      "content": "self.enable_real_time_protection = config.get(\"enable_real_time_protection\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection:",
      "file": "security/security_layer.py",
      "line": 128,
      "pattern": "enable_function",
      "content": "if self.enable_real_time_protection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection,",
      "file": "security/security_layer.py",
      "line": 478,
      "pattern": "enable_function",
      "content": "\"real_time_protection\": self.enable_real_time_protection,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "file": "security/simple_security_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "self.enable_wrappers = config.get(\"enable_wrappers\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers:",
      "file": "security/simple_security_integration.py",
      "line": 59,
      "pattern": "enable_function",
      "content": "if self.enable_wrappers:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_protection\": False})",
      "file": "security/simple_security_integration.py",
      "line": 79,
      "pattern": "enable_function",
      "content": "self.security_layer = SecurityLayer(config={\"enable_real_time_protection\": False})",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit\": False})",
      "file": "security/simple_security_integration.py",
      "line": 80,
      "pattern": "enable_function",
      "content": "self.audit_system = AuditSystem(config={\"enable_real_time_audit\": False})",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist\": False})",
      "file": "security/simple_security_integration.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "self.access_control = AccessControl(config={\"enable_ip_whitelist\": False})",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_wrappers\": self.enable_wrappers,",
      "file": "security/simple_security_integration.py",
      "line": 257,
      "pattern": "enable_function",
      "content": "\"enable_wrappers\": self.enable_wrappers,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function_with_persistence(self, function_id: str) -> bool:",
      "file": "security/persistence_integrator.py",
      "line": 198,
      "pattern": "enable_function",
      "content": "def enable_function_with_persistence(self, function_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "security/persistence_integrator.py",
      "line": 201,
      "pattern": "enable_function",
      "content": "success = self.sfm.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa (bool): Включение многофакторной аутентификации",
      "file": "security/access_control.py",
      "line": 193,
      "pattern": "enable_function",
      "content": "enable_mfa (bool): Включение многофакторной аутентификации",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist (bool): Включение белого списка IP",
      "file": "security/access_control.py",
      "line": 194,
      "pattern": "enable_function",
      "content": "enable_ip_whitelist (bool): Включение белого списка IP",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist = (",
      "file": "security/access_control.py",
      "line": 228,
      "pattern": "enable_function",
      "content": "self.enable_ip_whitelist = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist\", True) if config else True",
      "file": "security/access_control.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "config.get(\"enable_ip_whitelist\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa = config.get(\"enable_mfa\", False) if config else False",
      "file": "security/access_control.py",
      "line": 231,
      "pattern": "enable_function",
      "content": "self.enable_mfa = config.get(\"enable_mfa\", False) if config else False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist:",
      "file": "security/access_control.py",
      "line": 444,
      "pattern": "enable_function",
      "content": "if ip_address and self.enable_ip_whitelist:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ip_whitelist\": self.enable_ip_whitelist,",
      "file": "security/access_control.py",
      "line": 886,
      "pattern": "enable_function",
      "content": "\"enable_ip_whitelist\": self.enable_ip_whitelist,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_mfa\": self.enable_mfa,",
      "file": "security/access_control.py",
      "line": 887,
      "pattern": "enable_function",
      "content": "\"enable_mfa\": self.enable_mfa,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit = config.get(\"enable_real_time_audit\", True) if config else True",
      "file": "security/audit_system.py",
      "line": 83,
      "pattern": "enable_function",
      "content": "self.enable_real_time_audit = config.get(\"enable_real_time_audit\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit:",
      "file": "security/audit_system.py",
      "line": 121,
      "pattern": "enable_function",
      "content": "if self.enable_real_time_audit:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_real_time_audit,",
      "file": "security/audit_system.py",
      "line": 513,
      "pattern": "enable_function",
      "content": "\"real_time_audit\": self.enable_real_time_audit,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption = (",
      "file": "security/data_protection_manager.py",
      "line": 101,
      "pattern": "enable_function",
      "content": "self.enable_encryption = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption\", True) if config else True",
      "file": "security/data_protection_manager.py",
      "line": 102,
      "pattern": "enable_function",
      "content": "config.get(\"enable_encryption\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption:",
      "file": "security/data_protection_manager.py",
      "line": 180,
      "pattern": "enable_function",
      "content": "if not self.enable_encryption:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption",
      "file": "security/data_protection_manager.py",
      "line": 239,
      "pattern": "enable_function",
      "content": "if self.enable_encryption",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption,",
      "file": "security/data_protection_manager.py",
      "line": 251,
      "pattern": "enable_function",
      "content": "is_encrypted=self.enable_encryption,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management = config\\.get\\(\\'enable_auto_management\\', True\\) \"",
      "file": "security/safe_function_manager_patch.py",
      "line": 19,
      "pattern": "enable_function",
      "content": "r\"(self\\.enable_auto_management = config\\.get\\(\\'enable_auto_management\\', True\\) \"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence = config.get(\"enable_persistence\", True) '",
      "file": "security/safe_function_manager_patch.py",
      "line": 24,
      "pattern": "enable_function",
      "content": "r'self.enable_persistence = config.get(\"enable_persistence\", True) '",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence:\\n            self.load_functions()\",",
      "file": "security/safe_function_manager_patch.py",
      "line": 33,
      "pattern": "enable_function",
      "content": "r\"if self.enable_persistence:\\n            self.load_functions()\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function\\(function_id\\))\",",
      "file": "security/safe_function_manager_patch.py",
      "line": 39,
      "pattern": "enable_function",
      "content": "r\"(\\s+# Автоматическое включение если требуется\\s+if auto_enable:\\s+self\\.enable_function\\(function_id\\))\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence:",
      "file": "security/safe_function_manager_patch.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if self.enable_persistence:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function\\(function\\.function_id\\))\",",
      "file": "security/safe_function_manager_patch.py",
      "line": 56,
      "pattern": "enable_function",
      "content": "r\"self\\.enable_function\\(function\\.function_id\\))\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_threshold\": 0.8,",
      "file": "security/microservices/simple_sleep.py",
      "line": 39,
      "pattern": "wake_function",
      "content": "\"wake_up_threshold\": 0.8,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_enabled\": True,",
      "file": "security/microservices/simple_sleep.py",
      "line": 79,
      "pattern": "wake_function",
      "content": "\"auto_wake_up_enabled\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_triggers\": [",
      "file": "security/microservices/simple_sleep.py",
      "line": 80,
      "pattern": "wake_function",
      "content": "\"wake_up_triggers\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config():",
      "file": "security/microservices/simple_sleep.py",
      "line": 98,
      "pattern": "wake_function",
      "content": "def create_wake_up_config():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config = {",
      "file": "security/microservices/simple_sleep.py",
      "line": 102,
      "pattern": "wake_function",
      "content": "wake_up_config = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_threshold\": 0.5,",
      "file": "security/microservices/simple_sleep.py",
      "line": 112,
      "pattern": "wake_function",
      "content": "\"wake_up_threshold\": 0.5,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time(),",
      "file": "security/microservices/simple_sleep.py",
      "line": 116,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time(),",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config",
      "file": "security/microservices/simple_sleep.py",
      "line": 164,
      "pattern": "wake_function",
      "content": "return wake_up_config",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_script = \"\"\"#!/usr/bin/env python3",
      "file": "security/microservices/simple_sleep.py",
      "line": 215,
      "pattern": "wake_function",
      "content": "wake_up_script = \"\"\"#!/usr/bin/env python3",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems():",
      "file": "security/microservices/simple_sleep.py",
      "line": 221,
      "pattern": "wake_function",
      "content": "def wake_up_systems():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time()",
      "file": "security/microservices/simple_sleep.py",
      "line": 230,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "file": "security/microservices/simple_sleep.py",
      "line": 247,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
      "file": "security/microservices/simple_sleep.py",
      "line": 248,
      "pattern": "wake_function",
      "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems()",
      "file": "security/microservices/simple_sleep.py",
      "line": 254,
      "pattern": "wake_function",
      "content": "wake_up_systems()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\", \"w\", encoding=\"utf-8\") as f:",
      "file": "security/microservices/simple_sleep.py",
      "line": 257,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_systems.py\", \"w\", encoding=\"utf-8\") as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_script)",
      "file": "security/microservices/simple_sleep.py",
      "line": 258,
      "pattern": "wake_function",
      "content": "f.write(wake_up_script)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "security/microservices/simple_sleep.py",
      "line": 260,
      "pattern": "wake_function",
      "content": "logger.info(\"🔧 Скрипт пробуждения создан: wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\"",
      "file": "security/microservices/simple_sleep.py",
      "line": 267,
      "pattern": "wake_function",
      "content": "\"🔧 Для ручного пробуждения используйте: python3 wake_up_systems.py\"",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py - скрипт пробуждения\")",
      "file": "security/microservices/simple_sleep.py",
      "line": 308,
      "pattern": "wake_function",
      "content": "print(\"   - wake_up_systems.py - скрипт пробуждения\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_rate_limiter\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 104,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiter\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 106,
      "pattern": "enable_function",
      "content": "\"enable_user_interface_manager\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_monitoring\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 110,
      "pattern": "enable_function",
      "content": "\"enable_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_logging\": True,",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 111,
      "pattern": "enable_function",
      "content": "\"enable_logging\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_monitoring\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 176,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_monitoring\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiter\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 224,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_rate_limiter\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_circuit_breaker\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\"]:",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 236,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_user_interface_manager\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiter\": self.config[\"enable_rate_limiter\"],",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 591,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiter\": self.config[\"enable_rate_limiter\"],",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": self.config[",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 592,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": self.config[",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 593,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\": self.config[",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 595,
      "pattern": "enable_function",
      "content": "\"enable_user_interface_manager\": self.config[",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_interface_manager\"",
      "file": "security/microservices/safe_function_manager_integration.py",
      "line": 596,
      "pattern": "enable_function",
      "content": "\"enable_user_interface_manager\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\": True,",
      "file": "security/microservices/user_interface_manager.py",
      "line": 617,
      "pattern": "enable_function",
      "content": "\"enable_caching\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\"]:",
      "file": "security/microservices/user_interface_manager.py",
      "line": 1085,
      "pattern": "enable_function",
      "content": "if self.redis_client and self.config[\"enable_caching\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching\", False),",
      "file": "security/microservices/user_interface_manager.py",
      "line": 1769,
      "pattern": "enable_function",
      "content": "\"caching_enabled\": self.config.get(\"enable_caching\", False),",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/microservices/rate_limiter.py",
      "line": 414,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"]:",
      "file": "security/microservices/rate_limiter.py",
      "line": 599,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_circuit_breaker\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_compression\": True,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 127,
      "pattern": "enable_function",
      "content": "\"enable_compression\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption\": False,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 128,
      "pattern": "enable_function",
      "content": "\"enable_encryption\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence\": True,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 129,
      "pattern": "enable_function",
      "content": "\"enable_persistence\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering\": False,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 130,
      "pattern": "enable_function",
      "content": "\"enable_clustering\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_monitoring\": True,",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 131,
      "pattern": "enable_function",
      "content": "\"enable_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence\"]:",
      "file": "security/microservices/redis_cache_manager.py",
      "line": 179,
      "pattern": "enable_function",
      "content": "if self.cache_config[\"enable_persistence\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_discovery\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 191,
      "pattern": "enable_function",
      "content": "\"enable_service_discovery\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 192,
      "pattern": "enable_function",
      "content": "\"enable_health_checks\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 193,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 194,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaker\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 195,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_tracing\": True,",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 196,
      "pattern": "enable_function",
      "content": "\"enable_tracing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_service_discovery\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 247,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_service_discovery\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 351,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_load_balancing\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaker\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 355,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_circuit_breaker\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 463,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_health_checks\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\"]:",
      "file": "security/microservices/service_mesh_manager.py",
      "line": 467,
      "pattern": "enable_function",
      "content": "if self.mesh_config[\"enable_metrics\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_threshold\": 0.8,  # Порог для пробуждения",
      "file": "security/microservices/put_to_sleep_enhanced.py",
      "line": 49,
      "pattern": "wake_function",
      "content": "\"wake_up_threshold\": 0.8,  # Порог для пробуждения",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py\"",
      "file": "security/microservices/put_to_sleep_enhanced.py",
      "line": 136,
      "pattern": "wake_function",
      "content": "\"🔧 Для ручного пробуждения используйте: python3 wake_up_systems.py\"",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_ml_analysis: bool = True",
      "file": "security/microservices/emergency_base_models.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "enable_ml_analysis: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_risk_analysis: bool = True",
      "file": "security/microservices/emergency_base_models.py",
      "line": 115,
      "pattern": "enable_function",
      "content": "enable_risk_analysis: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems():",
      "file": "security/microservices/wake_up_systems.py",
      "line": 11,
      "pattern": "wake_function",
      "content": "def wake_up_systems():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config = {",
      "file": "security/microservices/wake_up_systems.py",
      "line": 15,
      "pattern": "wake_function",
      "content": "wake_up_config = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": time.time()",
      "file": "security/microservices/wake_up_systems.py",
      "line": 20,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": time.time()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "file": "security/microservices/wake_up_systems.py",
      "line": 37,
      "pattern": "wake_function",
      "content": "with open(\"wake_up_config.json\", 'w', encoding='utf-8') as f:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_config, f, indent=2, ensure_ascii=False)",
      "file": "security/microservices/wake_up_systems.py",
      "line": 38,
      "pattern": "wake_function",
      "content": "json.dump(wake_up_config, f, indent=2, ensure_ascii=False)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems()",
      "file": "security/microservices/wake_up_systems.py",
      "line": 44,
      "pattern": "wake_function",
      "content": "wake_up_systems()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results = {}",
      "file": "security/bots/integration_test_suite.py",
      "line": 565,
      "pattern": "wake_function",
      "content": "wake_up_results = {}",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results[name] = {",
      "file": "security/bots/integration_test_suite.py",
      "line": 571,
      "pattern": "wake_function",
      "content": "wake_up_results[name] = {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results.values()",
      "file": "security/bots/integration_test_suite.py",
      "line": 584,
      "pattern": "wake_function",
      "content": "result[\"success\"] for result in wake_up_results.values()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_results,",
      "file": "security/bots/integration_test_suite.py",
      "line": 586,
      "pattern": "wake_function",
      "content": "\"bot_results\": wake_up_results,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_rate_limiting\": True,",
      "file": "security/bots/network_security_bot.py",
      "line": 176,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiting\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_geofencing\": True,",
      "file": "security/bots/emergency_response_bot.py",
      "line": 281,
      "pattern": "enable_function",
      "content": "\"enable_geofencing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_voice_recognition\": True,",
      "file": "security/bots/emergency_response_bot.py",
      "line": 282,
      "pattern": "enable_function",
      "content": "\"enable_voice_recognition\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console=self.config.logging.enable_console,",
      "file": "security/bots/parental_control_bot.py",
      "line": 656,
      "pattern": "enable_function",
      "content": "enable_console=self.config.logging.enable_console,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file=self.config.logging.enable_file,",
      "file": "security/bots/parental_control_bot.py",
      "line": 657,
      "pattern": "enable_function",
      "content": "enable_file=self.config.logging.enable_file,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics=self.config.logging.enable_metrics,",
      "file": "security/bots/parental_control_bot.py",
      "line": 658,
      "pattern": "enable_function",
      "content": "enable_metrics=self.config.logging.enable_metrics,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall\": True,",
      "file": "security/bots/device_security_bot.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "\"enable_firewall\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_compression\": True,",
      "file": "security/bots/browser_security_bot.py",
      "line": 151,
      "pattern": "enable_function",
      "content": "\"enable_compression\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console: bool = True",
      "file": "security/bots/components/config_manager.py",
      "line": 115,
      "pattern": "enable_function",
      "content": "enable_console: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file: bool = True",
      "file": "security/bots/components/config_manager.py",
      "line": 116,
      "pattern": "enable_function",
      "content": "enable_file: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics: bool = True",
      "file": "security/bots/components/config_manager.py",
      "line": 117,
      "pattern": "enable_function",
      "content": "enable_metrics: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\": self.logging.enable_console,",
      "file": "security/bots/components/config_manager.py",
      "line": 225,
      "pattern": "enable_function",
      "content": "\"enable_console\": self.logging.enable_console,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file\": self.logging.enable_file,",
      "file": "security/bots/components/config_manager.py",
      "line": 226,
      "pattern": "enable_function",
      "content": "\"enable_file\": self.logging.enable_file,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": self.logging.enable_metrics,",
      "file": "security/bots/components/config_manager.py",
      "line": 227,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": self.logging.enable_metrics,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\": {\"type\": \"boolean\"},",
      "file": "security/bots/components/config_manager.py",
      "line": 612,
      "pattern": "enable_function",
      "content": "\"enable_console\": {\"type\": \"boolean\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file\": {\"type\": \"boolean\"},",
      "file": "security/bots/components/config_manager.py",
      "line": 613,
      "pattern": "enable_function",
      "content": "\"enable_file\": {\"type\": \"boolean\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\": {\"type\": \"boolean\"},",
      "file": "security/bots/components/config_manager.py",
      "line": 614,
      "pattern": "enable_function",
      "content": "\"enable_metrics\": {\"type\": \"boolean\"},",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console = logging_config.get(",
      "file": "security/bots/components/config_manager.py",
      "line": 816,
      "pattern": "enable_function",
      "content": "config.logging.enable_console = logging_config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", config.logging.enable_console",
      "file": "security/bots/components/config_manager.py",
      "line": 817,
      "pattern": "enable_function",
      "content": "\"enable_console\", config.logging.enable_console",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = logging_config.get(",
      "file": "security/bots/components/config_manager.py",
      "line": 819,
      "pattern": "enable_function",
      "content": "config.logging.enable_file = logging_config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file\", config.logging.enable_file",
      "file": "security/bots/components/config_manager.py",
      "line": 820,
      "pattern": "enable_function",
      "content": "\"enable_file\", config.logging.enable_file",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics = logging_config.get(",
      "file": "security/bots/components/config_manager.py",
      "line": 822,
      "pattern": "enable_function",
      "content": "config.logging.enable_metrics = logging_config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics\", config.logging.enable_metrics",
      "file": "security/bots/components/config_manager.py",
      "line": 823,
      "pattern": "enable_function",
      "content": "\"enable_metrics\", config.logging.enable_metrics",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console: bool = True,",
      "file": "security/bots/components/advanced_logger.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "enable_console: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file: bool = True,",
      "file": "security/bots/components/advanced_logger.py",
      "line": 92,
      "pattern": "enable_function",
      "content": "enable_file: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics: bool = True,",
      "file": "security/bots/components/advanced_logger.py",
      "line": 93,
      "pattern": "enable_function",
      "content": "enable_metrics: bool = True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console = enable_console",
      "file": "security/bots/components/advanced_logger.py",
      "line": 101,
      "pattern": "enable_function",
      "content": "self.enable_console = enable_console",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = enable_file",
      "file": "security/bots/components/advanced_logger.py",
      "line": 102,
      "pattern": "enable_function",
      "content": "self.enable_file = enable_file",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_metrics = enable_metrics",
      "file": "security/bots/components/advanced_logger.py",
      "line": 103,
      "pattern": "enable_function",
      "content": "self.enable_metrics = enable_metrics",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "security/bots/components/advanced_logger.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file and self.log_file:",
      "file": "security/bots/components/advanced_logger.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "if self.enable_file and self.log_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 125,
      "pattern": "enable_function",
      "content": "enable_firewall: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 126,
      "pattern": "enable_function",
      "content": "enable_leak_protection: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_blocking: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 127,
      "pattern": "enable_function",
      "content": "enable_malware_blocking: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ad_blocking: bool = False",
      "file": "security/vpn/vpn_configuration.py",
      "line": 128,
      "pattern": "enable_function",
      "content": "enable_ad_blocking: bool = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_tracker_blocking: bool = True",
      "file": "security/vpn/vpn_configuration.py",
      "line": 129,
      "pattern": "enable_function",
      "content": "enable_tracker_blocking: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall\": self.enable_firewall,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 138,
      "pattern": "enable_function",
      "content": "\"enable_firewall\": self.enable_firewall,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection\": self.enable_leak_protection,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 139,
      "pattern": "enable_function",
      "content": "\"enable_leak_protection\": self.enable_leak_protection,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_blocking\": self.enable_malware_blocking,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 140,
      "pattern": "enable_function",
      "content": "\"enable_malware_blocking\": self.enable_malware_blocking,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ad_blocking\": self.enable_ad_blocking,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 141,
      "pattern": "enable_function",
      "content": "\"enable_ad_blocking\": self.enable_ad_blocking,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_tracker_blocking\": self.enable_tracker_blocking,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 142,
      "pattern": "enable_function",
      "content": "\"enable_tracker_blocking\": self.enable_tracker_blocking,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ipv6\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 202,
      "pattern": "enable_function",
      "content": "\"enable_ipv6\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_killswitch\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 203,
      "pattern": "enable_function",
      "content": "\"enable_killswitch\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 208,
      "pattern": "enable_function",
      "content": "\"enable_firewall\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 209,
      "pattern": "enable_function",
      "content": "\"enable_leak_protection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_blocking\": True,",
      "file": "security/vpn/vpn_configuration.py",
      "line": 210,
      "pattern": "enable_function",
      "content": "\"enable_malware_blocking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_firewall:",
      "file": "security/vpn/vpn_configuration.py",
      "line": 432,
      "pattern": "enable_function",
      "content": "if not self.security_config.enable_firewall:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_leak_protection:",
      "file": "security/vpn/vpn_configuration.py",
      "line": 435,
      "pattern": "enable_function",
      "content": "if not self.security_config.enable_leak_protection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_split_tunneling()",
      "file": "security/vpn/test_performance_features.py",
      "line": 174,
      "pattern": "enable_function",
      "content": "split_tunnel.enable_split_tunneling()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_component(self, component_name: str) -> bool:",
      "file": "security/vpn/sleep_mode_all_components.py",
      "line": 217,
      "pattern": "wake_function",
      "content": "def wake_up_component(self, component_name: str) -> bool:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_split_tunneling(self):",
      "file": "security/vpn/features/split_tunneling.py",
      "line": 455,
      "pattern": "enable_function",
      "content": "def enable_split_tunneling(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_split_tunneling()",
      "file": "security/vpn/features/split_tunneling.py",
      "line": 608,
      "pattern": "enable_function",
      "content": "split_tunnel.enable_split_tunneling()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console: bool = Field(default=True)",
      "file": "security/vpn/models/vpn_models.py",
      "line": 474,
      "pattern": "enable_function",
      "content": "enable_console: bool = Field(default=True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_syslog: bool = Field(default=False)",
      "file": "security/vpn/models/vpn_models.py",
      "line": 475,
      "pattern": "enable_function",
      "content": "enable_syslog: bool = Field(default=False)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_optimization\": True,",
      "file": "security/reactive/performance_optimizer.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "\"enable_auto_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async_optimization\": True,",
      "file": "security/reactive/performance_optimizer.py",
      "line": 115,
      "pattern": "enable_function",
      "content": "\"enable_async_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_optimization\"]:",
      "file": "security/reactive/performance_optimizer.py",
      "line": 156,
      "pattern": "enable_function",
      "content": "if self.optimization_config[\"enable_auto_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_affinity()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 466,
      "pattern": "enable_function",
      "content": "self._enable_cpu_affinity()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 494,
      "pattern": "enable_function",
      "content": "self._enable_memory_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 522,
      "pattern": "enable_function",
      "content": "self._enable_disk_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 545,
      "pattern": "enable_function",
      "content": "self._enable_network_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_caching()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 556,
      "pattern": "enable_function",
      "content": "self._enable_network_caching()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_database_caching()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 578,
      "pattern": "enable_function",
      "content": "self._enable_database_caching()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cache_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 606,
      "pattern": "enable_function",
      "content": "self._enable_cache_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_query_parallelization()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 634,
      "pattern": "enable_function",
      "content": "self._enable_query_parallelization()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_reuse()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 657,
      "pattern": "enable_function",
      "content": "self._enable_connection_reuse()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_compression()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 662,
      "pattern": "enable_function",
      "content": "self._enable_connection_compression()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_pooling()",
      "file": "security/reactive/performance_optimizer.py",
      "line": 668,
      "pattern": "enable_function",
      "content": "self._enable_connection_pooling()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_affinity(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 690,
      "pattern": "enable_function",
      "content": "def _enable_cpu_affinity(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 710,
      "pattern": "enable_function",
      "content": "def _enable_memory_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 730,
      "pattern": "enable_function",
      "content": "def _enable_disk_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 745,
      "pattern": "enable_function",
      "content": "def _enable_network_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_caching(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 755,
      "pattern": "enable_function",
      "content": "def _enable_network_caching(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_database_caching(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 770,
      "pattern": "enable_function",
      "content": "def _enable_database_caching(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cache_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 790,
      "pattern": "enable_function",
      "content": "def _enable_cache_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_query_parallelization(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 810,
      "pattern": "enable_function",
      "content": "def _enable_query_parallelization(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_reuse(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 820,
      "pattern": "enable_function",
      "content": "def _enable_connection_reuse(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_compression(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 825,
      "pattern": "enable_function",
      "content": "def _enable_connection_compression(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_connection_pooling(self):",
      "file": "security/reactive/performance_optimizer.py",
      "line": 830,
      "pattern": "enable_function",
      "content": "def _enable_connection_pooling(self):",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml: bool = True",
      "file": "security/managers/analytics_manager.py",
      "line": 79,
      "pattern": "enable_function",
      "content": "enable_ml: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering: bool = True",
      "file": "security/managers/analytics_manager.py",
      "line": 80,
      "pattern": "enable_function",
      "content": "enable_clustering: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prediction: bool = True",
      "file": "security/managers/analytics_manager.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "enable_prediction: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml:",
      "file": "security/managers/analytics_manager.py",
      "line": 320,
      "pattern": "enable_function",
      "content": "if self.config.enable_ml:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering:",
      "file": "security/managers/analytics_manager.py",
      "line": 331,
      "pattern": "enable_function",
      "content": "if self.config.enable_clustering:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml=True,",
      "file": "security/managers/analytics_manager.py",
      "line": 523,
      "pattern": "enable_function",
      "content": "enable_ml=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering=True,",
      "file": "security/managers/analytics_manager.py",
      "line": 524,
      "pattern": "enable_function",
      "content": "enable_clustering=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prediction=True,",
      "file": "security/managers/analytics_manager.py",
      "line": 525,
      "pattern": "enable_function",
      "content": "enable_prediction=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_on_demand\": True,",
      "file": "security/managers/integrate_all_bots_to_sleep.py",
      "line": 146,
      "pattern": "wake_function",
      "content": "\"wake_up_on_demand\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_on_demand\": True,",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 52,
      "pattern": "wake_function",
      "content": "\"wake_up_on_demand\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_bot(self, bot_name: str) -> bool:",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 204,
      "pattern": "wake_function",
      "content": "async def wake_up_bot(self, bot_name: str) -> bool:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\"] = datetime.utcnow()",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 232,
      "pattern": "wake_function",
      "content": "bot_info[\"wake_up_time\"] = datetime.utcnow()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\": bot_info[\"wake_up_time\"].isoformat(),",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 236,
      "pattern": "wake_function",
      "content": "\"wake_up_time\": bot_info[\"wake_up_time\"].isoformat(),",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time\"] - bot_info[\"sleep_time\"]",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 238,
      "pattern": "wake_function",
      "content": "bot_info[\"wake_up_time\"] - bot_info[\"sleep_time\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_all_bots(self) -> Dict[str, bool]:",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 328,
      "pattern": "wake_function",
      "content": "async def wake_up_all_bots(self) -> Dict[str, bool]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_bot(bot_name)",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 339,
      "pattern": "wake_function",
      "content": "success = await self.wake_up_bot(bot_name)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_all_bots()",
      "file": "security/managers/sleep_mode_manager.py",
      "line": 748,
      "pattern": "wake_function",
      "content": "wake_results = await sleep_manager.wake_up_all_bots()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_ml_analysis = self.config.get(\"enable_ml_analysis\", True)",
      "file": "security/managers/alert_manager.py",
      "line": 182,
      "pattern": "enable_function",
      "content": "self.enable_ml_analysis = self.config.get(\"enable_ml_analysis\", True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiting = self.config.get(",
      "file": "security/managers/alert_manager.py",
      "line": 183,
      "pattern": "enable_function",
      "content": "self.enable_rate_limiting = self.config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_rate_limiting\", True",
      "file": "security/managers/alert_manager.py",
      "line": 184,
      "pattern": "enable_function",
      "content": "\"enable_rate_limiting\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_on_demand\": True,",
      "file": "security/managers/check_and_sleep_bots.py",
      "line": 106,
      "pattern": "wake_function",
      "content": "\"wake_up_on_demand\": True,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_internal: bool = True",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 41,
      "pattern": "enable_function",
      "content": "enable_internal: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clamav: bool = True",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_clamav: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_scanner: bool = True",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "enable_malware_scanner: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_internal:",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "if self.config.enable_internal:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clamav:",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 86,
      "pattern": "enable_function",
      "content": "if self.config.enable_clamav:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_malware_scanner:",
      "file": "security/antivirus/antivirus_security_system.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "if self.config.enable_malware_scanner:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function('family_registration_system')\")",
      "file": "security/family/check_family_system_status.py",
      "line": 104,
      "pattern": "enable_function",
      "content": "print(\"   sfm.enable_function('family_registration_system')\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function('family_notification_system')\")",
      "file": "security/family/check_family_system_status.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "print(\"   sfm.enable_function('family_notification_system')\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = config.get(",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 191,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging\", True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 192,
      "pattern": "enable_function",
      "content": "\"enable_audit_logging\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = config.get(",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 194,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis\", True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 195,
      "pattern": "enable_function",
      "content": "\"enable_ai_analysis\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 200,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = True",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 201,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis:",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 216,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis and self.is_ml_initialized:",
      "file": "security/family/family_profile_manager_enhanced_fixed.py",
      "line": 485,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis and self.is_ml_initialized:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = config.get(",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 340,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging\", True",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 341,
      "pattern": "enable_function",
      "content": "\"enable_audit_logging\", True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = config.get(\"enable_ai_analysis\", True)",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 343,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = config.get(\"enable_ai_analysis\", True)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audit_logging = True",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 347,
      "pattern": "enable_function",
      "content": "self.enable_audit_logging = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis = True",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 348,
      "pattern": "enable_function",
      "content": "self.enable_ai_analysis = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis:",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 361,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_analysis and self.is_ml_initialized:",
      "file": "security/family/family_profile_manager_enhanced.py",
      "line": 653,
      "pattern": "enable_function",
      "content": "if self.enable_ai_analysis and self.is_ml_initialized:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching = True",
      "file": "security/preliminary/policy_engine.py",
      "line": 172,
      "pattern": "enable_function",
      "content": "self.enable_caching = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_caching,",
      "file": "security/preliminary/policy_engine.py",
      "line": 936,
      "pattern": "enable_function",
      "content": "\"cache_enabled\": self.enable_caching,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\": True,",
      "file": "security/orchestration/kubernetes_orchestrator.py",
      "line": 216,
      "pattern": "enable_function",
      "content": "\"enable_auto_scaling\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_health_checks\": True,",
      "file": "security/orchestration/kubernetes_orchestrator.py",
      "line": 217,
      "pattern": "enable_function",
      "content": "\"enable_health_checks\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_resource_monitoring\": True,",
      "file": "security/orchestration/kubernetes_orchestrator.py",
      "line": 218,
      "pattern": "enable_function",
      "content": "\"enable_resource_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async = (",
      "file": "security/active/malware_protection.py",
      "line": 177,
      "pattern": "enable_function",
      "content": "self.enable_async = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async\", True) if config else True",
      "file": "security/active/malware_protection.py",
      "line": 178,
      "pattern": "enable_function",
      "content": "config.get(\"enable_async\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async\" in new_config:",
      "file": "security/active/malware_protection.py",
      "line": 1319,
      "pattern": "enable_function",
      "content": "if \"enable_async\" in new_config:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_async = new_config[\"enable_async\"]",
      "file": "security/active/malware_protection.py",
      "line": 1320,
      "pattern": "enable_function",
      "content": "self.enable_async = new_config[\"enable_async\"]",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_notifications: bool = True",
      "file": "security/active/intrusion_prevention.py",
      "line": 73,
      "pattern": "enable_function",
      "content": "enable_notifications: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_api_integration: bool = True",
      "file": "security/active/intrusion_prevention.py",
      "line": 78,
      "pattern": "enable_function",
      "content": "enable_api_integration: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_webhook_notifications: bool = False",
      "file": "security/active/intrusion_prevention.py",
      "line": 80,
      "pattern": "enable_function",
      "content": "enable_webhook_notifications: bool = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_notifications:",
      "file": "security/active/intrusion_prevention.py",
      "line": 4651,
      "pattern": "enable_function",
      "content": "if not config.enable_notifications:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_child_monitoring(self, user_id: str) -> bool:",
      "file": "security/active/network_monitoring.py",
      "line": 1624,
      "pattern": "enable_function",
      "content": "def enable_child_monitoring(self, user_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_elderly_monitoring(self, user_id: str) -> bool:",
      "file": "security/active/network_monitoring.py",
      "line": 1648,
      "pattern": "enable_function",
      "content": "def enable_elderly_monitoring(self, user_id: str) -> bool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_tracking = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 375,
      "pattern": "enable_function",
      "content": "self.enable_location_tracking = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 376,
      "pattern": "enable_function",
      "content": "self.enable_app_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 377,
      "pattern": "enable_function",
      "content": "self.enable_network_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "self.enable_permission_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 379,
      "pattern": "enable_function",
      "content": "self.enable_encryption_check = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection = True",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 380,
      "pattern": "enable_function",
      "content": "self.enable_root_jailbreak_detection = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1429,
      "pattern": "enable_function",
      "content": "if self.enable_encryption_check:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1433,
      "pattern": "enable_function",
      "content": "if self.enable_root_jailbreak_detection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1437,
      "pattern": "enable_function",
      "content": "if self.enable_app_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1441,
      "pattern": "enable_function",
      "content": "if self.enable_permission_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1445,
      "pattern": "enable_function",
      "content": "if self.enable_network_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_tracking:",
      "file": "security/ai_agents/mobile_security_agent.py",
      "line": 1963,
      "pattern": "enable_function",
      "content": "if not self.enable_location_tracking:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 381,
      "pattern": "enable_function",
      "content": "\"enable_cpu_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 382,
      "pattern": "enable_function",
      "content": "\"enable_memory_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 383,
      "pattern": "enable_function",
      "content": "\"enable_network_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 384,
      "pattern": "enable_function",
      "content": "\"enable_disk_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cache_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 385,
      "pattern": "enable_function",
      "content": "\"enable_cache_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ai_optimization\": True,",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 386,
      "pattern": "enable_function",
      "content": "\"enable_ai_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_cpu_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 833,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_cpu_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_memory_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 848,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_memory_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 863,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_network_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_disk_optimization\"]:",
      "file": "security/ai_agents/performance_optimization_agent.py",
      "line": 877,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_disk_optimization\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml_detection\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 375,
      "pattern": "enable_function",
      "content": "\"enable_ml_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_behavioral_analysis\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 376,
      "pattern": "enable_function",
      "content": "\"enable_behavioral_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_realtime_analysis\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 377,
      "pattern": "enable_function",
      "content": "\"enable_realtime_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_threat_intelligence\": True,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "\"enable_threat_intelligence\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response\": False,",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 379,
      "pattern": "enable_function",
      "content": "\"enable_auto_response\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml_detection\"]:",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 579,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_ml_detection\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_behavioral_analysis\"]:",
      "file": "security/ai_agents/threat_detection_agent.py",
      "line": 584,
      "pattern": "enable_function",
      "content": "if self.agent_config[\"enable_behavioral_analysis\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function\",",
      "file": "security/ai_agents/security_quality_analyzer.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "\"enable_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function\", \"disable_function\",",
      "file": "security/ai_agents/security_quality_analyzer_enhanced.py",
      "line": 51,
      "pattern": "enable_function",
      "content": "\"register_function\", \"unregister_function\", \"enable_function\", \"disable_function\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response = (",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 326,
      "pattern": "enable_function",
      "content": "self.enable_auto_response = (",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response\", True) if config else True",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 327,
      "pattern": "enable_function",
      "content": "config.get(\"enable_auto_response\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response:",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 469,
      "pattern": "enable_function",
      "content": "if self.enable_auto_response:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response = False",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1532,
      "pattern": "enable_function",
      "content": "self.enable_auto_response = False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response})\"",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1560,
      "pattern": "enable_function",
      "content": "f\"auto_response={self.enable_auto_response})\"",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_response,",
      "file": "security/ai_agents/incident_response_agent.py",
      "line": 1954,
      "pattern": "enable_function",
      "content": "\"auto_response_enabled\": self.enable_auto_response,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotion_detection\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 159,
      "pattern": "enable_function",
      "content": "\"enable_emotion_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_pronunciation_correction\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 160,
      "pattern": "enable_function",
      "content": "\"enable_pronunciation_correction\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_voice_optimization\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 161,
      "pattern": "enable_function",
      "content": "\"enable_voice_optimization\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_audio_compression\": True,",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 162,
      "pattern": "enable_function",
      "content": "\"enable_audio_compression\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_pronunciation_correction\"]:",
      "file": "security/ai_agents/voice_response_generator.py",
      "line": 448,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_pronunciation_correction\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_family_notifications: bool = True",
      "file": "security/ai_agents/anti_fraud_master_ai.py",
      "line": 138,
      "pattern": "enable_function",
      "content": "enable_family_notifications: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emergency_alerts: bool = True",
      "file": "security/ai_agents/anti_fraud_master_ai.py",
      "line": 139,
      "pattern": "enable_function",
      "content": "enable_emergency_alerts: bool = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_tracking = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 375,
      "pattern": "enable_function",
      "content": "self.enable_location_tracking = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 376,
      "pattern": "enable_function",
      "content": "self.enable_app_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 377,
      "pattern": "enable_function",
      "content": "self.enable_network_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "self.enable_permission_monitoring = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 379,
      "pattern": "enable_function",
      "content": "self.enable_encryption_check = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection = True",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 380,
      "pattern": "enable_function",
      "content": "self.enable_root_jailbreak_detection = True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_encryption_check:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1429,
      "pattern": "enable_function",
      "content": "if self.enable_encryption_check:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_root_jailbreak_detection:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1433,
      "pattern": "enable_function",
      "content": "if self.enable_root_jailbreak_detection:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_app_monitoring:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1437,
      "pattern": "enable_function",
      "content": "if self.enable_app_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_permission_monitoring:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1441,
      "pattern": "enable_function",
      "content": "if self.enable_permission_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1445,
      "pattern": "enable_function",
      "content": "if self.enable_network_monitoring:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_tracking:",
      "file": "security/ai_agents/mobile_security_agent_enhanced.py",
      "line": 1963,
      "pattern": "enable_function",
      "content": "if not self.enable_location_tracking:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_noise_reduction\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 160,
      "pattern": "enable_function",
      "content": "\"enable_noise_reduction\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_voice_activity_detection\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 161,
      "pattern": "enable_function",
      "content": "\"enable_voice_activity_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_speaker_diarization\": False,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 162,
      "pattern": "enable_function",
      "content": "\"enable_speaker_diarization\": False,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotion_recognition\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 163,
      "pattern": "enable_function",
      "content": "\"enable_emotion_recognition\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sentiment_analysis\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 164,
      "pattern": "enable_function",
      "content": "\"enable_sentiment_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_keyword_detection\": True,",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "\"enable_keyword_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_noise_reduction\"]:",
      "file": "security/ai_agents/speech_recognition_engine.py",
      "line": 396,
      "pattern": "enable_function",
      "content": "if self.config[\"enable_noise_reduction\"]:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_entity_recognition\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 153,
      "pattern": "enable_function",
      "content": "\"enable_entity_recognition\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sentiment_analysis\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 154,
      "pattern": "enable_function",
      "content": "\"enable_sentiment_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_intent_classification\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 155,
      "pattern": "enable_function",
      "content": "\"enable_intent_classification\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_context_analysis\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 156,
      "pattern": "enable_function",
      "content": "\"enable_context_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_keyword_extraction\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "\"enable_keyword_extraction\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotion_detection\": True,",
      "file": "security/ai_agents/natural_language_processor.py",
      "line": 158,
      "pattern": "enable_function",
      "content": "\"enable_emotion_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_time_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 252,
      "pattern": "enable_function",
      "content": "\"enable_time_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_location_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 253,
      "pattern": "enable_function",
      "content": "\"enable_location_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_user_behavior_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 254,
      "pattern": "enable_function",
      "content": "\"enable_user_behavior_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_device_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 255,
      "pattern": "enable_function",
      "content": "\"enable_device_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_pattern_matching\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 260,
      "pattern": "enable_function",
      "content": "\"enable_pattern_matching\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_keyword_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 261,
      "pattern": "enable_function",
      "content": "\"enable_keyword_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_context_analysis\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 262,
      "pattern": "enable_function",
      "content": "\"enable_context_analysis\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml_detection\": True,",
      "file": "security/ai_agents/voice_security_validator.py",
      "line": 263,
      "pattern": "enable_function",
      "content": "\"enable_ml_detection\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_enhanced_monitoring\",",
      "file": "security/ai_agents/emergency_response_system.py",
      "line": 529,
      "pattern": "enable_function",
      "content": "\"enable_enhanced_monitoring\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 67,
      "pattern": "enable_function",
      "content": "auto_enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': auto_enable_count,",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': auto_enable_count,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 147,
      "pattern": "enable_function",
      "content": "print(f\"🔄 Автоматически включаемые: {stats['auto_enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "file": "sfm_tools_backup/sfm_analyzer.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "writer.writerow(['Автоматически включаемые', stats['auto_enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_docker_monitoring\": True,",
      "file": "architecture/real_time_visualizer.py",
      "line": 81,
      "pattern": "enable_function",
      "content": "\"enable_docker_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_process_monitoring\": True,",
      "file": "architecture/real_time_visualizer.py",
      "line": 82,
      "pattern": "enable_function",
      "content": "\"enable_process_monitoring\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_network_monitoring\": True",
      "file": "architecture/real_time_visualizer.py",
      "line": 83,
      "pattern": "enable_function",
      "content": "\"enable_network_monitoring\": True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions\": sum(1 for f in functions.values()",
      "file": "scripts/final_sfm_registry_fix.py",
      "line": 332,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_basic_protection\",",
      "file": "scripts/simplify_interface.py",
      "line": 132,
      "pattern": "enable_function",
      "content": "\"action\": \"enable_basic_protection\",",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "file": "scripts/precise_count_analysis.py",
      "line": 133,
      "pattern": "enable_function",
      "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_all_critical(self) -> Dict[str, Any]:",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 59,
      "pattern": "wake_function",
      "content": "async def emergency_wake_up_all_critical(self) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_attempts\": 0,",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 66,
      "pattern": "wake_function",
      "content": "\"wake_up_attempts\": 0,",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_from_state_files(results)",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 77,
      "pattern": "wake_function",
      "content": "await self._wake_up_from_state_files(results)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function_by_name(func_name)",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 82,
      "pattern": "wake_function",
      "content": "result = await self._wake_up_function_by_name(func_name)",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_attempts\"] += 1",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 83,
      "pattern": "wake_function",
      "content": "results[\"wake_up_attempts\"] += 1",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 106,
      "pattern": "wake_function",
      "content": "report_path = f\"logs/emergency_wake_up_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_from_state_files(self, results: Dict[str, Any]) -> None:",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 146,
      "pattern": "wake_function",
      "content": "async def _wake_up_from_state_files(self, results: Dict[str, Any]) -> None:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function_by_name(self, function_name: str) -> Dict[str, Any]:",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 175,
      "pattern": "wake_function",
      "content": "async def _wake_up_function_by_name(self, function_name: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_system = EmergencyWakeUpSystem()",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 235,
      "pattern": "wake_function",
      "content": "wake_up_system = EmergencyWakeUpSystem()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_system.verify_critical_functions_status()",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 239,
      "pattern": "wake_function",
      "content": "status_before = await wake_up_system.verify_critical_functions_status()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_system.emergency_wake_up_all_critical()",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 245,
      "pattern": "wake_function",
      "content": "results = await wake_up_system.emergency_wake_up_all_critical()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_attempts']}\")",
      "file": "scripts/emergency_wake_up_critical_functions.py",
      "line": 254,
      "pattern": "wake_function",
      "content": "print(f\"   Попыток пробуждения: {results['wake_up_attempts']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "file": "scripts/corrected_integration_plan.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "'register_function', 'enable_function', 'disable_function', 'get_function_status', 'execute_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': sum(1 for f in functions.values() if isinstance(f, dict) and f.get('auto_enable', False))",
      "file": "scripts/sfm_fix_and_validate.py",
      "line": 197,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': sum(1 for f in functions.values() if isinstance(f, dict) and f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']}\")",
      "file": "scripts/sfm_fix_and_validate.py",
      "line": 208,
      "pattern": "enable_function",
      "content": "print(f\"  - Автовключение: {stats['auto_enable_functions']}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_time': '< 1 секунда',",
      "file": "scripts/integrate_load_balancer_to_safe_manager.py",
      "line": 44,
      "pattern": "wake_function",
      "content": "'wake_up_time': '< 1 секунда',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time']}\")",
      "file": "scripts/integrate_load_balancer_to_safe_manager.py",
      "line": 178,
      "pattern": "wake_function",
      "content": "print(f\"  ⏰ Время пробуждения: {function_config['wake_up_time']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"api_gateway\")",
      "file": "scripts/test_apigateway_integration.py",
      "line": 44,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"api_gateway\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_apigateway_integration.py",
      "line": 45,
      "pattern": "enable_function",
      "content": "print(f\"✅ APIGateway включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and init_success:",
      "file": "scripts/test_apigateway_integration.py",
      "line": 105,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and init_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"child_protection\")",
      "file": "scripts/test_child_protection_integration.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"child_protection\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/test_child_protection_integration.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management: {sfm.enable_auto_management}\")",
      "file": "scripts/test_sfm_fix.py",
      "line": 35,
      "pattern": "enable_function",
      "content": "print(f\"   • enable_auto_management: {sfm.enable_auto_management}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode: {sfm.enable_sleep_mode}\")",
      "file": "scripts/test_sfm_fix.py",
      "line": 36,
      "pattern": "enable_function",
      "content": "print(f\"   • enable_sleep_mode: {sfm.enable_sleep_mode}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_time'] = datetime.now().isoformat()",
      "file": "scripts/safe_sleep_mode_implementation.py",
      "line": 204,
      "pattern": "wake_function",
      "content": "self.sfm_registry['functions'][function_id]['wake_up_time'] = datetime.now().isoformat()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_functions\": sum(1 for f in merged_registry[\"functions\"].values() if f.get(\"auto_enable\", False))",
      "file": "scripts/registry_merge_manager.py",
      "line": 211,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in merged_registry[\"functions\"].values() if f.get(\"auto_enable\", False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result = sfm.enable_function('load_balancer')",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 40,
      "pattern": "enable_function",
      "content": "enable_result = sfm.enable_function('load_balancer')",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result}\")",
      "file": "scripts/test_loadbalancer_integration.py",
      "line": 41,
      "pattern": "enable_function",
      "content": "print(f\"✅ LoadBalancer включен! Результат: {enable_result}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_priority_queue=True) as pool:",
      "file": "scripts/optimize_system_performance.py",
      "line": 68,
      "pattern": "enable_function",
      "content": "with ThreadPoolManager(max_workers=8, enable_priority_queue=True) as pool:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_adaptive_balancing()",
      "file": "scripts/test_load_balancer_functionality.py",
      "line": 378,
      "pattern": "enable_function",
      "content": "await self.load_balancer.enable_adaptive_balancing()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_critical():",
      "file": "scripts/emergency_wake_up_all_critical.py",
      "line": 14,
      "pattern": "wake_function",
      "content": "def emergency_wake_up_critical():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_critical()",
      "file": "scripts/emergency_wake_up_all_critical.py",
      "line": 76,
      "pattern": "wake_function",
      "content": "emergency_wake_up_critical()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_systems.py', 'MICROSERVICE - Системы пробуждения'),",
      "file": "scripts/quick_flake8_report.py",
      "line": 117,
      "pattern": "wake_function",
      "content": "('security/microservices/wake_up_systems.py', 'MICROSERVICE - Системы пробуждения'),",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = self.sfm.enable_function(func_id)",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 222,
      "pattern": "enable_function",
      "content": "enable_success = self.sfm.enable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 223,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function', 'disable_function',",
      "file": "scripts/comprehensive_sfm_test.py",
      "line": 338,
      "pattern": "enable_function",
      "content": "'enable_function', 'disable_function',",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_time'] = datetime.now().isoformat()",
      "file": "scripts/implement_safe_sleep_mode.py",
      "line": 226,
      "pattern": "wake_function",
      "content": "self.sfm_registry['functions'][function_id]['wake_up_time'] = datetime.now().isoformat()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function('notification_bot_main')",
      "file": "scripts/integrate_notification_bot_main.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "sfm.enable_function('notification_bot_main')",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions\": sum(1 for f in functions.values()",
      "file": "scripts/complete_registry_fix.py",
      "line": 191,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "scripts/safe_sleep_mode_optimizer.py",
      "line": 213,
      "pattern": "wake_function",
      "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "scripts/plan_a_plus_work_optimizer.py",
      "line": 207,
      "pattern": "enable_function",
      "content": "success = self.sfm.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "scripts/plan_a_plus_work_optimizer.py",
      "line": 327,
      "pattern": "wake_function",
      "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(function_id)",
      "file": "scripts/minimal_system_optimizer.py",
      "line": 129,
      "pattern": "enable_function",
      "content": "success = self.sfm.enable_function(function_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems.py\")",
      "file": "scripts/minimal_system_optimizer.py",
      "line": 245,
      "pattern": "wake_function",
      "content": "print(\"🔧 Для пробуждения функций используйте: python3 wake_up_systems.py\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function()",
      "file": "scripts/simple_disable_functions.py",
      "line": 60,
      "pattern": "enable_function",
      "content": "- Легко восстановить через enable_function()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_function(func_id)",
      "file": "scripts/simple_disable_functions.py",
      "line": 68,
      "pattern": "enable_function",
      "content": "manager.enable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result = safe_manager.enable_function(func_id)",
      "file": "scripts/integrate_external_apis.py",
      "line": 73,
      "pattern": "enable_function",
      "content": "enable_result = safe_manager.enable_function(func_id)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result:",
      "file": "scripts/integrate_external_apis.py",
      "line": 74,
      "pattern": "enable_function",
      "content": "if enable_result:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_systems.py'",
      "file": "scripts/fast_flake8_analysis.py",
      "line": 114,
      "pattern": "wake_function",
      "content": "'security/microservices/wake_up_systems.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time': '< 1 секунда',",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 48,
      "pattern": "wake_function",
      "content": "'wake_up_time': '< 1 секунда',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_instructions': [",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 129,
      "pattern": "wake_function",
      "content": "'wake_up_instructions': [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority': 'HIGH'",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 138,
      "pattern": "wake_function",
      "content": "'wake_up_priority': 'HIGH'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time']}\")",
      "file": "scripts/put_api_gateway_to_sleep.py",
      "line": 149,
      "pattern": "wake_function",
      "content": "print(f\"  ⚡ Время пробуждения: {sleep_config['wake_up_time']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_result = safe_manager.enable_function(\"advanced_alerting_system\")",
      "file": "scripts/integrate_alerting_simple.py",
      "line": 45,
      "pattern": "enable_function",
      "content": "enable_result = safe_manager.enable_function(\"advanced_alerting_system\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_result:",
      "file": "scripts/integrate_alerting_simple.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "if enable_result:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': 0",
      "file": "scripts/sfm_stats_universal.py",
      "line": 113,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': 0",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions'] += 1",
      "file": "scripts/sfm_stats_universal.py",
      "line": 142,
      "pattern": "enable_function",
      "content": "analysis['security_analysis']['auto_enable_functions'] += 1",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']}\")",
      "file": "scripts/sfm_stats_universal.py",
      "line": 204,
      "pattern": "enable_function",
      "content": "print(f\"  Автовключение: {analysis['security_analysis']['auto_enable_functions']}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': sum(1 for f in functions.values() if f.get('auto_enable', False))",
      "file": "scripts/sfm_add_function.py",
      "line": 137,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': sum(1 for f in functions.values() if f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/one_click_installer.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 164,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/one_click_installer.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/auto_configuration.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 171,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/auto_configuration.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/simplify_interface.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 178,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/simplify_interface.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/configuration_templates.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 185,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/configuration_templates.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command\": \"python3 scripts/push_notifications.py\",",
      "file": "scripts/integrate_high_priority_components.py",
      "line": 192,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 scripts/push_notifications.py\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "file": "scripts/sleep_mode_monitoring_system.py",
      "line": 240,
      "pattern": "wake_function",
      "content": "async def wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "file": "scripts/test_trust_scoring_integration.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/test_trust_scoring_integration.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_manager(manager_type)",
      "file": "scripts/test_managers_integration.py",
      "line": 40,
      "pattern": "enable_function",
      "content": "result = await sfm.enable_manager(manager_type)",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_{manager_type}\"] = result",
      "file": "scripts/test_managers_integration.py",
      "line": 41,
      "pattern": "enable_function",
      "content": "test_results[f\"enable_{manager_type}\"] = result",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_zero_trust\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 156,
      "pattern": "enable_function",
      "content": "\"enable_zero_trust\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_load_balancing\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 157,
      "pattern": "enable_function",
      "content": "\"enable_load_balancing\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_scaling\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 158,
      "pattern": "enable_function",
      "content": "\"enable_auto_scaling\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_circuit_breaking\": True,",
      "file": "scripts/integrate_optimization_components.py",
      "line": 159,
      "pattern": "enable_function",
      "content": "\"enable_circuit_breaking\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"monitor_manager\")",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"monitor_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ MonitorManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and init_success:",
      "file": "scripts/test_monitor_manager_integration.py",
      "line": 127,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and init_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 58,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"CRITICAL\",",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 105,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"CRITICAL\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_incident_response_to_sleep.py",
      "line": 163,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "file": "scripts/auto_sleep_mode_implementation.py",
      "line": 224,
      "pattern": "wake_function",
      "content": "async def wake_up_function(self, function_name: str) -> Dict[str, Any]:",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 71,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"HIGH\",",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 152,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"HIGH\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_child_interface_to_sleep.py",
      "line": 227,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_auto_management = config.get('enable_auto_management', True) if config else True",
      "file": "scripts/test_constructor_exception.py",
      "line": 28,
      "pattern": "enable_function",
      "content": "self.enable_auto_management = config.get('enable_auto_management', True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence = config.get(\"enable_persistence\", True) if config else True",
      "file": "scripts/test_constructor_exception.py",
      "line": 34,
      "pattern": "enable_function",
      "content": "self.enable_persistence = config.get(\"enable_persistence\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_persistence:",
      "file": "scripts/test_constructor_exception.py",
      "line": 82,
      "pattern": "enable_function",
      "content": "if self.enable_persistence:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 57,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"HIGH\",",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 100,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"HIGH\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_threat_intelligence_to_sleep.py",
      "line": 153,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"privacy_manager\")",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"privacy_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ UniversalPrivacyManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and register_success and",
      "file": "scripts/test_privacy_manager_integration.py",
      "line": 140,
      "pattern": "enable_function",
      "content": "if (registration_success and enable_success and register_success and",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_sleep_manager():",
      "file": "scripts/wake_up_sleep_manager.py",
      "line": 14,
      "pattern": "wake_function",
      "content": "def wake_up_sleep_manager():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_sleep_manager()",
      "file": "scripts/wake_up_sleep_manager.py",
      "line": 70,
      "pattern": "wake_function",
      "content": "wake_up_sleep_manager()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_ml_components():",
      "file": "scripts/wake_up_ml_components.py",
      "line": 15,
      "pattern": "wake_function",
      "content": "def wake_up_ml_components():",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_ml_components()",
      "file": "scripts/wake_up_ml_components.py",
      "line": 99,
      "pattern": "wake_function",
      "content": "wake_up_ml_components()",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_.*',",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 55,
      "pattern": "wake_function",
      "content": "'wake_function': r'wake_up_.*',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function': r'enable_.*'",
      "file": "scripts/true_sfm_function_counter.py",
      "line": 57,
      "pattern": "enable_function",
      "content": "'enable_function': r'enable_.*'",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "file": "scripts/test_trust_scoring_integration_fixed.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"trust_scoring\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success:",
      "file": "scripts/test_trust_scoring_integration_fixed.py",
      "line": 47,
      "pattern": "enable_function",
      "content": "if enable_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "file": "scripts/sfm_analyzer.py",
      "line": 67,
      "pattern": "enable_function",
      "content": "auto_enable_count = sum(1 for f in self.functions.values() if f.get('auto_enable', False))",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions': auto_enable_count,",
      "file": "scripts/sfm_analyzer.py",
      "line": 91,
      "pattern": "enable_function",
      "content": "'auto_enable_functions': auto_enable_count,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "file": "scripts/sfm_analyzer.py",
      "line": 147,
      "pattern": "enable_function",
      "content": "print(f\"🔄 Автоматически включаемые: {stats['auto_enable_functions']} ({(stats['auto_enable_functions']/total)*100:.1f}%)\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "file": "scripts/sfm_analyzer.py",
      "line": 229,
      "pattern": "enable_function",
      "content": "writer.writerow(['Автоматически включаемые', stats['auto_enable_functions'], f\"{(stats['auto_enable_functions']/total)*100:.1f}%\"])",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions_wake_up.py\")",
      "file": "scripts/disable_12_functions_sleep_mode.py",
      "line": 176,
      "pattern": "enable_function",
      "content": "print(\"   python scripts/enable_functions_wake_up.py\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 60,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"CRITICAL\",",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 132,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"CRITICAL\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_password_security_to_sleep.py",
      "line": 200,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time': '< 1 секунда',",
      "file": "scripts/integrate_api_gateway_to_safe_manager.py",
      "line": 43,
      "pattern": "wake_function",
      "content": "'wake_up_time': '< 1 секунда',",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_time']}\")",
      "file": "scripts/integrate_api_gateway_to_safe_manager.py",
      "line": 180,
      "pattern": "wake_function",
      "content": "print(f\"  ⏰ Время пробуждения: {function_config['wake_up_time']}\")",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_gamification\": True,",
      "file": "scripts/integrate_mobile_agent.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "\"enable_gamification\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_emotions\": True,",
      "file": "scripts/integrate_mobile_agent.py",
      "line": 44,
      "pattern": "enable_function",
      "content": "\"enable_emotions\": True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_command\": \"python3 -c \\\"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent активирован')\\\"\",",
      "file": "scripts/integrate_mobile_agent.py",
      "line": 91,
      "pattern": "wake_function",
      "content": "\"wake_up_command\": \"python3 -c \\\"from security.ai_agents.mobile_user_ai_agent import MobileUserAIAgent; agent = MobileUserAIAgent(); print('MobileUserAIAgent активирован')\\\"\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_functions\": sum(1 for f in merged_registry[\"functions\"].values()",
      "file": "scripts/fixed_registry_merge_manager.py",
      "line": 193,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in merged_registry[\"functions\"].values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"analytics_manager\")",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"analytics_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ AnalyticsManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_ml=True,",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 57,
      "pattern": "enable_function",
      "content": "enable_ml=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_clustering=True,",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 58,
      "pattern": "enable_function",
      "content": "enable_clustering=True,",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_prediction=True",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 59,
      "pattern": "enable_function",
      "content": "enable_prediction=True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and result.status.value == \"completed\":",
      "file": "scripts/test_analytics_manager_integration.py",
      "line": 114,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and result.status.value == \"completed\":",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions\": sum(1 for f in functions.values()",
      "file": "scripts/ultimate_sfm_fix.py",
      "line": 184,
      "pattern": "enable_function",
      "content": "\"auto_enable_functions\": sum(1 for f in functions.values()",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_functions']}\")",
      "file": "scripts/ultimate_sfm_fix.py",
      "line": 297,
      "pattern": "enable_function",
      "content": "print(f\"  Автовключение: {stats['auto_enable_functions']}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success = sfm.enable_function(\"dashboard_manager\")",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 42,
      "pattern": "enable_function",
      "content": "enable_success = sfm.enable_function(\"dashboard_manager\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success}\")",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 43,
      "pattern": "enable_function",
      "content": "print(f\"✅ DashboardManager включен! Результат: {enable_success}\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_success and init_success:",
      "file": "scripts/test_dashboard_manager_integration.py",
      "line": 146,
      "pattern": "enable_function",
      "content": "if registration_success and enable_success and init_success:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_procedures\": {",
      "file": "scripts/put_vpn_antivirus_to_sleep.py",
      "line": 106,
      "pattern": "wake_function",
      "content": "\"wake_up_procedures\": {",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_condition\": \"При необходимости автоматизации развертывания\",",
      "file": "scripts/put_ci_pipeline_to_sleep.py",
      "line": 112,
      "pattern": "wake_function",
      "content": "\"wake_up_condition\": \"При необходимости автоматизации развертывания\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_function(\"behavioral_analysis_agent\")",
      "file": "scripts/test_behavioral_analysis_agent_integration.py",
      "line": 46,
      "pattern": "enable_function",
      "content": "sfm.enable_function(\"behavioral_analysis_agent\")",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_auto_management\": False,  # Отключаем для теста",
      "file": "scripts/test_sfm_optimizations.py",
      "line": 29,
      "pattern": "enable_function",
      "content": "\"enable_auto_management\": False,  # Отключаем для теста",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_sleep_mode\": False",
      "file": "scripts/test_sfm_optimizations.py",
      "line": 30,
      "pattern": "enable_function",
      "content": "\"enable_sleep_mode\": False",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "wake_up_conditions\": [",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 61,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": [",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_priority\": \"HIGH\",",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 112,
      "pattern": "wake_function",
      "content": "\"wake_up_priority\": \"HIGH\",",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "file": "scripts/put_mobile_security_100_percent_to_sleep.py",
      "line": 165,
      "pattern": "wake_function",
      "content": "\"wake_up_conditions\": sleep_report[\"wake_up_conditions\"]",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command': 'python3 scripts/setup_wizard.py'",
      "file": "scripts/integrate_new_components.py",
      "line": 183,
      "pattern": "wake_function",
      "content": "'wake_up_command': 'python3 scripts/setup_wizard.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command': 'python3 mobile/mobile_api.py'",
      "file": "scripts/integrate_new_components.py",
      "line": 193,
      "pattern": "wake_function",
      "content": "'wake_up_command': 'python3 mobile/mobile_api.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "wake_up_command': 'python3 scripts/ultra_fast_test.py'",
      "file": "scripts/integrate_new_components.py",
      "line": 198,
      "pattern": "wake_function",
      "content": "'wake_up_command': 'python3 scripts/ultra_fast_test.py'",
      "is_sleep": false,
      "is_wake": true,
      "is_disable": false,
      "is_enable": false
    },
    {
      "function_id": "enable_console = config.get(",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 88,
      "pattern": "enable_function",
      "content": "self.enable_console = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", True) if config else True",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 89,
      "pattern": "enable_function",
      "content": "\"enable_console\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 90,
      "pattern": "enable_function",
      "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file:",
      "file": "core_backup_20250901_195742/logging_module.py",
      "line": 173,
      "pattern": "enable_function",
      "content": "if self.enable_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console = config.get(",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 88,
      "pattern": "enable_function",
      "content": "self.enable_console = config.get(",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console\", True) if config else True",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 89,
      "pattern": "enable_function",
      "content": "\"enable_console\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file = config.get(\"enable_file\", True) if config else True",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 90,
      "pattern": "enable_function",
      "content": "self.enable_file = config.get(\"enable_file\", True) if config else True",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_console:",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 165,
      "pattern": "enable_function",
      "content": "if self.enable_console:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    },
    {
      "function_id": "enable_file:",
      "file": "core_backup_20250901_205100_before_restart/logging_module.py",
      "line": 173,
      "pattern": "enable_function",
      "content": "if self.enable_file:",
      "is_sleep": false,
      "is_wake": false,
      "is_disable": false,
      "is_enable": true
    }
  ],
  "registration_scripts": [
    "fix_sfm_manual.py",
    "fix_invalid_sfm_functions.py",
    "expert_integration_report.py",
    "fix_all_invalid_functions_one_by_one.py",
    "run_performance_tests.py",
    "start_enhanced_services.py",
    "test_sfm_registration.py",
    "sfm_stats_universal.py",
    "test_sfm_persistence_final.py",
    "enhanced_architecture_visualizer.py",
    "enhanced_dashboard_v2.py",
    "register_our_formatted_files.py",
    "system_status_check.py",
    "fix_sfm_structure.py",
    "create_security_backup.py",
    "manage_password_agents.py",
    "register_sfm_components.py",
    "fix_one_function_test.py",
    "demo_active_system.py",
    "add_vpn_functions_to_sfm.py",
    "enhanced_api_docs.py",
    "config/safe_config.py",
    "security/security_monitoring.py",
    "security/security_core.py",
    "security/enhanced_safe_function_manager.py",
    "security/unified_security_orchestrator.py",
    "security/security_monitoring_original_backup_20250930_230904.py",
    "security/production_persistence_manager.py",
    "security/secure_wrapper.py",
    "security/safe_function_manager.py",
    "security/sfm_singleton.py",
    "security/safe_function_manager_fixed.py",
    "security/ai_optimization_engine.py",
    "security/security_monitoring_backup_before_enhancement_20250930_231914.py",
    "security/security_integration.py",
    "security/performance_optimizer.py",
    "security/persistence_integrator.py",
    "security/safe_function_manager_patch.py",
    "security/bots/integration_test_suite.py",
    "security/family/check_family_system_status.py",
    "security/family/register_family_system_in_sfm_correct.py",
    "security/family/parent_child_elderly_web_interface.py",
    "security/family/register_family_system_in_sfm.py",
    "security/ai_agents/security_quality_analyzer.py",
    "security/ai_agents/analyze_all_security_components.py",
    "security/ai_agents/security_quality_analyzer_enhanced.py",
    "sfm_tools_backup/sfm_quick_stats.py",
    "sfm_tools_backup/sfm_analyzer.py",
    "architecture/real_time_visualizer.py",
    "scripts/check_real_status.py",
    "scripts/check_sfm_integration.py",
    "scripts/integrate_advanced_alerting.py",
    "scripts/sfm_manager.py",
    "scripts/implement_critical_functions_sleep_mode.py",
    "scripts/put_functions_to_sleep.py",
    "scripts/test_integration_simple.py",
    "scripts/system_health_check.py",
    "scripts/comprehensive_component_analysis.py",
    "scripts/comprehensive_quality_analysis.py",
    "scripts/final_sfm_registry_fix.py",
    "scripts/add_family_functions_to_sfm.py",
    "scripts/show_all_sfm_functions_final.py",
    "scripts/update_network_monitoring_sfm.py",
    "scripts/register_russian_integrations.py",
    "scripts/register_all_functions_in_sfm.py",
    "scripts/integrate_external_apis_simple.py",
    "scripts/force_integrate_ratelimiter.py",
    "scripts/MASTER_INTEGRATION_EXECUTOR.py",
    "scripts/simple_quality_analysis.py",
    "scripts/precise_count_analysis.py",
    "scripts/verify_backup_integrity.py",
    "scripts/safe_sfm_cleanup.py",
    "scripts/integrate_context_aware_access.py",
    "scripts/test_sfm_detailed.py",
    "scripts/detailed_sfm_duplicate_analyzer.py",
    "scripts/enhanced_function_finder.py",
    "scripts/emergency_wake_up_critical_functions.py",
    "scripts/corrected_integration_algorithm.py",
    "scripts/analyze_flake8_errors.py",
    "scripts/corrected_integration_plan.py",
    "scripts/integrate_registry_security.py",
    "scripts/safe_remove_old_family_functions.py",
    "scripts/check_sfm_instances.py",
    "scripts/update_circuit_breaker_sfm.py",
    "scripts/sfm_fix_and_validate.py",
    "scripts/integrate_load_balancer_to_safe_manager.py",
    "scripts/test_auto_sfm.py",
    "scripts/a_plus_integration_algorithm.py",
    "scripts/test_apigateway_integration.py",
    "scripts/test_child_protection_integration.py",
    "scripts/simple_show_functions.py",
    "scripts/sfm_structure_validator.py",
    "scripts/sfm_conflict_analyzer.py",
    "scripts/test_sfm_fix.py",
    "scripts/sfm_file_validator.py",
    "scripts/safe_sleep_mode_implementation.py",
    "scripts/unified_integration_plan.py",
    "scripts/update_sfm_registry.py",
    "scripts/integrate_circuit_breaker.py",
    "scripts/registry_security_manager.py",
    "scripts/registry_merge_manager.py",
    "scripts/test_safe_function_integration.py",
    "scripts/test_loadbalancer_integration.py",
    "scripts/security_system_manager.py",
    "scripts/fix_critical_errors.py",
    "scripts/architecture_analysis.py",
    "scripts/complete_flake8_analysis_326_functions.py",
    "scripts/safe_duplicate_mover.py",
    "scripts/function_quality_report.py",
    "scripts/a_plus_safe_diagnostic.py",
    "scripts/safe_function_integration_algorithm.py",
    "scripts/put_family_communication_to_sleep.py",
    "scripts/emergency_wake_up_all_critical.py",
    "scripts/quick_flake8_report.py",
    "scripts/comprehensive_sfm_test.py",
    "scripts/implement_safe_sleep_mode.py",
    "scripts/SAFE_ONE_BY_ONE_INTEGRATION_PLAN.py",
    "scripts/batch_326_functions_analysis.py",
    "scripts/integrate_notification_bot_main.py",
    "scripts/put_emergency_response_to_sleep.py",
    "scripts/a_plus_quality_priorities.py",
    "scripts/complete_registry_fix.py",
    "scripts/safe_sleep_mode_optimizer.py",
    "scripts/check_sfm_status_correct.py",
    "scripts/plan_a_plus_work_optimizer.py",
    "scripts/create_dependency_map.py",
    "scripts/auto_initialize_security.py",
    "scripts/detailed_quality_report.py",
    "scripts/minimal_system_optimizer.py",
    "scripts/analyze_326_sfm_functions.py",
    "scripts/a_plus_master_implementer.py",
    "scripts/put_mobile_security_to_sleep_simple.py",
    "scripts/weaknesses_analysis.py",
    "scripts/integrate_enhanced_alerting.py",
    "scripts/component_location_report.py",
    "scripts/show_all_sfm_functions.py",
    "scripts/real_component_integration_algorithm.py",
    "scripts/integrate_external_apis.py",
    "scripts/ULTIMATE_FINAL_TABLE.py",
    "scripts/put_notification_bot_to_sleep.py",
    "scripts/disable_12_functions.py",
    "scripts/final_backup_cleanup.py",
    "scripts/final_complete_table.py",
    "scripts/final_quality_report.py",
    "scripts/fast_flake8_analysis.py",
    "scripts/test_constructor_debug.py",
    "scripts/integrate_anti_fraud_master_ai.py",
    "scripts/sfm_integration_fix.py",
    "scripts/quick_function_finder.py",
    "scripts/check_integration.py",
    "scripts/final_integration_algorithm.py",
    "scripts/sfm_integrity_check.py",
    "scripts/security_quality_test.py",
    "scripts/put_api_gateway_to_sleep.py",
    "scripts/switch_to_replacement_components.py",
    "scripts/update_notification_bot_sfm.py",
    "scripts/integrate_alerting_simple.py",
    "scripts/complete_16_stage_algorithm.py",
    "scripts/sfm_stats_universal.py",
    "scripts/analyze_sleep_mode_risks.py",
    "scripts/sfm_add_function.py",
    "scripts/simple_register_russian.py",
    "scripts/integrate_high_priority_components.py",
    "scripts/check_sfm_integration_fixed.py",
    "scripts/register_enhanced_functions.py",
    "scripts/sleep_mode_monitoring_system.py",
    "scripts/test_trust_scoring_integration.py",
    "scripts/create_complete_security_backup.py",
    "scripts/registry_format_validator.py",
    "scripts/disable_personal_functions.py",
    "scripts/sfm_quick_stats.py",
    "scripts/cleanup_sfm_registry.py",
    "scripts/minimal_active_system.py",
    "scripts/test_managers_integration.py",
    "scripts/integrate_trust_scoring.py",
    "scripts/integrate_optimization_components.py",
    "scripts/test_monitor_manager_integration.py",
    "scripts/integrate_russian_apis_simple.py",
    "scripts/flake8_analyzer_fixed.py",
    "scripts/enhanced_fast_backup_mover.py",
    "scripts/enhanced_sfm_structure_validator.py",
    "scripts/safe_cleanup.py",
    "scripts/put_mobile_security_to_sleep.py",
    "scripts/PHASE1_CRITICAL_COMPONENTS_PLAN.py",
    "scripts/detailed_path_report.py",
    "scripts/expert_architecture_analysis.py",
    "scripts/auto_sleep_mode_implementation.py",
    "scripts/rename_analysis_detailed.py",
    "scripts/safe_algorithm_v2_3.py",
    "scripts/check_all_preliminary_functions.py",
    "scripts/start_aladdin_system.py",
    "scripts/comprehensive_security_analyzer.py",
    "scripts/put_super_ai_to_sleep.py",
    "scripts/test_constructor_exception.py",
    "scripts/test_privacy_manager_integration.py",
    "scripts/analyze_all_sfm_functions.py",
    "scripts/backup_quality_analysis.py",
    "scripts/wake_up_sleep_manager.py",
    "scripts/test_safe_function_simple.py",
    "scripts/put_compliance_to_sleep_final.py",
    "scripts/update_anti_fraud_master_ai_sfm.py",
    "scripts/registry_monitor.py",
    "scripts/wake_up_ml_components.py",
    "scripts/integrate_enhanced_alerting_fixed.py",
    "scripts/a_plus_integration_algorithm_v2.py",
    "scripts/create_security_backup.py",
    "scripts/integrate_single_function.py",
    "scripts/sfm_function_scanner.py",
    "scripts/integrate_family_functions.py",
    "scripts/fix_sfm_compatibility.py",
    "scripts/true_sfm_function_counter.py",
    "scripts/test_trust_scoring_integration_fixed.py",
    "scripts/quick_system_analysis.py",
    "scripts/sfm_analyzer.py",
    "scripts/disable_12_functions_sleep_mode.py",
    "scripts/sfm_a_plus_checker.py",
    "scripts/test_sfm_debug.py",
    "scripts/test_integration.py",
    "scripts/integrate_advanced_monitoring.py",
    "scripts/auto_function_finder.py",
    "scripts/copy_enhanced_files.py",
    "scripts/ultra_simple_russian.py",
    "scripts/minimal_active_only.py",
    "scripts/sfm_analysis.py",
    "scripts/sfm_registry_validator.py",
    "scripts/fix_trailing_whitespace.py",
    "scripts/auto_fix_quality.py",
    "scripts/update_threat_intelligence_agent_sfm.py",
    "scripts/restore_registry_with_protection.py",
    "scripts/integrate_api_gateway_to_safe_manager.py",
    "scripts/debug_safe_manager.py",
    "scripts/demo_backup_system.py",
    "scripts/integrate_all_security_functions.py",
    "scripts/sfm_auto_restore.py",
    "scripts/registry_protection_system.py",
    "scripts/sfm_complete_statistics.py",
    "scripts/test_method_exists.py",
    "scripts/comprehensive_duplicate_analyzer.py",
    "scripts/fixed_registry_merge_manager.py",
    "scripts/compare_duplicates_functionality.py",
    "scripts/complete_326_functions_analysis.py",
    "scripts/show_all_functions_complete.py",
    "scripts/put_152_fz_to_sleep.py",
    "scripts/safe_file_migration_plan.py",
    "scripts/test_analytics_manager_integration.py",
    "scripts/ultimate_sfm_fix.py",
    "scripts/integrate_russian_apis.py",
    "scripts/final_backup_mover.py",
    "scripts/individual_reports_generator.py",
    "scripts/test_dashboard_manager_integration.py",
    "scripts/integrate_compliance_components.py",
    "scripts/integrate_all_components_to_sfm.py",
    "scripts/init_sfm.py",
    "scripts/detailed_functionality_comparison.py",
    "scripts/test_sfm_improvements.py",
    "scripts/register_anonymous_modules.py",
    "scripts/put_vpn_antivirus_to_sleep.py",
    "scripts/force_sleep_optimizer.py",
    "scripts/put_ci_pipeline_to_sleep.py",
    "scripts/test_behavioral_analysis_agent_integration.py",
    "scripts/test_sfm_optimizations.py"
  ]
}