#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ formatting_work –Ω–∞ –æ—à–∏–±–∫–∏ flake8
"""

import subprocess
import sys
import os
from pathlib import Path

def run_flake8(file_path):
    """–ó–∞–ø—É—Å–∫ flake8 –¥–ª—è —Ñ–∞–π–ª–∞"""
    try:
        result = subprocess.run([
            'python3', '-m', 'flake8', 
            str(file_path), 
            '--max-line-length=120', 
            '--ignore=E501,W503'
        ], capture_output=True, text=True, cwd='/Users/sergejhlystov/ALADDIN_NEW')
        
        return result.returncode, result.stdout, result.stderr
    except Exception as e:
        return -1, "", str(e)

def main():
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ formatting_work
    files_to_check = [
        # service_orchestrator.py
        "formatting_work/service_orchestrator_analysis/service_orchestrator_formatted.py",
        "formatting_work/service_orchestrator_analysis/service_orchestrator_fixed.py",
        "formatting_work/service_orchestrator_analysis/service_orchestrator_final.py",
        
        # vpn_integration.py
        "formatting_work/vpn_integration_analysis/vpn_integration_formatted.py",
        "formatting_work/vpn_integration_analysis/vpn_integration_fixed.py",
        
        # protocols (–ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –æ–Ω–∏)
        "formatting_work/protocols/openvpn_server.py",
        "formatting_work/protocols/wireguard_server.py",
        
        # models/__init__.py
        "formatting_work/models/__init__.py",
        
        # config/vpn_constants.py
        "formatting_work/config/vpn_constants.py",
        
        # validators/__init__.py
        "formatting_work/validators/__init__.py",
        
        # validators/vpn_validators.py
        "formatting_work/validators/vpn_validators.py",
        
        # analytics/ml_detector.py
        "formatting_work/analytics/ml_detector.py",
        
        # factories/vpn_factory.py
        "formatting_work/factories/vpn_factory.py",
        
        # web/vpn_web_interface_premium.py
        "formatting_work/web/vpn_web_interface_premium.py",
        
        # models/vpn_models.py
        "formatting_work/models/vpn_models.py",
    ]
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –§–ê–ô–õ–û–í –í FORMATTING_WORK –ù–ê –û–®–ò–ë–ö–ò FLAKE8")
    print("=" * 70)
    
    total_errors = 0
    files_with_errors = 0
    missing_files = 0
    clean_files = 0
    
    for file_path in files_to_check:
        full_path = Path('/Users/sergejhlystov/ALADDIN_NEW') / file_path
        
        if not full_path.exists():
            print(f"‚ùå –ü–†–û–ü–ê–í–®–ò–ô –§–ê–ô–õ: {file_path}")
            missing_files += 1
            continue
            
        print(f"\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞: {file_path}")
        
        returncode, stdout, stderr = run_flake8(full_path)
        
        if returncode == 0:
            print("‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            clean_files += 1
        else:
            files_with_errors += 1
            error_count = len(stdout.split('\n')) - 1  # -1 –¥–ª—è –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ü–µ
            total_errors += error_count
            
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: {error_count}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –æ—à–∏–±–æ–∫
            lines = stdout.strip().split('\n')
            for i, line in enumerate(lines[:5]):
                print(f"   {line}")
            
            if len(lines) > 5:
                print(f"   ... –∏ –µ—â–µ {len(lines) - 5} –æ—à–∏–±–æ–∫")
    
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {len(files_to_check)}")
    print(f"   –§–∞–π–ª–æ–≤ –±–µ–∑ –æ—à–∏–±–æ–∫: {clean_files}")
    print(f"   –§–∞–π–ª–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏: {files_with_errors}")
    print(f"   –ü—Ä–æ–ø–∞–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤: {missing_files}")
    print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫: {total_errors}")
    
    if clean_files > 0:
        print(f"\n‚úÖ –û–¢–õ–ò–ß–ù–û! {clean_files} —Ñ–∞–π–ª–æ–≤ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ—à–∏–±–æ–∫ flake8!")
    
    if total_errors > 0:
        print(f"\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("   1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –∏–∑ formatting_work")
        print("   2. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        print("   3. –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã (F401)")
        print("   4. –û—á–∏—Å—Ç–∏—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤ (W293)")

if __name__ == "__main__":
    main()