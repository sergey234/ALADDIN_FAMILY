name: iOS Alternative Solutions

on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/trigger_alternatives.txt' ]

jobs:
  alternative-solutions:
    runs-on: macos-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
        
    - name: Alternative Solution 1 - No Destination
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== АЛЬТЕРНАТИВА 1: БЕЗ DESTINATION ==="
        echo "Компилируем только с scheme, без destination"
        
        rm -rf build/
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN build
        
        echo "Результат:"
        ls -la build/
        find build/ -name "*.app" -type d || echo "Нет .app файлов"
        
    - name: Alternative Solution 2 - Generic Platform
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== АЛЬТЕРНАТИВА 2: GENERIC PLATFORM ==="
        
        rm -rf build/
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "generic/platform=iOS Simulator" build
        
        echo "Результат:"
        ls -la build/
        find build/ -name "*.app" -type d || echo "Нет .app файлов"
        
    - name: Alternative Solution 3 - Latest OS
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== АЛЬТЕРНАТИВА 3: LATEST OS ==="
        
        rm -rf build/
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS Simulator,OS=latest" build
        
        echo "Результат:"
        ls -la build/
        find build/ -name "*.app" -type d || echo "Нет .app файлов"
        
    - name: Alternative Solution 4 - Specific Device ID
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== АЛЬТЕРНАТИВА 4: СПЕЦИФИЧЕСКИЙ ID УСТРОЙСТВА ==="
        
        # Получаем ID первого доступного iPhone симулятора
        DEVICE_ID=$(xcrun simctl list devices available | grep "iPhone" | head -1 | grep -o '[A-F0-9-]*' | tail -1)
        echo "Используем Device ID: $DEVICE_ID"
        
        rm -rf build/
        if [ -n "$DEVICE_ID" ]; then
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "id=$DEVICE_ID" build
        else
          echo "Device ID не найден"
        fi
        
        echo "Результат:"
        ls -la build/
        find build/ -name "*.app" -type d || echo "Нет .app файлов"
        
    - name: Alternative Solution 5 - Build for Archive
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== АЛЬТЕРНАТИВА 5: BUILD FOR ARCHIVE ==="
        
        rm -rf build/
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -configuration Release -destination "platform=iOS Simulator" archive -archivePath build/ALADDIN.xcarchive
        
        echo "Результат:"
        ls -la build/
        find build/ -name "*.app" -type d || echo "Нет .app файлов"
        
    - name: Upload All Alternative Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-alternative-solutions
        path: mobile_apps/ALADDIN_iOS/build/
        retention-days: 7
