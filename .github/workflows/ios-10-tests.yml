name: iOS 10 Tests - Fix Error 70

on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/trigger_10_tests.txt' ]

jobs:
  ios-10-tests:
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
        
    - name: Test 1 - Detect Available Simulators
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 1: ОБНАРУЖЕНИЕ СИМУЛЯТОРОВ ==="
        echo "Проверяем доступные симуляторы в GitHub Actions"
        
        # Получаем список всех симуляторов
        xcrun simctl list devices available | grep "iPhone" || echo "iPhone симуляторы не найдены"
        xcrun simctl list devices available | grep "iPad" || echo "iPad симуляторы не найдены"
        
        # Получаем список платформ
        xcodebuild -showsdks | grep "iOS" || echo "iOS SDK не найдены"
        
        echo "=== ПРОВЕРЯЕМ XCODE VERSION ==="
        xcodebuild -version
        
    - name: Test 2 - Fix Platform Specification
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 2: ИСПРАВЛЕНИЕ ПЛАТФОРМЫ ==="
        echo "Используем platform=iOS Simulator (не platform=iOS)"
        
        # Тест с правильной платформой
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS Simulator" build || echo "Тест 2 провален"
        
        echo "=== ПРОВЕРЯЕМ BUILD ПАПКУ ==="
        ls -la build/ || echo "build папка не найдена"
        
    - name: Test 3 - Use Real Simulator Names
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 3: РЕАЛЬНЫЕ ИМЕНА СИМУЛЯТОРОВ ==="
        
        # Попробуем разные имена симуляторов
        for device in "iPhone 15" "iPhone 14" "iPhone 13" "iPhone 12" "iPhone SE (3rd generation)"; do
          echo "Тестируем: $device"
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS Simulator,name=$device" build && echo "✅ Успех с $device" && break || echo "❌ Не удалось с $device"
        done
        
    - name: Test 4 - Check iOS Version Compatibility
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 4: СОВМЕСТИМОСТЬ ВЕРСИЙ iOS ==="
        
        # Проверяем доступные версии iOS
        xcodebuild -showsdks | grep "iOS"
        
        # Тест с разными версиями iOS
        for ios_version in "17.0" "16.0" "15.0" "14.0"; do
          echo "Тестируем iOS $ios_version"
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS Simulator,OS=$ios_version" build && echo "✅ Успех с iOS $ios_version" && break || echo "❌ Не удалось с iOS $ios_version"
        done
        
    - name: Test 5 - Check Xcode Version and SDK
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 5: ВЕРСИЯ XCODE И SDK ==="
        
        # Проверяем версию Xcode
        xcodebuild -version
        
        # Проверяем доступные SDK
        xcodebuild -showsdks
        
        # Проверяем переменные окружения
        echo "XCODE_VERSION: $XCODE_VERSION"
        echo "DEVELOPER_DIR: $DEVELOPER_DIR"
        
    - name: Test 6 - Different Destination Formats
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 6: РАЗНЫЕ ФОРМАТЫ DESTINATION ==="
        
        # Разные форматы destination
        destinations=(
          "platform=iOS Simulator"
          "platform=iOS Simulator,name=iPhone 15"
          "platform=iOS Simulator,id=iPhone 15"
          "platform=iOS Simulator,OS=latest"
          "generic/platform=iOS Simulator"
        )
        
        for dest in "${destinations[@]}"; do
          echo "Тестируем destination: $dest"
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "$dest" build && echo "✅ Успех с $dest" && break || echo "❌ Не удалось с $dest"
        done
        
    - name: Test 7 - Check Build Configuration
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 7: КОНФИГУРАЦИЯ СБОРКИ ==="
        
        # Проверяем доступные конфигурации
        xcodebuild -project ALADDIN.xcodeproj -list
        
        # Тест с разными конфигурациями
        for config in "Debug" "Release"; do
          echo "Тестируем конфигурацию: $config"
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -configuration $config -destination "platform=iOS Simulator" build && echo "✅ Успех с $config" && break || echo "❌ Не удалось с $config"
        done
        
    - name: Test 8 - Validate ALADDIN Scheme
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 8: ВАЛИДАЦИЯ СХЕМЫ ALADDIN ==="
        
        # Проверяем схему
        xcodebuild -project ALADDIN.xcodeproj -list
        
        # Проверяем детали схемы
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -showBuildSettings | head -20
        
        # Тест только схемы без destination
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN build || echo "Схема ALADDIN не работает"
        
    - name: Test 9 - Final Solution
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 9: ФИНАЛЬНОЕ РЕШЕНИЕ ==="
        
        # Очищаем предыдущие сборки
        rm -rf build/
        
        # Финальный тест с правильными параметрами
        echo "Компилируем с правильными параметрами:"
        echo "- platform=iOS Simulator (симулятор, не реальное устройство)"
        echo "- name=iPhone 15 (реальный симулятор)"
        echo "- configuration=Release (релизная версия)"
        
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -configuration Release -destination "platform=iOS Simulator,name=iPhone 15" build
        
        echo "=== ПРОВЕРЯЕМ РЕЗУЛЬТАТ ==="
        ls -la build/
        find build/ -name "*.app" -type d || echo ".app файлы не найдены"
        
    - name: Test 10 - Verify .app Creation
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 10: ПРОВЕРКА СОЗДАНИЯ .app ФАЙЛА ==="
        
        # Ищем .app файлы
        echo "Ищем .app файлы в build папке:"
        find build/ -name "*.app" -type d -exec ls -la {} \;
        
        # Проверяем содержимое .app файла
        APP_FILE=$(find build/ -name "*.app" -type d | head -1)
        if [ -n "$APP_FILE" ]; then
          echo "✅ Найден .app файл: $APP_FILE"
          echo "Содержимое .app файла:"
          ls -la "$APP_FILE"
          
          # Проверяем Info.plist
          if [ -f "$APP_FILE/Info.plist" ]; then
            echo "✅ Info.plist найден"
            plutil -p "$APP_FILE/Info.plist" | head -10
          else
            echo "❌ Info.plist не найден"
          fi
        else
          echo "❌ .app файл не найден"
        fi
        
    - name: Upload All Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-10-tests-results
        path: mobile_apps/ALADDIN_iOS/build/
        retention-days: 7
