name: iOS Build and Test

on:
  push:
    branches: [ main, develop ]
    paths: [ 'mobile/ios/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'mobile/ios/**' ]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Cache Swift packages
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData
          ~/Library/Caches/CocoaPods
        key: ${{ runner.os }}-swift-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-swift-
          
    - name: Install dependencies
      run: |
        cd mobile/ios
        if [ -f Podfile ]; then
          pod install
        fi
        
    - name: Build iOS app
      run: |
        cd mobile/ios
        xcodebuild -workspace ALADDINMobile.xcworkspace -scheme ALADDINMobile -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' build
        
    - name: Run iOS tests
      run: |
        cd mobile/ios
        xcodebuild -workspace ALADDINMobile.xcworkspace -scheme ALADDINMobile -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' test
        
    - name: Run SwiftLint
      run: |
        cd mobile/ios
        if command -v swiftlint &> /dev/null; then
          swiftlint lint --reporter github-actions-logging
        else
          echo "SwiftLint not installed, skipping..."
        fi
        
    - name: Generate test report
      uses: davidrussell/github-actions-xcode-test-results@v1
      if: always()
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: ios-build
        path: mobile/ios/build/
        
    - name: Security scan
      run: |
        cd mobile/ios
        # Проверка на уязвимости в зависимостях
        if command -v dependency-check &> /dev/null; then
          dependency-check --project ALADDINMobile --scan .
        fi
        
    - name: Code quality check
      run: |
        cd mobile/ios
        # Проверка качества кода
        echo "Running code quality checks..."
        find . -name "*.swift" -exec wc -l {} + | tail -1

