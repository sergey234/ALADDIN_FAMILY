name: iOS Test 10 - Complete Diagnostic

on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/trigger_test10.txt' ]

jobs:
  build-ios:
    runs-on: macos-latest
    timeout-minutes: 25
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
        
    - name: Test 10 - Complete Diagnostic
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== ТЕСТ 10: Полная диагностика ==="
        
        echo "1. Проверяем Xcode версию"
        xcodebuild -version
        
        echo "2. Проверяем SDK"
        xcodebuild -showsdks
        
        echo "3. Проверяем симуляторы"
        xcrun simctl list devices available
        
        echo "4. Проверяем runtimes"
        xcrun simctl list runtimes
        
        echo "5. Проверяем project.pbxproj"
        grep -A 5 -B 5 "SUPPORTED_PLATFORMS" ALADDIN.xcodeproj/project.pbxproj || echo "SUPPORTED_PLATFORMS не найдено"
        
        echo "6. Проверяем VALID_ARCHS"
        grep -A 5 -B 5 "VALID_ARCHS" ALADDIN.xcodeproj/project.pbxproj || echo "VALID_ARCHS не найдено"
        
        echo "7. Создаем симулятор"
        DEVICE_TYPE=$(xcrun simctl list devicetypes | grep iPhone | head -1 | awk -F'[()]' '{print $2}')
        RUNTIME=$(xcrun simctl list runtimes | grep iOS | head -1 | awk -F'[()]' '{print $2}')
        SIMULATOR_ID=$(xcrun simctl create "Diagnostic iPhone" "$DEVICE_TYPE" "$RUNTIME")
        xcrun simctl boot "$SIMULATOR_ID"
        
        echo "8. Финальная компиляция"
        xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS Simulator,id=$SIMULATOR_ID" build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-test10-diagnostic
        path: mobile_apps/ALADDIN_iOS/build/
        retention-days: 7
