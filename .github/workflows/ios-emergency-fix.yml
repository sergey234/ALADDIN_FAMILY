name: iOS Emergency Fix - Ultimate Solution
on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/emergency_fix.txt' ]
  workflow_dispatch:

jobs:
  emergency-build:
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
    
    - name: iOS Emergency Fix - Ultimate Solution
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "üö® –ê–í–ê–†–ò–ô–ù–´–ô –†–ï–ñ–ò–ú: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú"
        echo "=================================================="
        
        echo "üì± –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
        echo "Xcode –≤–µ—Ä—Å–∏—è:"
        xcodebuild -version
        
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ SDK:"
        xcodebuild -showsdks | grep iphonesimulator
        
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ Runtime:"
        xcrun simctl list runtimes | grep iOS
        
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∏–º—É–ª—è—Ç–æ—Ä—ã:"
        xcrun simctl list devices available | grep "iPhone 16 Pro" | head -3
        
        echo ""
        echo "üîß –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 1: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ–±—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º"
        
        # –ü–æ–ø—ã—Ç–∫–∞ —Å —Å–∞–º—ã–º –Ω–æ–≤—ã–º SDK –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
          -sdk iphonesimulator \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro" \
          IPHONEOS_DEPLOYMENT_TARGET=12.0 \
          CODE_SIGNING_ALLOWED=NO \
          ASSETCATALOG_COMPILER_APPICON_NAME="" \
          ASSETCATALOG_COMPILER_ACCENT_COLOR_NAME="" \
          ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
          ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME="" \
          COMPILER_INDEX_STORE_ENABLE=NO \
          GCC_WARN_INHIBIT_ALL_WARNINGS=YES \
          ENABLE_BITCODE=NO \
          VALIDATE_DEVELOPMENT_ASSETS=NO \
          ONLY_ACTIVE_ARCH=NO \
          build; then
          
          echo "‚úÖ –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 1 –£–°–ü–ï–•–ï–ù!"
          
        else
          echo "‚ùå –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –µ—â–µ –±–æ–ª–µ–µ —Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ä—ã..."
          
          echo "üîß –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 2: –ü–æ–ª–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ Asset Catalog"
          if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 16 Pro" \
            IPHONEOS_DEPLOYMENT_TARGET=12.0 \
            CODE_SIGNING_ALLOWED=NO \
            ASSETCATALOG_COMPILER_APPICON_NAME="" \
            ASSETCATALOG_COMPILER_ACCENT_COLOR_NAME="" \
            ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
            COMPILER_INDEX_STORE_ENABLE=NO \
            GCC_WARN_INHIBIT_ALL_WARNINGS=YES \
            ENABLE_BITCODE=NO \
            build; then
            
            echo "‚úÖ –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 2 –£–°–ü–ï–•–ï–ù!"
            
          else
            echo "‚ùå –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É..."
            
            echo "üîß –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 3: –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–∞—è —Å–±–æ—Ä–∫–∞"
            if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
              -sdk iphonesimulator \
              CODE_SIGNING_ALLOWED=NO \
              IPHONEOS_DEPLOYMENT_TARGET=12.0 \
              build; then
              
              echo "‚úÖ –ê–í–ê–†–ò–ô–ù–´–ô –¢–ï–°–¢ 3 –£–°–ü–ï–•–ï–ù!"
              
            else
              echo "‚ùå –í–°–ï –ê–í–ê–†–ò–ô–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ò–õ–ò–°–¨"
              echo "–ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å —Å–∞–º –ø—Ä–æ–µ–∫—Ç Xcode"
              exit 1
            fi
          fi
        fi
        
        echo ""
        echo "üîç –ê–í–ê–†–ò–ô–ù–´–ô –ü–û–ò–°–ö .app –§–ê–ô–õ–ê..."
        
        # –ü–æ–∏—Å–∫ –≤–æ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        FOUND_APP=""
        
        # –ü–æ–∏—Å–∫ –≤ –≤—Å–µ—Ö DerivedData –ø–∞–ø–∫–∞—Ö
        for derived_path in "/Users/runner/Library/Developer/Xcode/DerivedData" "/tmp" "."; do
          if [ -d "$derived_path" ]; then
            APP_RESULT=$(find "$derived_path" -name "ALADDIN.app" -type d 2>/dev/null | head -1)
            if [ -n "$APP_RESULT" ]; then
              FOUND_APP="$APP_RESULT"
              echo "üéâ –ù–ê–ô–î–ï–ù .app –≤ $derived_path: $FOUND_APP"
              break
            fi
          fi
        done
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π, –∏—â–µ–º –ª—é–±–æ–π .app
        if [ -z "$FOUND_APP" ]; then
          FOUND_APP=$(find . -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
          if [ -n "$FOUND_APP" ]; then
            echo "üéâ –ù–ê–ô–î–ï–ù .app (–æ–±—â–∏–π –ø–æ–∏—Å–∫): $FOUND_APP"
          fi
        fi
        
        if [ -n "$FOUND_APP" ]; then
          echo "üéâ –£–°–ü–ï–•! –ù–∞–π–¥–µ–Ω .app —Ñ–∞–π–ª: $FOUND_APP"
          ls -la "$FOUND_APP"
          echo "EMERGENCY_APP_PATH=$FOUND_APP" >> $GITHUB_ENV
        else
          echo "‚ùå .app —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –≤ –∞–≤–∞—Ä–∏–π–Ω–æ–º —Ä–µ–∂–∏–º–µ"
        fi
    
    - name: Upload Emergency .app file
      uses: actions/upload-artifact@v4
      if: env.EMERGENCY_APP_PATH != ''
      with:
        name: aladdin-ios-app-emergency
        path: ${{ env.EMERGENCY_APP_PATH }}
        if-no-files-found: error
        retention-days: 30
