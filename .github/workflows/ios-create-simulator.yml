name: iOS Create Simulator Build

on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/**' ]

jobs:
  build-ios:
    runs-on: macos-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
        
    - name: List available simulators
      run: |
        echo "=== ДОСТУПНЫЕ СИМУЛЯТОРЫ ДО СОЗДАНИЯ ==="
        xcrun simctl list devices available | grep iPhone || echo "iPhone симуляторы не найдены"
        echo ""
        echo "=== ДОСТУПНЫЕ DEVICE TYPES ==="
        xcrun simctl list devicetypes | grep iPhone || echo "iPhone device types не найдены"
        
    - name: Create iPhone 8 simulator
      run: |
        echo "=== СОЗДАЕМ IPHONE 8 СИМУЛЯТОР ==="
        # Создаем iPhone 8 симулятор
        xcrun simctl create "iPhone 8 Test" "iPhone 8" "iOS 17.0" || echo "Не удалось создать iPhone 8"
        
        # Создаем iPhone 14 симулятор
        xcrun simctl create "iPhone 14 Test" "iPhone 14" "iOS 17.0" || echo "Не удалось создать iPhone 14"
        
        echo "=== ПРОВЕРЯЕМ СОЗДАННЫЕ СИМУЛЯТОРЫ ==="
        xcrun simctl list devices available | grep "iPhone.*Test" || echo "Тестовые симуляторы не найдены"
        
    - name: Find available simulator
      id: simulator
      run: |
        echo "=== ПОИСК ДОСТУПНОГО СИМУЛЯТОРА ==="
        SIMULATOR=""
        
        # Ищем созданные тестовые симуляторы
        if xcrun simctl list devices available | grep -q "iPhone 8 Test"; then
          SIMULATOR="iPhone 8 Test"
        elif xcrun simctl list devices available | grep -q "iPhone 14 Test"; then
          SIMULATOR="iPhone 14 Test"
        else
          # Ищем любые доступные iPhone симуляторы
          SIMULATOR=$(xcrun simctl list devices available | grep iPhone | head -1 | sed 's/.*(\([^)]*\)).*/\1/')
        fi
        
        if [ -z "$SIMULATOR" ]; then
          echo "❌ Никаких iPhone симуляторов не найдено!"
          echo "Попробуем использовать generic destination"
          echo "simulator=generic" >> $GITHUB_OUTPUT
        else
          echo "✅ Найден симулятор: $SIMULATOR"
          echo "simulator=$SIMULATOR" >> $GITHUB_OUTPUT
        fi
        
    - name: Build iOS app
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "=== КОМПИЛИРУЕМ iOS ПРИЛОЖЕНИЕ ==="
        
        if [ "${{ steps.simulator.outputs.simulator }}" = "generic" ]; then
          echo "Используем generic destination"
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS" build
        else
          echo "Используем симулятор: ${{ steps.simulator.outputs.simulator }}"
          xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN -destination "platform=iOS" build
        fi
        
        echo "=== ПРОВЕРЯЕМ BUILD ПАПКУ ==="
        ls -la build/ || echo "build папка не найдена"
        echo ""
        echo "=== ИЩЕМ .app ФАЙЛЫ ==="
        find build/ -name "*.app" -type d || echo ".app файлы не найдены"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-with-simulator
        path: mobile_apps/ALADDIN_iOS/build/
        retention-days: 7
