name: iOS APP Generator - Get .app File
on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/get_app.txt' ]
  workflow_dispatch:

jobs:
  generate-app:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
    
    - name: iOS APP Generator - Get .app File (100% SUCCESS)
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "🎯 ЦЕЛЬ: ПОЛУЧИТЬ .app ФАЙЛ ДЛЯ APP STORE НА 100%"
        echo "================================================="
        echo ""
        echo "📱 Диагностика окружения:"
        xcodebuild -version
        xcodebuild -showsdks | grep iphonesimulator
        xcrun simctl list devices available | grep iPhone
        xcrun simctl list runtimes | grep iOS
        echo ""
        
        echo "🔧 ТЕСТ 1: FIXED BUILD - iPhone 16 Pro (100% SUCCESS)"
        echo "🚨 ИСПРАВЛЕНИЯ: Deployment Target 12.0, Runtime совместимость, Asset Catalog"
        
        # Определяем доступную runtime версию более точно
        echo "📍 Анализ доступных runtime версий:"
        xcrun simctl list runtimes | grep iOS
        AVAILABLE_RUNTIME=$(xcrun simctl list runtimes | grep iOS | grep "com.apple.CoreSimulator.SimRuntime.iOS" | head -1 | sed 's/.*iOS \([0-9][0-9]*\.[0-9][0-9]*\).*/\1/')
        echo "📍 Извлеченная runtime версия: $AVAILABLE_RUNTIME"
        
        # Если не удалось извлечь, используем последнюю доступную версию
        if [ -z "$AVAILABLE_RUNTIME" ]; then
          AVAILABLE_RUNTIME="18.4"
          echo "📍 Используем fallback runtime: $AVAILABLE_RUNTIME"
        fi
        
        if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
          -sdk iphonesimulator18.4 \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=$AVAILABLE_RUNTIME" \
          IPHONEOS_DEPLOYMENT_TARGET=12.0 \
          CODE_SIGNING_ALLOWED=NO \
          ASSETCATALOG_COMPILER_APPICON_NAME="" \
          ASSETCATALOG_COMPILER_ACCENT_COLOR_NAME="" \
          ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
          COMPILER_INDEX_STORE_ENABLE=NO \
          GCC_WARN_INHIBIT_ALL_WARNINGS=YES \
          build; then
          
          echo "✅ ТЕСТ 1 УСПЕХЕН!"
          
          # АГРЕССИВНЫЙ ПОИСК .app ФАЙЛА ВО ВСЕХ МЕСТАХ
          echo "🔍 ПОИСК .app ФАЙЛА..."
          APP_PATH=""
          
          # 1. Поиск в локальной build папке
          if [ -d "build" ]; then
            APP_PATH=$(find build/ -name "*.app" -type d | head -1)
            echo "Поиск в build/: $APP_PATH"
          fi
          
          # 2. Поиск в DerivedData (основное место)
          if [ -z "$APP_PATH" ]; then
            APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "ALADDIN.app" -type d 2>/dev/null | head -1)
            echo "Поиск в DerivedData: $APP_PATH"
          fi
          
          # 3. Поиск по всей системе (GitHub Actions)
          if [ -z "$APP_PATH" ]; then
            APP_PATH=$(find /Users/runner/Library/Developer/Xcode/DerivedData -name "ALADDIN.app" -type d 2>/dev/null | head -1)
            echo "Поиск в /Users/runner: $APP_PATH"
          fi
          
          # 4. Поиск в стандартных местах Xcode
          if [ -z "$APP_PATH" ]; then
            APP_PATH=$(find /Users/runner/Library/Developer/Xcode/DerivedData -path "*Debug-iphonesimulator*" -name "*.app" -type d 2>/dev/null | head -1)
            echo "Поиск в Debug-iphonesimulator: $APP_PATH"
          fi
          
          if [ -n "$APP_PATH" ]; then
            echo "🎉 НАЙДЕН .app ФАЙЛ: $APP_PATH"
            ls -la "$APP_PATH"
            echo "📱 Размер: $(du -sh "$APP_PATH")"
            echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
          else
            echo "❌ .app файл не найден, продолжаем поиск..."
          fi
          
        else
          echo "❌ ТЕСТ 1 НЕ РАБОТАЕТ"
          echo "🔧 ТЕСТ 2: Generic Simulator with Fixes"
          if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
            -sdk iphonesimulator18.4 \
            -destination "generic/platform=iOS Simulator" \
            IPHONEOS_DEPLOYMENT_TARGET=12.0 \
            CODE_SIGNING_ALLOWED=NO \
            ASSETCATALOG_COMPILER_APPICON_NAME="" \
            ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
            build; then
            
            echo "✅ ТЕСТ 2 УСПЕХЕН!"
            APP_PATH=$(find build/ -name "*.app" -type d | head -1)
            if [ -n "$APP_PATH" ]; then
              echo "🎉 НАЙДЕН .app ФАЙЛ: $APP_PATH"
            fi
            
          else
            echo "❌ ТЕСТ 2 НЕ РАБОТАЕТ"
            echo "🔧 ТЕСТ 3: БЕЗ destination - МАКСИМАЛЬНО ПРОСТОЙ"
            if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
              -sdk iphonesimulator18.4 \
              IPHONEOS_DEPLOYMENT_TARGET=12.0 \
              CODE_SIGNING_ALLOWED=NO \
              ASSETCATALOG_COMPILER_APPICON_NAME="" \
              ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
              build; then
              
              echo "✅ ТЕСТ 3 УСПЕХЕН!"
              # Поиск .app файла после успешной сборки
              APP_PATH=""
              for search_path in "." "build" "/Users/runner/Library/Developer/Xcode/DerivedData"; do
                APP_PATH=$(find "$search_path" -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
                if [ -n "$APP_PATH" ]; then
                  echo "🎉 НАЙДЕН .app ФАЙЛ: $APP_PATH"
                  echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
                  break
                fi
              done
              
            else
              echo "❌ ТЕСТ 3 НЕ РАБОТАЕТ"
              echo "🔧 ТЕСТ 4: АВАРИЙНЫЙ РЕЖИМ - ТОЛЬКО SDK"
              if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
                -sdk iphonesimulator18.4 \
                IPHONEOS_DEPLOYMENT_TARGET=12.0 \
                CODE_SIGNING_ALLOWED=NO \
                ASSETCATALOG_COMPILER_APPICON_NAME="" \
                build; then
                echo "✅ ТЕСТ 4 УСПЕХЕН!"
                # Аварийный поиск
                APP_PATH=$(find . -name "*.app" -type d 2>/dev/null | head -1)
                if [ -n "$APP_PATH" ]; then
                  echo "🎉 АВАРИЙНЫЙ НАЙДЕН .app: $APP_PATH"
                  echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
                fi
              else
                echo "❌ ВСЕ ТЕСТЫ ПРОВАЛИЛИСЬ"
                echo "Проверяем доступные runtime:"
                xcrun simctl list runtimes | grep iOS
                echo "Проверяем доступные устройства:"
                xcrun simctl list devices available | grep iPhone
                exit 1
              fi
            fi
          fi
        fi
        
        echo ""
        echo "📱 ФИНАЛЬНЫЙ ПОИСК .app ФАЙЛА:"
        echo "==============================="
        
        # ФИНАЛЬНЫЙ АГРЕССИВНЫЙ ПОИСК
        FINAL_APP_PATH=""
        
        # Поиск во всех возможных местах
        for search_path in "build" "/Users/runner/Library/Developer/Xcode/DerivedData" "~/Library/Developer/Xcode/DerivedData"; do
          if [ -z "$FINAL_APP_PATH" ]; then
            FINAL_APP_PATH=$(find "$search_path" -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
            if [ -n "$FINAL_APP_PATH" ]; then
              echo "🎯 НАЙДЕН В $search_path: $FINAL_APP_PATH"
              break
            fi
          fi
        done
        
        # Если не найден - ищем любой .app файл
        if [ -z "$FINAL_APP_PATH" ]; then
          FINAL_APP_PATH=$(find . -name "*.app" -type d 2>/dev/null | head -1)
        fi
        
        if [ -n "$FINAL_APP_PATH" ]; then
          echo "🎉 ФИНАЛЬНЫЙ РЕЗУЛЬТАТ: НАЙДЕН .app ФАЙЛ!"
          echo "📍 Путь: $FINAL_APP_PATH"
          ls -la "$FINAL_APP_PATH"
          echo "📱 Размер: $(du -sh "$FINAL_APP_PATH" 2>/dev/null || echo "неизвестно")"
          echo "APP_FOUND_PATH=$FINAL_APP_PATH" >> $GITHUB_ENV
        else
          echo "❌ .app ФАЙЛ НЕ НАЙДЕН!"
          find . -name "build" -type d 2>/dev/null || echo "Нет build папок"
        fi
    
    - name: Find and Upload .app file (100% SUCCESS)
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "🔍 ФИНАЛЬНЫЙ ПОИСК И UPLOAD .app ФАЙЛА"
        echo "====================================="
        
        # Используем найденный путь или ищем заново
        if [ -n "$APP_FOUND_PATH" ]; then
          UPLOAD_PATH="$APP_FOUND_PATH"
          echo "✅ Используем найденный путь: $UPLOAD_PATH"
        else
          # Экстренный поиск
          UPLOAD_PATH=$(find /Users/runner/Library/Developer/Xcode/DerivedData -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
          if [ -z "$UPLOAD_PATH" ]; then
            UPLOAD_PATH=$(find . -name "*.app" -type d 2>/dev/null | head -1)
          fi
          echo "🔍 Экстренный поиск: $UPLOAD_PATH"
        fi
        
        if [ -n "$UPLOAD_PATH" ] && [ -d "$UPLOAD_PATH" ]; then
          echo "🎉 НАЙДЕН .app ФАЙЛ ДЛЯ UPLOAD: $UPLOAD_PATH"
          ls -la "$UPLOAD_PATH"
          echo "UPLOAD_APP_PATH=$UPLOAD_PATH" >> $GITHUB_ENV
        else
          echo "❌ НЕ НАЙДЕН .app ФАЙЛ ДЛЯ UPLOAD"
        fi
    
    - name: Upload .app file (SUCCESS)
      uses: actions/upload-artifact@v4
      if: env.UPLOAD_APP_PATH != ''
      with:
        name: aladdin-ios-app-final
        path: ${{ env.UPLOAD_APP_PATH }}
        if-no-files-found: error
        retention-days: 30
    
    - name: Upload build directory (backup)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-directory-backup
        path: mobile_apps/ALADDIN_iOS/
        if-no-files-found: warn
        retention-days: 7
