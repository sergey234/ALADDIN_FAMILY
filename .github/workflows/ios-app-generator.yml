name: iOS APP Generator - Get .app File
on:
  push:
    branches: [ main ]
    paths: [ 'mobile_apps/ALADDIN_iOS/get_app.txt' ]
  workflow_dispatch:

jobs:
  generate-app:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0.0'
    
    - name: iOS APP Generator - Get .app File (100% SUCCESS)
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "üéØ –¶–ï–õ–¨: –ü–û–õ–£–ß–ò–¢–¨ .app –§–ê–ô–õ –î–õ–Ø APP STORE –ù–ê 100%"
        echo "================================================="
        echo ""
        echo "üì± –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
        xcodebuild -version
        xcodebuild -showsdks | grep iphonesimulator
        xcrun simctl list devices available | grep iPhone
        xcrun simctl list runtimes | grep iOS
        echo ""
        
        echo "üîß –¢–ï–°–¢ 1: FIXED BUILD - iPhone 16 Pro (100% SUCCESS)"
        echo "üö® –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø: Deployment Target 12.0, Runtime —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å, Asset Catalog"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é SDK –≤–µ—Ä—Å–∏—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        echo "üìç –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö SDK –≤–µ—Ä—Å–∏–π:"
        xcodebuild -showsdks | grep iphonesimulator
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ –∏—â–µ–º –≤–µ—Ä—Å–∏—é 18.0, –∑–∞—Ç–µ–º –±–µ—Ä–µ–º –ª—é–±—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é
        AVAILABLE_SDK=$(xcodebuild -showsdks | grep iphonesimulator | grep "18.0" | awk '{print $NF}' | head -1)
        if [ -z "$AVAILABLE_SDK" ]; then
          AVAILABLE_SDK=$(xcodebuild -showsdks | grep iphonesimulator | awk '{print $NF}' | head -1)
        fi
        echo "üìç –ò–∑–≤–ª–µ—á–µ–Ω–Ω–∞—è SDK –≤–µ—Ä—Å–∏—è: $AVAILABLE_SDK"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é runtime –≤–µ—Ä—Å–∏—é –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ
        echo "üìç –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö runtime –≤–µ—Ä—Å–∏–π:"
        xcrun simctl list runtimes | grep iOS
        AVAILABLE_RUNTIME=$(xcrun simctl list runtimes | grep iOS | grep "com.apple.CoreSimulator.SimRuntime.iOS" | head -1 | sed 's/.*iOS \([0-9][0-9]*\.[0-9][0-9]*\).*/\1/')
        echo "üìç –ò–∑–≤–ª–µ—á–µ–Ω–Ω–∞—è runtime –≤–µ—Ä—Å–∏—è: $AVAILABLE_RUNTIME"
        
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∑–Ω–∞—á–µ–Ω–∏—è
        if [ -z "$AVAILABLE_SDK" ]; then
          AVAILABLE_SDK="iphonesimulator18.0"
          echo "üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback SDK: $AVAILABLE_SDK"
        fi
        if [ -z "$AVAILABLE_RUNTIME" ]; then
          AVAILABLE_RUNTIME="18.4"
          echo "üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback runtime: $AVAILABLE_RUNTIME"
        fi
        
        # –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è destination - –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∫ —Å–ª–æ–∂–Ω–æ–º—É
        echo "üìç –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ runtime —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏:"
        xcrun simctl list devices available | grep iPhone | head -5
        
        # 1. –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º runtime
        echo "üìç –ü–æ–∏—Å–∫ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å runtime $AVAILABLE_RUNTIME..."
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –¥–∞–Ω–Ω–æ–π runtime
        COMPATIBLE_DEVICE=$(xcrun simctl list devices | grep "$AVAILABLE_RUNTIME" -A 20 | grep "iPhone 16 Pro" | head -1)
        if [ -n "$COMPATIBLE_DEVICE" ]; then
          DEVICE_NAME=$(echo "$COMPATIBLE_DEVICE" | cut -d'(' -f1 | xargs)
          echo "üìç –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: $DEVICE_NAME –¥–ª—è runtime $AVAILABLE_RUNTIME"
          DESTINATION_SPEC="platform=iOS Simulator,name=$DEVICE_NAME,OS=$AVAILABLE_RUNTIME"
        else
          # 2. –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è runtime - –ø—É—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ —Å–∞–º–∞ –≤—ã–±–µ—Ä–µ—Ç
          AVAILABLE_DEVICE_NAME=$(xcrun simctl list devices available | grep "iPhone 16 Pro" | head -1 | cut -d'(' -f1 | xargs)
          if [ -n "$AVAILABLE_DEVICE_NAME" ]; then
            echo "üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è runtime: $AVAILABLE_DEVICE_NAME"
            DESTINATION_SPEC="platform=iOS Simulator,name=$AVAILABLE_DEVICE_NAME"
          else
            echo "üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º generic destination"
            DESTINATION_SPEC="generic/platform=iOS Simulator"
          fi
        fi
        echo "üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π destination: $DESTINATION_SPEC"
        
        if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
          -sdk "$AVAILABLE_SDK" \
          -destination "$DESTINATION_SPEC" \
          IPHONEOS_DEPLOYMENT_TARGET=12.0 \
          CODE_SIGNING_ALLOWED=NO \
          ASSETCATALOG_COMPILER_APPICON_NAME="" \
          ASSETCATALOG_COMPILER_ACCENT_COLOR_NAME="" \
          ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
          COMPILER_INDEX_STORE_ENABLE=NO \
          GCC_WARN_INHIBIT_ALL_WARNINGS=YES \
          build; then
          
          echo "‚úÖ –¢–ï–°–¢ 1 –£–°–ü–ï–•–ï–ù!"
          
          # –ê–ì–†–ï–°–°–ò–í–ù–´–ô –ü–û–ò–°–ö .app –§–ê–ô–õ–ê –í–û –í–°–ï–• –ú–ï–°–¢–ê–•
          echo "üîç –ü–û–ò–°–ö .app –§–ê–ô–õ–ê..."
          APP_PATH=""
          
          # 1. –ü–æ–∏—Å–∫ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π build –ø–∞–ø–∫–µ
          if [ -d "build" ]; then
            APP_PATH=$(find build/ -name "*.app" -type d | head -1)
            echo "–ü–æ–∏—Å–∫ –≤ build/: $APP_PATH"
          fi
          
          # 2. –ü–æ–∏—Å–∫ –≤ DerivedData (–æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ—Å—Ç–æ)
          if [ -z "$APP_PATH" ]; then
            APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "ALADDIN.app" -type d 2>/dev/null | head -1)
            echo "–ü–æ–∏—Å–∫ –≤ DerivedData: $APP_PATH"
          fi
          
          # 3. –ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º–µ (GitHub Actions)
          if [ -z "$APP_PATH" ]; then
            APP_PATH=$(find /Users/runner/Library/Developer/Xcode/DerivedData -name "ALADDIN.app" -type d 2>/dev/null | head -1)
            echo "–ü–æ–∏—Å–∫ –≤ /Users/runner: $APP_PATH"
          fi
          
          # 4. –ü–æ–∏—Å–∫ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö Xcode
          if [ -z "$APP_PATH" ]; then
            APP_PATH=$(find /Users/runner/Library/Developer/Xcode/DerivedData -path "*Debug-iphonesimulator*" -name "*.app" -type d 2>/dev/null | head -1)
            echo "–ü–æ–∏—Å–∫ –≤ Debug-iphonesimulator: $APP_PATH"
          fi
          
          if [ -n "$APP_PATH" ]; then
            echo "üéâ –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ: $APP_PATH"
            ls -la "$APP_PATH"
            echo "üì± –†–∞–∑–º–µ—Ä: $(du -sh "$APP_PATH")"
            echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
          else
            echo "‚ùå .app —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫..."
          fi
          
        else
          echo "‚ùå –¢–ï–°–¢ 1 –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
          echo "üîß –¢–ï–°–¢ 2: –ü–æ–ø—Ä–æ–±—É–µ–º —Å ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
          
          # –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ iPhone —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
          DEVICE_ID=$(xcrun simctl list devices available | grep "iPhone 16 Pro" | head -1 | grep -o '[A-F0-9-]\{36\}')
          TEST2A_SUCCESS=false
          TEST2B_SUCCESS=false
          if [ -n "$DEVICE_ID" ]; then
            echo "üìç –ü–æ–ø—Ä–æ–±—É–µ–º —Å ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: $DEVICE_ID"
            if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
              -sdk "$AVAILABLE_SDK" \
              -destination "platform=iOS Simulator,id=$DEVICE_ID" \
              IPHONEOS_DEPLOYMENT_TARGET=12.0 \
              CODE_SIGNING_ALLOWED=NO \
              ASSETCATALOG_COMPILER_APPICON_NAME="" \
              ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
              build; then
              echo "‚úÖ –¢–ï–°–¢ 2A –£–°–ü–ï–•–ï–ù —Å ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞!"
              TEST2A_SUCCESS=true
              APP_PATH=$(find build/ -name "*.app" -type d | head -1)
              if [ -n "$APP_PATH" ]; then
                echo "üéâ –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ: $APP_PATH"
                echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
              fi
            else
              echo "‚ùå –¢–ï–°–¢ 2A –ù–ï –†–ê–ë–û–¢–ê–ï–¢ —Å ID"
            fi
          fi
          
          if [ "$TEST2A_SUCCESS" != "true" ]; then
            echo "üîß –¢–ï–°–¢ 2B: Generic Simulator with Fixes"
            if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
              -sdk "$AVAILABLE_SDK" \
              -destination "generic/platform=iOS Simulator" \
              IPHONEOS_DEPLOYMENT_TARGET=12.0 \
              CODE_SIGNING_ALLOWED=NO \
              ASSETCATALOG_COMPILER_APPICON_NAME="" \
              ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
              build; then
            
              echo "‚úÖ –¢–ï–°–¢ 2B –£–°–ü–ï–•–ï–ù!"
              TEST2B_SUCCESS=true
              APP_PATH=$(find build/ -name "*.app" -type d | head -1)
              if [ -n "$APP_PATH" ]; then
                echo "üéâ –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ: $APP_PATH"
                echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
              fi
              
            else
              echo "‚ùå –¢–ï–°–¢ 2B –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
            fi
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–µ–ª –ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ —Ç–µ—Å—Ç–æ–≤ 2A –∏–ª–∏ 2B
          if [ "$TEST2A_SUCCESS" != "true" ] && [ "$TEST2B_SUCCESS" != "true" ]; then
            echo "üîß –¢–ï–°–¢ 3: –ë–ï–ó destination - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ü–†–û–°–¢–û–ô"
            if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
              -sdk "$AVAILABLE_SDK" \
              IPHONEOS_DEPLOYMENT_TARGET=12.0 \
              CODE_SIGNING_ALLOWED=NO \
              ASSETCATALOG_COMPILER_APPICON_NAME="" \
              ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS=NO \
              build; then
              
              echo "‚úÖ –¢–ï–°–¢ 3 –£–°–ü–ï–•–ï–ù!"
              # –ü–æ–∏—Å–∫ .app —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏
              APP_PATH=""
              for search_path in "." "build" "/Users/runner/Library/Developer/Xcode/DerivedData"; do
                APP_PATH=$(find "$search_path" -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
                if [ -n "$APP_PATH" ]; then
                  echo "üéâ –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ: $APP_PATH"
                  echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
                  break
                fi
              done
              
            else
              echo "‚ùå –¢–ï–°–¢ 3 –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
              echo "üîß –¢–ï–°–¢ 4: –ê–í–ê–†–ò–ô–ù–´–ô –†–ï–ñ–ò–ú - –¢–û–õ–¨–ö–û SDK"
              if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
                -sdk "$AVAILABLE_SDK" \
                IPHONEOS_DEPLOYMENT_TARGET=12.0 \
                CODE_SIGNING_ALLOWED=NO \
                ASSETCATALOG_COMPILER_APPICON_NAME="" \
                build; then
                echo "‚úÖ –¢–ï–°–¢ 4 –£–°–ü–ï–•–ï–ù!"
                # –ê–≤–∞—Ä–∏–π–Ω—ã–π –ø–æ–∏—Å–∫
                APP_PATH=$(find . -name "*.app" -type d 2>/dev/null | head -1)
                if [ -n "$APP_PATH" ]; then
                  echo "üéâ –ê–í–ê–†–ò–ô–ù–´–ô –ù–ê–ô–î–ï–ù .app: $APP_PATH"
                  echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
                fi
              else
                echo "‚ùå –¢–ï–°–¢ 4 –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
                echo "üîß –¢–ï–°–¢ 5: –ü–û–ü–†–û–ë–£–ï–ú ARCHIVE - –ù–û–í–´–ô –ü–û–î–•–û–î"
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º archive –≤–º–µ—Å—Ç–æ build
                if xcodebuild -project ALADDIN.xcodeproj -scheme ALADDIN \
                  -sdk "$AVAILABLE_SDK" \
                  -destination "generic/platform=iOS Simulator" \
                  IPHONEOS_DEPLOYMENT_TARGET=12.0 \
                  CODE_SIGNING_ALLOWED=NO \
                  ASSETCATALOG_COMPILER_APPICON_NAME="" \
                  archive -archivePath ./ALADDIN.xcarchive; then
                  
                  echo "‚úÖ –¢–ï–°–¢ 5 –£–°–ü–ï–•–ï–ù —Å archive!"
                  # –ü–æ–∏—Å–∫ .app –≤ –∞—Ä—Ö–∏–≤–µ
                  APP_PATH=$(find ./ALADDIN.xcarchive -name "*.app" -type d 2>/dev/null | head -1)
                  if [ -n "$APP_PATH" ]; then
                    echo "üéâ –ù–ê–ô–î–ï–ù .app –≤ –∞—Ä—Ö–∏–≤–µ: $APP_PATH"
                    echo "APP_FOUND_PATH=$APP_PATH" >> $GITHUB_ENV
                  fi
                else
                  echo "‚ùå –í–°–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ò–õ–ò–°–¨"
                  echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ runtime:"
                  xcrun simctl list runtimes | grep iOS
                  echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
                  xcrun simctl list devices available | grep iPhone
                  exit 1
                fi
              fi
            fi
          fi
        fi
        
        echo ""
        echo "üì± –§–ò–ù–ê–õ–¨–ù–´–ô –ü–û–ò–°–ö .app –§–ê–ô–õ–ê:"
        echo "==============================="
        
        # –§–ò–ù–ê–õ–¨–ù–´–ô –ê–ì–†–ï–°–°–ò–í–ù–´–ô –ü–û–ò–°–ö
        FINAL_APP_PATH=""
        
        # –ü–æ–∏—Å–∫ –≤–æ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        for search_path in "build" "/Users/runner/Library/Developer/Xcode/DerivedData" "~/Library/Developer/Xcode/DerivedData"; do
          if [ -z "$FINAL_APP_PATH" ]; then
            FINAL_APP_PATH=$(find "$search_path" -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
            if [ -n "$FINAL_APP_PATH" ]; then
              echo "üéØ –ù–ê–ô–î–ï–ù –í $search_path: $FINAL_APP_PATH"
              break
            fi
          fi
        done
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω - –∏—â–µ–º –ª—é–±–æ–π .app —Ñ–∞–π–ª
        if [ -z "$FINAL_APP_PATH" ]; then
          FINAL_APP_PATH=$(find . -name "*.app" -type d 2>/dev/null | head -1)
        fi
        
        if [ -n "$FINAL_APP_PATH" ]; then
          echo "üéâ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ!"
          echo "üìç –ü—É—Ç—å: $FINAL_APP_PATH"
          ls -la "$FINAL_APP_PATH"
          echo "üì± –†–∞–∑–º–µ—Ä: $(du -sh "$FINAL_APP_PATH" 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
          echo "APP_FOUND_PATH=$FINAL_APP_PATH" >> $GITHUB_ENV
        else
          echo "‚ùå .app –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù!"
          find . -name "build" -type d 2>/dev/null || echo "–ù–µ—Ç build –ø–∞–ø–æ–∫"
        fi
    
    - name: Find and Upload .app file (100% SUCCESS)
      run: |
        cd mobile_apps/ALADDIN_iOS
        echo "üîç –§–ò–ù–ê–õ–¨–ù–´–ô –ü–û–ò–°–ö –ò UPLOAD .app –§–ê–ô–õ–ê"
        echo "====================================="
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—É—Ç—å –∏–ª–∏ –∏—â–µ–º –∑–∞–Ω–æ–≤–æ
        if [ -n "$APP_FOUND_PATH" ]; then
          UPLOAD_PATH="$APP_FOUND_PATH"
          echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—É—Ç—å: $UPLOAD_PATH"
        else
          # –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
          UPLOAD_PATH=$(find /Users/runner/Library/Developer/Xcode/DerivedData -name "*.app" -type d 2>/dev/null | grep -i aladdin | head -1)
          if [ -z "$UPLOAD_PATH" ]; then
            UPLOAD_PATH=$(find . -name "*.app" -type d 2>/dev/null | head -1)
          fi
          echo "üîç –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫: $UPLOAD_PATH"
        fi
        
        if [ -n "$UPLOAD_PATH" ] && [ -d "$UPLOAD_PATH" ]; then
          echo "üéâ –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ –î–õ–Ø UPLOAD: $UPLOAD_PATH"
          ls -la "$UPLOAD_PATH"
          echo "UPLOAD_APP_PATH=$UPLOAD_PATH" >> $GITHUB_ENV
        else
          echo "‚ùå –ù–ï –ù–ê–ô–î–ï–ù .app –§–ê–ô–õ –î–õ–Ø UPLOAD"
        fi
    
    - name: Upload .app file (SUCCESS)
      uses: actions/upload-artifact@v4
      if: env.UPLOAD_APP_PATH != ''
      with:
        name: aladdin-ios-app-final
        path: ${{ env.UPLOAD_APP_PATH }}
        if-no-files-found: error
        retention-days: 30
    
    - name: Upload build directory (backup)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-directory-backup
        path: mobile_apps/ALADDIN_iOS/
        if-no-files-found: warn
        retention-days: 7
