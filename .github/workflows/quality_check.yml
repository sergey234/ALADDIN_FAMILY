name: Quality Check A+

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00 UTC
    - cron: '0 2 * * *'

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install pylint
        pip install mypy
        pip install black
        pip install isort
        
    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run pylint
      run: |
        pylint --disable=C0114,C0116 --max-line-length=127 --fail-under=8.0 security/ core/ || true
        
    - name: Run mypy
      run: |
        mypy --ignore-missing-imports --no-strict-optional security/ core/ || true
        
    - name: Run black
      run: |
        black --check --line-length=127 security/ core/ || true
        
    - name: Run isort
      run: |
        isort --check-only --profile black security/ core/ || true
        
    - name: Run custom quality check
      run: |
        python3 scripts/quality_check_all.py
        
    - name: Upload quality report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-report
        path: data/quality_report_a_plus.json
        
    - name: Comment PR with quality results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const report = JSON.parse(fs.readFileSync('data/quality_report_a_plus.json', 'utf8'));
            const quality = report.overall_quality;
            const files = report.total_files;
            const errors = report.total_errors;
            const warnings = report.total_warnings;
            
            const comment = `## üìä Quality Check Results
            
            **Overall Quality:** ${quality}/100
            **Files Checked:** ${files}
            **Errors:** ${errors}
            **Warnings:** ${warnings}
            
            ${quality >= 95 ? '‚úÖ **A+ Quality Achieved!**' : '‚ö†Ô∏è **Quality needs improvement**'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not read quality report');
          }