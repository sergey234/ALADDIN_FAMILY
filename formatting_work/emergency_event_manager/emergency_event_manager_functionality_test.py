#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ EmergencyEventManager
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã –ø–æ—Å–ª–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import sys
import os
sys.path.append('/Users/sergejhlystov/ALADDIN_NEW')

from datetime import datetime
from security.ai_agents.emergency_event_manager import EmergencyEventManager
from security.ai_agents.emergency_models import EmergencyType, EmergencySeverity, ResponseStatus

def test_emergency_event_manager():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ EmergencyEventManager"""
    
    print("üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢ –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò EmergencyEventManager")
    print("=" * 60)
    
    try:
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        print("1Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞...")
        manager = EmergencyEventManager()
        print("‚úÖ EmergencyEventManager —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # 2. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è...")
        event = manager.create_event(
            emergency_type=EmergencyType.SECURITY,
            severity=EmergencySeverity.HIGH,
            location={"lat": 55.7558, "lon": 37.6176, "address": "–ú–æ—Å–∫–≤–∞"},
            description="Security breach detected in main system",
            user_id="test_user_123"
        )
        print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {event.event_id}")
        
        # 3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è...")
        retrieved_event = manager.get_event(event.event_id)
        if retrieved_event and retrieved_event.event_id == event.event_id:
            print("‚úÖ –°–æ–±—ã—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è")
            return False
        
        # 4. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞...")
        success = manager.update_event_status(event.event_id, ResponseStatus.IN_PROGRESS)
        if success:
            print("‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
            return False
        
        # 5. –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É...")
        events_by_type = manager.get_events_by_type(EmergencyType.SECURITY)
        if len(events_by_type) >= 1:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(events_by_type)} —Å–æ–±—ã—Ç–∏–π —Ç–∏–ø–∞ SECURITY")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É")
            return False
        
        # 6. –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏
        print("\n6Ô∏è‚É£ –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏...")
        events_by_severity = manager.get_events_by_severity(EmergencySeverity.HIGH)
        if len(events_by_severity) >= 1:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(events_by_severity)} —Å–æ–±—ã—Ç–∏–π –≤—ã—Å–æ–∫–æ–π —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏")
            return False
        
        # 7. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π
        print("\n7Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π...")
        recent_events = manager.get_recent_events(hours=1)
        if len(recent_events) >= 1:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recent_events)} –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π")
            return False
        
        # 8. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print("\n8Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        stats = manager.get_event_statistics()
        if stats and 'total_events' in stats:
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: {stats['total_events']} —Å–æ–±—ã—Ç–∏–π")
            print(f"   - –†–µ—à–µ–Ω–Ω—ã—Ö: {stats['resolved_events']}")
            print(f"   - –í –æ–∂–∏–¥–∞–Ω–∏–∏: {stats['pending_events']}")
            print(f"   - –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—à–µ–Ω–∏—è: {stats['resolution_rate']:.1f}%")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
            return False
        
        # 9. –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π
        print("\n9Ô∏è‚É£ –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π...")
        cleaned_count = manager.cleanup_old_events(days=0)  # –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
        print(f"‚úÖ –û—á–∏—â–µ–Ω–æ {cleaned_count} —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π")
        
        # 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\nüîü –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
        final_stats = manager.get_event_statistics()
        if final_stats['total_events'] == 0:
            print("‚úÖ –í—Å–µ —Å–æ–±—ã—Ç–∏—è –æ—á–∏—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å {final_stats['total_events']} —Å–æ–±—ã—Ç–∏–π")
        
        print("\n" + "=" * 60)
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ EmergencyEventManager –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–µ–Ω")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ï: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_emergency_event_manager()
    sys.exit(0 if success else 1)