#!/usr/bin/env python3
"""
–¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–´–• –ú–ï–¢–û–î–û–í
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta
from typing import Dict, Any, List

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.append('/Users/sergejhlystov/ALADDIN_NEW')

try:
    from security.ai_agents.family_communication_replacement import (
        FamilyRole,
        MessageType,
        MessagePriority,
        CommunicationChannel,
        FamilyMember,
        Message,
        ExternalAPIHandler,
        FamilyCommunicationReplacement
    )
    print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

async def test_enhanced_family_member():
    """–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ FamilyMember"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ FamilyMember:")
    print("-" * 50)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —á–ª–µ–Ω–∞ —Å–µ–º—å–∏
        member = FamilyMember(
            id="test_001",
            name="–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á",
            role=FamilyRole.PARENT,
            phone="+7-999-123-45-67",
            security_level=3
        )
        
        # –¢–µ—Å—Ç __str__ –∏ __repr__
        print(f"  ‚úÖ __str__: {str(member)}")
        print(f"  ‚úÖ __repr__: {repr(member)}")
        
        # –¢–µ—Å—Ç __eq__
        member2 = FamilyMember(
            id="test_001",
            name="–î—Ä—É–≥–æ–π –¢–µ—Å—Ç",
            role=FamilyRole.CHILD
        )
        print(f"  ‚úÖ __eq__ (same id): {member == member2}")
        
        # –¢–µ—Å—Ç —Å–≤–æ–π—Å—Ç–≤
        print(f"  ‚úÖ is_available: {member.is_available}")
        print(f"  ‚úÖ has_emergency_contacts: {member.has_emergency_contacts}")
        
        # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        result = member.add_emergency_contact("+7-999-111-11-11")
        print(f"  ‚úÖ add_emergency_contact: {result}")
        print(f"  ‚úÖ has_emergency_contacts after add: {member.has_emergency_contacts}")
        
        result = member.remove_emergency_contact("+7-999-111-11-11")
        print(f"  ‚úÖ remove_emergency_contact: {result}")
        
        # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        member.update_location(55.7558, 37.6176)
        print(f"  ‚úÖ update_location: {member.location}")
        
        # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω
        member.set_online_status(True)
        print(f"  ‚úÖ set_online_status: {member.is_online}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_enhanced_message():
    """–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ Message"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ Message:")
    print("-" * 50)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = Message(
            id="msg_001",
            sender_id="test_001",
            recipient_ids=["test_002"],
            content="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
            message_type=MessageType.TEXT,
            priority=MessagePriority.HIGH,
            timestamp=datetime.now(),
            channel=CommunicationChannel.TELEGRAM
        )
        
        # –¢–µ—Å—Ç __str__ –∏ __repr__
        print(f"  ‚úÖ __str__: {str(message)}")
        print(f"  ‚úÖ __repr__: {repr(message)}")
        
        # –¢–µ—Å—Ç __eq__
        message2 = Message(
            id="msg_001",
            sender_id="test_003",
            recipient_ids=["test_004"],
            content="–î—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            message_type=MessageType.TEXT,
            priority=MessagePriority.NORMAL,
            timestamp=datetime.now(),
            channel=CommunicationChannel.TELEGRAM
        )
        print(f"  ‚úÖ __eq__ (same id): {message == message2}")
        
        # –¢–µ—Å—Ç —Å–≤–æ–π—Å—Ç–≤
        print(f"  ‚úÖ is_urgent: {message.is_urgent}")
        print(f"  ‚úÖ is_emergency: {message.is_emergency}")
        print(f"  ‚úÖ age_seconds: {message.age_seconds:.2f}")
        
        # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º
        message.mark_as_delivered()
        print(f"  ‚úÖ mark_as_delivered: {message.is_delivered}")
        
        message.mark_as_read()
        print(f"  ‚úÖ mark_as_read: {message.is_read}")
        
        # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        message.add_metadata("encrypted", True)
        message.add_metadata("priority", "high")
        print(f"  ‚úÖ add_metadata: {message.metadata}")
        
        value = message.get_metadata("encrypted", False)
        print(f"  ‚úÖ get_metadata: {value}")
        
        # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        is_recipient = message.is_recipient("test_002")
        print(f"  ‚úÖ is_recipient: {is_recipient}")
        
        result = message.add_recipient("test_003")
        print(f"  ‚úÖ add_recipient: {result}")
        
        result = message.remove_recipient("test_003")
        print(f"  ‚úÖ remove_recipient: {result}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_enhanced_external_api_handler():
    """–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ ExternalAPIHandler"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ ExternalAPIHandler:")
    print("-" * 50)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        config = {
            "telegram_token": "test_token",
            "discord_token": "test_token",
            "twilio_sid": "test_sid",
            "twilio_token": "test_token"
        }
        
        handler = ExternalAPIHandler(config)
        
        # –¢–µ—Å—Ç __str__ –∏ __repr__
        print(f"  ‚úÖ __str__: {str(handler)}")
        print(f"  ‚úÖ __repr__: {repr(handler)}")
        
        # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        print(f"  ‚úÖ is_telegram_available: {handler.is_telegram_available()}")
        print(f"  ‚úÖ is_discord_available: {handler.is_discord_available()}")
        print(f"  ‚úÖ is_sms_available: {handler.is_sms_available()}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        channels = handler.get_available_channels()
        print(f"  ‚úÖ get_available_channels: {channels}")
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—à–∏–±–æ–∫
        stats = handler.get_error_stats()
        print(f"  ‚úÖ get_error_stats: {stats}")
        
        # –¢–µ—Å—Ç —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        handler.reset_error_stats()
        print(f"  ‚úÖ reset_error_stats: –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_enhanced_family_communication_replacement():
    """–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ FamilyCommunicationReplacement"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ FamilyCommunicationReplacement:")
    print("-" * 50)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        config = {
            "telegram_token": "test_token",
            "discord_token": "test_token",
            "twilio_sid": "test_sid",
            "twilio_token": "test_token"
        }
        
        hub = FamilyCommunicationReplacement("family_test", config)
        
        # –¢–µ—Å—Ç __str__ –∏ __repr__
        print(f"  ‚úÖ __str__: {str(hub)}")
        print(f"  ‚úÖ __repr__: {repr(hub)}")
        
        # –¢–µ—Å—Ç __len__, __iter__, __contains__
        print(f"  ‚úÖ __len__: {len(hub)}")
        print(f"  ‚úÖ __contains__ (empty): {'test_001' in hub}")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏
        parent = FamilyMember(
            id="parent_001",
            name="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            role=FamilyRole.PARENT,
            phone="+7-999-123-45-67"
        )
        
        child = FamilyMember(
            id="child_001",
            name="–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞",
            role=FamilyRole.CHILD,
            phone="+7-999-123-45-68"
        )
        
        await hub.add_family_member(parent)
        await hub.add_family_member(child)
        
        print(f"  ‚úÖ __len__ after add: {len(hub)}")
        print(f"  ‚úÖ __contains__ (parent): {'parent_001' in hub}")
        
        # –¢–µ—Å—Ç –∏—Ç–µ—Ä–∞—Ü–∏–∏
        members = list(hub)
        print(f"  ‚úÖ __iter__: {len(members)} members")
        
        # –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        member = hub.get_member("parent_001")
        print(f"  ‚úÖ get_member: {member.name if member else 'None'}")
        
        parents = hub.get_members_by_role(FamilyRole.PARENT)
        print(f"  ‚úÖ get_members_by_role: {len(parents)} parents")
        
        online_members = hub.get_online_members()
        print(f"  ‚úÖ get_online_members: {len(online_members)} online")
        
        emergency_contacts = hub.get_emergency_contacts()
        print(f"  ‚úÖ get_emergency_contacts: {len(emergency_contacts)} contacts")
        
        # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —á–ª–µ–Ω–∞ —Å–µ–º—å–∏
        result = hub.remove_family_member("child_001")
        print(f"  ‚úÖ remove_family_member: {result}")
        
        # –¢–µ—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        async with hub:
            print(f"  ‚úÖ __aenter__: {hub.is_active}")
        print(f"  ‚úÖ __aexit__: {hub.is_active}")
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –∑–¥–æ—Ä–æ–≤—å—è
        health = hub.get_health_status()
        print(f"  ‚úÖ get_health_status: {len(health)} fields")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_validation_and_error_handling():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫:")
    print("-" * 50)
    
    try:
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ FamilyMember
        try:
            invalid_member = FamilyMember(
                id="",
                name="",
                role=FamilyRole.PARENT,
                security_level=10
            )
            print("  ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è FamilyMember –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
        except ValueError as e:
            print(f"  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è FamilyMember: {e}")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Message
        try:
            invalid_message = Message(
                id="",
                sender_id="",
                recipient_ids=[],
                content="",
                message_type=MessageType.TEXT,
                priority=MessagePriority.NORMAL,
                timestamp=datetime.now(),
                channel=CommunicationChannel.TELEGRAM
            )
            print("  ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è Message –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
        except ValueError as e:
            print(f"  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è Message: {e}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–´–• –ú–ï–¢–û–î–û–í")
    print("=" * 60)
    
    results = []
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    results.append(await test_enhanced_family_member())
    results.append(await test_enhanced_message())
    results.append(await test_enhanced_external_api_handler())
    results.append(await test_enhanced_family_communication_replacement())
    results.append(await test_validation_and_error_handling())
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 60)
    
    passed = sum(results)
    total = len(results)
    
    print(f"  –¢–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed/total)*100:.1f}%")
    
    if passed == total:
        print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –£–õ–£–ß–®–ï–ù–ù–´–• –ú–ï–¢–û–î–û–í –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        return True
    else:
        print(f"\n‚ö†Ô∏è {total-passed} –¢–ï–°–¢–û–í –ü–†–û–í–ê–õ–ï–ù–û")
        return False

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)