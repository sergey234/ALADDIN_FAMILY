#!/usr/bin/env python3
"""
–ü–û–õ–ù–´–ô –¢–ï–°–¢ –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
–≠–¢–ê–ü 8.1: –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤, –≤—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–æ–≤, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta
from typing import Dict, Any, List

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.append('/Users/sergejhlystov/ALADDIN_NEW')

try:
    from security.ai_agents.family_communication_replacement import (
        FamilyRole,
        MessageType,
        MessagePriority,
        CommunicationChannel,
        FamilyMember,
        Message,
        ExternalAPIHandler,
        FamilyCommunicationReplacement,
        family_communication_replacement
    )
    print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

async def test_family_member_comprehensive():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç FamilyMember"""
    print("\nüîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ FamilyMember:")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
        member = FamilyMember(
            id="test_001",
            name="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            role=FamilyRole.PARENT,
            phone="+7-999-123-45-67",
            email="ivan@example.com",
            telegram_id="@ivan_ivanov",
            discord_id="ivan#1234",
            location=(55.7558, 37.6176),
            is_online=True,
            last_seen=datetime.now(),
            preferences={"theme": "dark", "language": "ru"},
            security_level=3,
            emergency_contacts=["+7-999-111-11-11"]
        )
        
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ: {member.name}")
        print(f"  ‚úÖ ID: {member.id}")
        print(f"  ‚úÖ –†–æ–ª—å: {member.role.value}")
        print(f"  ‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω: {member.phone}")
        print(f"  ‚úÖ Email: {member.email}")
        print(f"  ‚úÖ Telegram: {member.telegram_id}")
        print(f"  ‚úÖ Discord: {member.discord_id}")
        print(f"  ‚úÖ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {member.location}")
        print(f"  ‚úÖ –û–Ω–ª–∞–π–Ω: {member.is_online}")
        print(f"  ‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑: {member.last_seen}")
        print(f"  ‚úÖ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {member.preferences}")
        print(f"  ‚úÖ –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {member.security_level}")
        print(f"  ‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã: {member.emergency_contacts}")
        
        # –¢–µ—Å—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
        print(f"  ‚úÖ __str__: {str(member)}")
        print(f"  ‚úÖ __repr__: {repr(member)}")
        print(f"  ‚úÖ is_available: {member.is_available}")
        print(f"  ‚úÖ has_emergency_contacts: {member.has_emergency_contacts}")
        
        # –¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        result = member.add_emergency_contact("+7-999-222-22-22")
        print(f"  ‚úÖ add_emergency_contact: {result}")
        
        result = member.remove_emergency_contact("+7-999-111-11-11")
        print(f"  ‚úÖ remove_emergency_contact: {result}")
        
        # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        member.update_location(55.7600, 37.6200)
        print(f"  ‚úÖ update_location: {member.location}")
        
        # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        member.set_online_status(False)
        print(f"  ‚úÖ set_online_status: {member.is_online}")
        
        # –¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        member2 = FamilyMember(
            id="test_001",
            name="–î—Ä—É–≥–æ–π –ò–≤–∞–Ω",
            role=FamilyRole.CHILD
        )
        print(f"  ‚úÖ __eq__: {member == member2}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_message_comprehensive():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç Message"""
    print("\nüîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ Message:")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
        message = Message(
            id="msg_001",
            sender_id="test_001",
            recipient_ids=["test_002", "test_003"],
            content="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã —Å–µ–º–µ–π–Ω–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏",
            message_type=MessageType.TEXT,
            priority=MessagePriority.HIGH,
            timestamp=datetime.now(),
            channel=CommunicationChannel.TELEGRAM,
            metadata={"encrypted": True, "priority": "high"},
            is_encrypted=True,
            is_delivered=False,
            is_read=False
        )
        
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ: {message.id}")
        print(f"  ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message.sender_id}")
        print(f"  ‚úÖ –ü–æ–ª—É—á–∞—Ç–µ–ª–∏: {message.recipient_ids}")
        print(f"  ‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {message.content[:50]}...")
        print(f"  ‚úÖ –¢–∏–ø: {message.message_type.value}")
        print(f"  ‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {message.priority.value}")
        print(f"  ‚úÖ –í—Ä–µ–º—è: {message.timestamp}")
        print(f"  ‚úÖ –ö–∞–Ω–∞–ª: {message.channel.value}")
        print(f"  ‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {message.metadata}")
        print(f"  ‚úÖ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ: {message.is_encrypted}")
        print(f"  ‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {message.is_delivered}")
        print(f"  ‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {message.is_read}")
        
        # –¢–µ—Å—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
        print(f"  ‚úÖ __str__: {str(message)}")
        print(f"  ‚úÖ __repr__: {repr(message)}")
        print(f"  ‚úÖ is_urgent: {message.is_urgent}")
        print(f"  ‚úÖ is_emergency: {message.is_emergency}")
        print(f"  ‚úÖ age_seconds: {message.age_seconds:.2f}")
        
        # –¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º
        message.mark_as_delivered()
        print(f"  ‚úÖ mark_as_delivered: {message.is_delivered}")
        
        message.mark_as_read()
        print(f"  ‚úÖ mark_as_read: {message.is_read}")
        
        # –¢–µ—Å—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        message.add_metadata("test_key", "test_value")
        print(f"  ‚úÖ add_metadata: {message.metadata}")
        
        value = message.get_metadata("test_key", "default")
        print(f"  ‚úÖ get_metadata: {value}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        is_recipient = message.is_recipient("test_002")
        print(f"  ‚úÖ is_recipient: {is_recipient}")
        
        result = message.add_recipient("test_004")
        print(f"  ‚úÖ add_recipient: {result}")
        
        result = message.remove_recipient("test_004")
        print(f"  ‚úÖ remove_recipient: {result}")
        
        # –¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        message2 = Message(
            id="msg_001",
            sender_id="test_003",
            recipient_ids=["test_004"],
            content="–î—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            message_type=MessageType.TEXT,
            priority=MessagePriority.NORMAL,
            timestamp=datetime.now(),
            channel=CommunicationChannel.TELEGRAM
        )
        print(f"  ‚úÖ __eq__: {message == message2}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_external_api_handler_comprehensive():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç ExternalAPIHandler"""
    print("\nüîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ ExternalAPIHandler:")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        config = {
            "telegram_token": "1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "discord_token": "MTIzNDU2Nzg5MDEyMzQ1Njc4OQ.GhIjKl.MnOpQrStUvWxYzAbCdEfGhIjKlMnOpQrStUvWx",
            "twilio_sid": "AC1234567890abcdef1234567890abcdef",
            "twilio_token": "1234567890abcdef1234567890abcdef",
            "additional_config": {"timeout": 30, "retries": 3}
        }
        
        handler = ExternalAPIHandler(config)
        
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ: {handler}")
        print(f"  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {len(handler.config)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print(f"  ‚úÖ Telegram —Ç–æ–∫–µ–Ω: {'‚úì' if handler.telegram_token else '‚úó'}")
        print(f"  ‚úÖ Discord —Ç–æ–∫–µ–Ω: {'‚úì' if handler.discord_token else '‚úó'}")
        print(f"  ‚úÖ Twilio SID: {'‚úì' if handler.twilio_sid else '‚úó'}")
        print(f"  ‚úÖ Twilio —Ç–æ–∫–µ–Ω: {'‚úì' if handler.twilio_token else '‚úó'}")
        
        # –¢–µ—Å—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
        print(f"  ‚úÖ __str__: {str(handler)}")
        print(f"  ‚úÖ __repr__: {repr(handler)}")
        
        # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        print(f"  ‚úÖ is_telegram_available: {handler.is_telegram_available()}")
        print(f"  ‚úÖ is_discord_available: {handler.is_discord_available()}")
        print(f"  ‚úÖ is_sms_available: {handler.is_sms_available()}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤
        channels = handler.get_available_channels()
        print(f"  ‚úÖ get_available_channels: {channels}")
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—à–∏–±–æ–∫
        stats = handler.get_error_stats()
        print(f"  ‚úÖ get_error_stats: {stats}")
        
        # –¢–µ—Å—Ç —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        handler.reset_error_stats()
        print(f"  ‚úÖ reset_error_stats: –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_family_communication_replacement_comprehensive():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç FamilyCommunicationReplacement"""
    print("\nüîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ FamilyCommunicationReplacement:")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        config = {
            "telegram_token": "1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "discord_token": "MTIzNDU2Nzg5MDEyMzQ1Njc4OQ.GhIjKl.MnOpQrStUvWxYzAbCdEfGhIjKlMnOpQrStUvWx",
            "twilio_sid": "AC1234567890abcdef1234567890abcdef",
            "twilio_token": "1234567890abcdef1234567890abcdef",
            "notification_manager": None,
            "alert_system": None
        }
        
        hub = FamilyCommunicationReplacement("family_test_001", config)
        
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ: {hub}")
        print(f"  ‚úÖ ID —Å–µ–º—å–∏: {hub.family_id}")
        print(f"  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {len(hub.config)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print(f"  ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {hub.stats}")
        print(f"  ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: {hub.is_active}")
        
        # –¢–µ—Å—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        print(f"  ‚úÖ __str__: {str(hub)}")
        print(f"  ‚úÖ __repr__: {repr(hub)}")
        print(f"  ‚úÖ __len__: {len(hub)}")
        print(f"  ‚úÖ __contains__ (empty): {'test_001' in hub}")
        
        # –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        await hub.start()
        print(f"  ‚úÖ start: {hub.is_active}")
        
        await hub.stop()
        print(f"  ‚úÖ stop: {hub.is_active}")
        
        # –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏
        parent = FamilyMember(
            id="parent_001",
            name="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            role=FamilyRole.PARENT,
            phone="+7-999-123-45-67",
            security_level=3
        )
        
        child = FamilyMember(
            id="child_001",
            name="–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞",
            role=FamilyRole.CHILD,
            phone="+7-999-123-45-68",
            security_level=2
        )
        
        result = await hub.add_family_member(parent)
        print(f"  ‚úÖ add_family_member (parent): {result}")
        
        result = await hub.add_family_member(child)
        print(f"  ‚úÖ add_family_member (child): {result}")
        
        # –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        print(f"  ‚úÖ __len__ after add: {len(hub)}")
        print(f"  ‚úÖ __contains__ (parent): {'parent_001' in hub}")
        
        # –¢–µ—Å—Ç –∏—Ç–µ—Ä–∞—Ü–∏–∏
        members = list(hub)
        print(f"  ‚úÖ __iter__: {len(members)} members")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏
        member = hub.get_member("parent_001")
        print(f"  ‚úÖ get_member: {member.name if member else 'None'}")
        
        parents = hub.get_members_by_role(FamilyRole.PARENT)
        print(f"  ‚úÖ get_members_by_role: {len(parents)} parents")
        
        online_members = hub.get_online_members()
        print(f"  ‚úÖ get_online_members: {len(online_members)} online")
        
        emergency_contacts = hub.get_emergency_contacts()
        print(f"  ‚úÖ get_emergency_contacts: {len(emergency_contacts)} contacts")
        
        # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = Message(
            id="test_msg_001",
            sender_id="parent_001",
            recipient_ids=["child_001"],
            content="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            message_type=MessageType.TEXT,
            priority=MessagePriority.NORMAL,
            timestamp=datetime.now(),
            channel=CommunicationChannel.TELEGRAM
        )
        result = await hub.send_message(message)
        print(f"  ‚úÖ send_message: {result}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        messages = hub.get_messages_by_sender("parent_001")
        print(f"  ‚úÖ get_messages_by_sender: {len(messages)} messages")
        
        messages = hub.get_messages_by_recipient("child_001")
        print(f"  ‚úÖ get_messages_by_recipient: {len(messages)} messages")
        
        urgent_messages = hub.get_urgent_messages()
        print(f"  ‚úÖ get_urgent_messages: {len(urgent_messages)} messages")
        
        emergency_messages = hub.get_emergency_messages()
        print(f"  ‚úÖ get_emergency_messages: {len(emergency_messages)} messages")
        
        # –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        cleared = hub.clear_old_messages(0)  # –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        print(f"  ‚úÖ clear_old_messages: {cleared} messages cleared")
        
        # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —á–ª–µ–Ω–∞ —Å–µ–º—å–∏
        result = hub.remove_family_member("child_001")
        print(f"  ‚úÖ remove_family_member: {result}")
        
        # –¢–µ—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        async with hub:
            print(f"  ‚úÖ __aenter__: {hub.is_active}")
        print(f"  ‚úÖ __aexit__: {hub.is_active}")
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –∑–¥–æ—Ä–æ–≤—å—è
        health = hub.get_health_status()
        print(f"  ‚úÖ get_health_status: {len(health)} fields")
        for key, value in health.items():
            print(f"    - {key}: {value}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_family_communication_replacement_function():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ family_communication_replacement"""
    print("\nüîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ family_communication_replacement:")
    print("=" * 50)
    
    try:
        config = {
            "telegram_token": "1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "discord_token": "MTIzNDU2Nzg5MDEyMzQ1Njc4OQ.GhIjKl.MnOpQrStUvWxYzAbCdEfGhIjKlMnOpQrStUvWx",
            "twilio_sid": "AC1234567890abcdef1234567890abcdef",
            "twilio_token": "1234567890abcdef1234567890abcdef"
        }
        
        # –¢–µ—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è start
        result = await family_communication_replacement(
            family_id="family_test_002",
            config=config,
            action="start"
        )
        print(f"  ‚úÖ action=start: {result['status']}")
        print(f"    - message: {result['message']}")
        print(f"    - active: {result['active']}")
        
        # –¢–µ—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è status
        result = await family_communication_replacement(
            family_id="family_test_002",
            config=config,
            action="status"
        )
        print(f"  ‚úÖ action=status: {result['status']}")
        print(f"    - health fields: {len(result['health'])}")
        
        # –¢–µ—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è add_member
        member_data = {
            "id": "member_001",
            "name": "–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á",
            "role": "PARENT",
            "phone": "+7-999-123-45-67",
            "security_level": 3
        }
        
        result = await family_communication_replacement(
            family_id="family_test_002",
            config=config,
            action="add_member",
            member_data=member_data
        )
        print(f"  ‚úÖ action=add_member: {result['status']}")
        print(f"    - message: {result['message']}")
        
        # –¢–µ—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è send_message
        result = await family_communication_replacement(
            family_id="family_test_002",
            config=config,
            action="send_message",
            sender_id="member_001",
            recipient_ids=["member_002"],
            content="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            message_type="TEXT",
            priority="NORMAL",
            channel="TELEGRAM"
        )
        print(f"  ‚úÖ action=send_message: {result['status']}")
        print(f"    - message: {result['message']}")
        
        # –¢–µ—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è stop
        result = await family_communication_replacement(
            family_id="family_test_002",
            config=config,
            action="stop"
        )
        print(f"  ‚úÖ action=stop: {result['status']}")
        print(f"    - message: {result['message']}")
        
        # –¢–µ—Å—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
        result = await family_communication_replacement(
            family_id="family_test_002",
            config=config,
            action="unknown_action"
        )
        print(f"  ‚úÖ action=unknown: {result['status']}")
        print(f"    - message: {result['message']}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_error_handling_comprehensive():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("\nüîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö:")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ FamilyMember
        print("  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ FamilyMember:")
        try:
            invalid_member = FamilyMember(
                id="",
                name="",
                role=FamilyRole.PARENT,
                security_level=10
            )
            print("    ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
        except ValueError as e:
            print(f"    ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è ID/name: {e}")
        
        try:
            invalid_member = FamilyMember(
                id="test",
                name="Test",
                role=FamilyRole.PARENT,
                security_level=0
            )
            print("    ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è security_level –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
        except ValueError as e:
            print(f"    ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è security_level: {e}")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Message
        print("  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Message:")
        try:
            invalid_message = Message(
                id="",
                sender_id="",
                recipient_ids=[],
                content="",
                message_type=MessageType.TEXT,
                priority=MessagePriority.NORMAL,
                timestamp=datetime.now(),
                channel=CommunicationChannel.TELEGRAM
            )
            print("    ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
        except ValueError as e:
            print(f"    ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è Message: {e}")
        
        # –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏–∏
        print("  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏–∏:")
        result = await family_communication_replacement(
            family_id="",
            config={},
            action="start"
        )
        print(f"    ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Å—Ç–æ–≥–æ family_id: {result['status']}")
        
        result = await family_communication_replacement(
            family_id="test",
            config={},
            action="send_message"
        )
        print(f"    ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {result['status']}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í")
    print("–≠–¢–ê–ü 8.1: –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤, –≤—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–æ–≤, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π")
    print("=" * 80)
    
    results = []
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    results.append(await test_family_member_comprehensive())
    results.append(await test_message_comprehensive())
    results.append(await test_external_api_handler_comprehensive())
    results.append(await test_family_communication_replacement_comprehensive())
    results.append(await test_family_communication_replacement_function())
    results.append(await test_error_handling_comprehensive())
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 80)
    
    passed = sum(results)
    total = len(results)
    
    print(f"  –¢–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed/total)*100:.1f}%")
    
    if passed == total:
        print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üéØ –≠–¢–ê–ü 8.1 –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        return True
    else:
        print(f"\n‚ö†Ô∏è {total-passed} –¢–ï–°–¢–û–í –ü–†–û–í–ê–õ–ï–ù–û")
        return False

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)